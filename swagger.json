{
    "swagger": "2.0",
    "info": {
        "title": "Introduction",
        "version": "",
        "description": "The APIv3 is a hypermedia REST API, a shorthand for \"Hypermedia As The Engine Of Application State\" (HATEOAS).\nThis means that each endpoint of this API will have links to other resources or actions defined in the resulting body.\n\nThese related resources and actions for any given resource will be context sensitive. For example, only actions that the\nauthenticated user can take are being rendered. This can be used to dynamically identify actions that the user might take for any\ngiven response.\n\nAs an example, if you fetch a work package through the [Work Package endpoint](#work-packages), the `update` link will only\nbe present when the user you authenticated has been granted a permission to update the work package in the assigned project.\n\n## HAL+JSON\n\nHAL is a simple format that gives a consistent and easy way to hyperlink between resources in your API.\nRead more in the following specification: https://tools.ietf.org/html/draft-kelly-json-hal-08\n\n**OpenProject API implementation of HAL+JSON format** enriches JSON and introduces a few meta properties:\n\n- `_type` - specifies the type of the resource (e.g.: WorkPackage, Project)\n    - `_links` - contains all related resource and action links available for the resource\n    - `_embedded` - contains all embedded objects\n\nHAL does not guarantee that embedded resources are embedded in their full representation, they might as well be\npartially represented (e.g. some properties can be left out).\nHowever in this API you have the guarantee that whenever a resource is **embedded**, it is embedded in its **full representation**.\n\n## API response structure\n\nAll API responses contain a single HAL+JSON object, even collections of objects are technically represented by\na single HAL+JSON object that itself contains its members. More details on collections can be found\nin the [Collections Section](#collections).\n\n# Authentication\n\nThe API supports the following authentication schemes: OAuth2, session based authentication, and basic auth.\n\nDepending on the settings of the OpenProject instance many resources can be accessed without being authenticated.\nIn case the instance requires authentication on all requests the client will receive an **HTTP 401** status code\nin response to any request.\n\nOtherwise unauthenticated clients have all the permissions of the anonymous user.\n\n## Session-based Authentication\n\nThis means you have to login to OpenProject via the Web-Interface to be authenticated in the API.\nThis method is well-suited for clients acting within the browser, like the Angular-Client built into OpenProject.\n\nIn this case, you always need to pass the HTTP header `X-Requested-With \"XMLHttpRequest\"` for authentication.\n\n## API Key through Basic Auth\n\nUsers can authenticate towards the API v3 using basic auth with `apikey` (as a string, NOT your API key) as the user name and their API key as the password.\nUsers can find their API key on their account page.\n\nExample:\n\n```bash\nAPI_KEY=2519132cdf62dcf5a66fd96394672079f9e9cad1\ncurl -u apikey:$API_KEY https://community.openproject.com/api/v3/users/42\n```\n\n## OAuth2.0 authentication\n\nOpenProject allows authentication and authorization with OAuth2 with *Authorization code flow*, as well as *Client credentials* operation modes.\n\nTo get started, you first need to register an application in the OpenProject OAuth administration section of your installation.\nThis will save an entry for your application with a client unique identifier (`client_id`) and an accompanying secret key (`client_secret`).\n\nYou can then use one the following guides to perform the supported OAuth 2.0 flows:\n\n- [Authorization code flow](https://oauth.net/2/grant-types/authorization-code)\n\n- [Client credentials](https://oauth.net/2/grant-types/client-credentials/) - Requires an application to be bound to an impersonating user for non-public access\n\n## Why not username and password?\n\nThe simplest way to do basic auth would be to use a user's username and password naturally.\nHowever, OpenProject already has supported API keys in the past for the API v2, though not through basic auth.\n\nUsing **username and password** directly would have some advantages:\n\n* It is intuitive for the user who then just has to provide those just as they would when logging into OpenProject.\n\n* No extra logic for token management necessary.\n\nOn the other hand using **API keys** has some advantages too, which is why we went for that:\n\n* If compromised while saved on an insecure client the user only has to regenerate the API key instead of changing their password, too.\n\n* They are naturally long and random which makes them invulnerable to dictionary attacks and harder to crack in general.\n\nMost importantly users may not actually have a password to begin with. Specifically when they have registered\nthrough an OpenID Connect provider.\n\n# Cross-Origin Resource Sharing (CORS)\n\nBy default, the OpenProject API is _not_ responding with any CORS headers.\nIf you want to allow cross-domain AJAX calls against your OpenProject instance, you need to enable CORS headers being returned.\n\nPlease see [our API settings documentation](https://docs.openproject.org/system-admin-guide/system-settings/api-settings/) on\nhow to selectively enable CORS.\n\n# Allowed HTTP methods\n\n- `GET` - Get a single resource or collection of resources\n\n- `POST` - Create a new resource or perform\n\n- `PATCH` - Update a resource\n\n- `DELETE` - Delete a resource\n\n# Compression\n\nResponses are compressed if requested by the client. Currently [gzip](http://www.gzip.org/) and [deflate](https://tools.ietf.org/html/rfc1951)\nare supported. The client signals the desired compression by setting the [`Accept-Encoding` header](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.3).\nIf no `Accept-Encoding` header is send, `Accept-Encoding: identity` is assumed which will result in the API responding uncompressed."
    },
    "paths": {
        "/api/v3/examples": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "view aggregated result",
                "operationId": "view aggregated result",
                "description": "",
                "tags": [
                    "Collections"
                ],
                "parameters": [
                    {
                        "name": "groupBy",
                        "in": "query",
                        "description": "The column to group by.\nNote: Aggregation is as of now only supported by the work package collection.\nYou can pass any column name as returned by the [queries](#queries) endpoint.",
                        "required": false,
                        "x-example": "status",
                        "type": "string"
                    },
                    {
                        "name": "showSums",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string",
                        "default": "false"
                    }
                ]
            }
        },
        "/api/v3/example/form": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/example/form"
                                    },
                                    "validate": {
                                        "href": "/api/v3/example/form",
                                        "method": "POST"
                                    },
                                    "previewMarkup": {
                                        "href": "/api/v3/render/markdown",
                                        "method": "POST"
                                    },
                                    "commit": {
                                        "href": "/api/v3/example",
                                        "method": "PATCH"
                                    }
                                },
                                "_type": "Form",
                                "_embedded": {
                                    "payload": {
                                        "_links": {
                                            "status": {
                                                "href": "/api/v3/statuses/1"
                                            }
                                        },
                                        "_type": "Example",
                                        "lockVersion": 5,
                                        "subject": "An example title"
                                    },
                                    "schema": {
                                        "_type": "Schema",
                                        "_links": {
                                            "self": {
                                                "href": "/api/v3/example/schema"
                                            }
                                        },
                                        "lockVersion": {
                                            "type": "Integer",
                                            "writable": false
                                        },
                                        "subject": {
                                            "type": "String",
                                            "minLength": 1,
                                            "maxLength": 255
                                        },
                                        "status": {
                                            "_links": {
                                                "allowedValues": [
                                                    {
                                                        "href": "/api/v3/statuses/1",
                                                        "title": "New"
                                                    },
                                                    {
                                                        "href": "/api/v3/statuses/2",
                                                        "title": "Closed"
                                                    }
                                                ]
                                            },
                                            "type": "Status",
                                            "_embedded": {
                                                "allowedValues": [
                                                    {
                                                        "_links": {
                                                            "self": {
                                                                "href": "/api/v3/statuses/1"
                                                            }
                                                        },
                                                        "_type": "Status",
                                                        "id": 1,
                                                        "name": "New",
                                                        "position": 1,
                                                        "isDefault": true,
                                                        "isClosed": false,
                                                        "defaultDoneRatio": 0,
                                                        "createdAt": "2014-05-21T08:51:20Z",
                                                        "updatedAt": "2014-05-21T09:12:00Z"
                                                    },
                                                    {
                                                        "_links": {
                                                            "self": {
                                                                "href": "/api/v3/statuses/2"
                                                            }
                                                        },
                                                        "_type": "Status",
                                                        "id": 2,
                                                        "name": "Closed",
                                                        "position": 2,
                                                        "isDefault": false,
                                                        "isClosed": true,
                                                        "defaultDoneRatio": 100,
                                                        "createdAt": "2014-05-21T08:51:20Z",
                                                        "updatedAt": "2014-05-21T09:12:00Z"
                                                    }
                                                ]
                                            }
                                        }
                                    },
                                    "validationErrors": {
                                        "subject": {
                                            "_type": "Error",
                                            "errorIdentifier": "urn:openproject-org:api:v3:errors:BadExampleError",
                                            "message": "For the purpose of this example we need a validation error. The remainder of the response pretends there were no errors."
                                        }
                                    }
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Example FormModel"
                        }
                    },
                    "400": {
                        "description": "Occurs when the client did not send a valid JSON object in the request body and the request body\nwas not empty.\n\nNote that this error only occurs when the content is not at all a single JSON object.\nIt **does not occur** for requests containing undefined properties or invalid property values.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request body was neither empty, nor did it contain a single JSON object."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions to modify the associated resource.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to edit example resources."
                            }
                        }
                    },
                    "409": {
                        "description": "Returned if underlying resource was changed since the client requested the form. This is determined using the `lockVersion` property.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:UpdateConflict",
                                "message": "The resource you are about to edit was changed in the meantime."
                            }
                        }
                    }
                },
                "summary": "show or validate form",
                "operationId": "show or validate form",
                "description": "This is an example of how a form might look like. Note that this endpoint does not exist in the actual implementation.",
                "tags": [
                    "Forms"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "lockVersion": {
                                    "type": "number"
                                },
                                "_type": {
                                    "type": "string"
                                },
                                "subject": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "lockVersion": 5,
                                "_type": "Example",
                                "subject": "An example title"
                            }
                        }
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/actions/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/View actionModel"
                        }
                    },
                    "404": {
                        "description": "Returned if the action does not exist.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The requested resource could not be found."
                            }
                        }
                    }
                },
                "summary": "View action",
                "operationId": "View action",
                "description": "Returns an individual action.",
                "tags": [
                    "Actions & Capabilities"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "action id which is the name of the action",
                        "required": true,
                        "x-example": "work_packages/create",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/actions": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/List actionsModel"
                        }
                    }
                },
                "summary": "List actions",
                "operationId": "List actions",
                "description": "Returns a collection of actions. The client can choose to filter the actions similar to how work packages are filtered.\nIn addition to the provided filters, the server will reduce the result set to only contain actions, for which the requesting client\nhas sufficient permissions.",
                "tags": [
                    "Actions & Capabilities"
                ],
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "JSON specifying filter conditions.\nAccepts the same format as returned by the [queries](#queries) endpoint.\nCurrently supported filters are:\n\n+ id: Returns only the action having the id or all actions except those having the id(s).",
                        "required": false,
                        "x-example": "[{ \"id\": { \"operator\": \"=\", \"values\": [\"memberships/create\"] }\" }]",
                        "type": "string"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "JSON specifying sort criteria.\nAccepts the same format as returned by the [queries](#queries) endpoint. Currently supported sorts are:\n\n+ *No sort supported yet*",
                        "required": false,
                        "x-example": "[[\"id\", \"asc\"]]",
                        "type": "string",
                        "default": "[\"id\", \"asc\"]"
                    }
                ]
            }
        },
        "/api/v3/capabilities/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/capabilities/work_packages/create/p123-567"
                                    },
                                    "action": {
                                        "href": "/api/v3/actions/work_packages/create",
                                        "title": "Add work package"
                                    },
                                    "context": {
                                        "href": "/api/v3/projects/123",
                                        "title": "A project"
                                    },
                                    "principal": {
                                        "href": "/api/v3/users/567",
                                        "title": "Some user"
                                    }
                                },
                                "_type": "Capability",
                                "id": "work_packages/create/p123-567"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/View capabilitiesModel"
                        }
                    },
                    "404": {
                        "description": "Returned if the capability does not exist.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The requested resource could not be found."
                            }
                        }
                    }
                },
                "summary": "View capabilities",
                "operationId": "View capabilities",
                "description": "",
                "tags": [
                    "Actions & Capabilities"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "capability id",
                        "required": true,
                        "x-example": "work_packages/create/p123-567",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/capabilities": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/List capabilitiesModel"
                        }
                    }
                },
                "summary": "List capabilities",
                "operationId": "List capabilities",
                "description": "Returns a collection of actions assigned to a principal in a context. The client can choose to filter the actions similar to how work packages are filtered. In addition to the provided filters, the server will reduce the result set to only contain actions, for which the requesting client has sufficient permissions",
                "tags": [
                    "Actions & Capabilities"
                ],
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "JSON specifying filter conditions.\nAccepts the same format as returned by the [queries](#queries) endpoint.\n\n+ action: Get all capabilities of a certain action\n\n+ principal: Get all capabilities of a principal\n\n+ context: Get all capabilities within a context. Note that for a project context the client needs to provide `p{id}`, e.g. `p5` and for the global context a `g`",
                        "required": false,
                        "x-example": "[{ \"principal\": { \"operator\": \"=\", \"values\": [\"1\"] }\" }]",
                        "type": "string"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "JSON specifying sort criteria.\nAccepts the same format as returned by the [queries](#queries) endpoint. Currently supported sorts are:\n\n+ id: Sort by the capabilities id",
                        "required": false,
                        "x-example": "[[\"id\", \"asc\"]]",
                        "type": "string",
                        "default": "[\"id\", \"asc\"]"
                    }
                ]
            }
        },
        "/api/v3/capabilities/context/global": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/capabilities/context/global"
                                    }
                                },
                                "_type": "CapabilityContext::Global",
                                "id": "global"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/View global contextModel"
                        }
                    },
                    "404": {
                        "description": "Returned if the action does not exist.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The requested resource could not be found."
                            }
                        }
                    }
                },
                "summary": "View global context",
                "operationId": "View global context",
                "description": "Returns the global capability context. This context is necessary to consistently link to a context even if the context is not a project.",
                "tags": [
                    "Actions & Capabilities"
                ],
                "parameters": [],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/activities/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Activity::Comment",
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/activity/1",
                                        "title": "Priority changed from High to Low"
                                    },
                                    "workPackage": {
                                        "href": "/api/v3/work_packages/1",
                                        "title": "quis numquam qui voluptatum quia praesentium blanditiis nisi"
                                    },
                                    "user": {
                                        "href": "/api/v3/users/1",
                                        "title": "John Sheppard - admin"
                                    }
                                },
                                "id": 1,
                                "details": [
                                    {
                                        "format": "markdown",
                                        "raw": "Lorem ipsum dolor sit amet.",
                                        "html": "<p>Lorem ipsum dolor sit amet.</p>"
                                    }
                                ],
                                "comment": {
                                    "format": "markdown",
                                    "raw": "Lorem ipsum dolor sit amet.",
                                    "html": "<p>Lorem ipsum dolor sit amet.</p>"
                                },
                                "createdAt": "2014-05-21T08:51:20Z",
                                "version": 31
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/ActivityModel"
                        }
                    }
                },
                "summary": "View activity",
                "operationId": "View activity",
                "description": "",
                "tags": [
                    "Activities"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Activity id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Activity::Comment",
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/activity/1",
                                        "title": "Priority changed from High to Low"
                                    },
                                    "workPackage": {
                                        "href": "/api/v3/work_packages/1",
                                        "title": "quis numquam qui voluptatum quia praesentium blanditiis nisi"
                                    },
                                    "user": {
                                        "href": "/api/v3/users/1",
                                        "title": "John Sheppard - admin"
                                    }
                                },
                                "id": 1,
                                "details": [
                                    {
                                        "format": "markdown",
                                        "raw": "Lorem ipsum dolor sit amet.",
                                        "html": "<p>Lorem ipsum dolor sit amet.</p>"
                                    }
                                ],
                                "comment": {
                                    "format": "markdown",
                                    "raw": "Lorem ipsum dolor sit amet.",
                                    "html": "<p>Lorem ipsum dolor sit amet.</p>"
                                },
                                "createdAt": "2014-05-21T08:51:20Z",
                                "version": 31
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/ActivityModel"
                        }
                    },
                    "400": {
                        "description": "Occurs when the client did not send a valid JSON object in the request body.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request body was not a single JSON object."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** edit journals",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to edit the comment of this journal entry."
                            }
                        }
                    },
                    "422": {
                        "description": "Returned if the client tries to modify a read-only property.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:PropertyIsReadOnly",
                                "message": "The ID of an activity can't be changed."
                            }
                        }
                    }
                },
                "summary": "Update activity",
                "operationId": "Update activity",
                "description": "Updates an activity's comment and, on success, returns the updated activity.",
                "tags": [
                    "Activities"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Activity id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "comment": {
                                    "type": "object",
                                    "properties": {
                                        "raw": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "example": {
                                "comment": {
                                    "raw": "The updated comment"
                                }
                            }
                        }
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/attachments": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/AttachmentModel"
                        }
                    },
                    "400": {
                        "description": "Returned if the client sends a not understandable request. Reasons include:\n\n* Omitting one of the required parts (metadata and file)\n\n* sending unparsable JSON in the metadata part",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request could not be parsed as JSON."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** At least one permission in any project: edit work package, add work package, edit messages, edit wiki pages (plugins might extend this list)",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to delete this attachment."
                            }
                        }
                    },
                    "422": {
                        "description": "Returned if the client tries to send an invalid attachment.\nReasons are:\n\n* Omitting the file name (`fileName` property of metadata part)\n\n* Sending a file that is too large",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:PropertyConstraintViolation",
                                "message": "File is too large (maximum size is 5242880 Bytes)."
                            }
                        }
                    }
                },
                "summary": "Create Attachment",
                "operationId": "Create Attachment",
                "description": "Clients can create attachments without a container first and attach them later on.\nThis is useful if the container does not exist at the time the attachment is uploaded.\nAfter the upload, the client can then claim such containerless attachments for any resource eligible (e.g. WorkPackage) on subsequent requests.\nThe upload and the claiming *must* be done for the same user account. Attachments uploaded by another user cannot be claimed and\nonce claimed for a resource, they cannot be claimed by another.\n\nThe upload request must be of type `multipart/form-data` with exactly two parts.\n\nThe first part *must* be called `metadata`. Its content type is expected to be `application/json`,\nthe body *must* be a single JSON object, containing at least the `fileName` and optionally the attachments `description`.\n\nThe second part *must* be called `file`, its content type *should* match the mime type of the file.\nThe body *must* be the raw content of the file.\nNote that a `filename` *must* be indicated in the `Content-Disposition` of this part, although it will be ignored.\nInstead the `fileName` inside the JSON of the metadata part will be used.",
                "tags": [
                    "Attachments"
                ],
                "parameters": [],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/attachments/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/AttachmentModel"
                        }
                    },
                    "404": {
                        "description": "Returned if the attachment does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view permission for the container of the attachment or being the author for attachments without container\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of an attachment.\nThat's why a 404 is returned here, even if a 403 might be more appropriate.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified attachment does not exist."
                            }
                        }
                    }
                },
                "summary": "View attachment",
                "operationId": "View attachment",
                "description": "",
                "tags": [
                    "Attachments"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Attachment id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "Returned if the attachment was deleted successfully.\n\nNote that the response body is empty as of now. In future versions of the API a body\n*might* be returned along with an appropriate HTTP status.",
                        "headers": {},
                        "examples": {}
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** edit permission for the container of the attachment or being the author for attachments without container\n\n*Note that you will only receive this error, if you are at least allowed to see the attachment.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to delete this attachment."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the attachment does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view permission for the container of the attachment or being the author for attachments without container\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of an attachment.\nThat's why a 404 is returned here, even if a 403 might be more appropriate.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified attachment does not exist."
                            }
                        }
                    }
                },
                "summary": "Delete attachment",
                "operationId": "Delete attachment",
                "description": "Permanently deletes the specified attachment.",
                "tags": [
                    "Attachments"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Attachment id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/posts/{id}/attachments": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Collection",
                                "total": 1,
                                "count": 1,
                                "_embedded": {
                                    "elements": [
                                        {
                                            "_type": "Attachment",
                                            "id": 376,
                                            "fileName": "some.gif",
                                            "fileSize": 3521772,
                                            "description": {
                                                "format": "plain",
                                                "raw": "",
                                                "html": ""
                                            },
                                            "contentType": "image/gif",
                                            "digest": {
                                                "algorithm": "md5",
                                                "hash": "7ac9c97ef73d47127f590788b84c0c1c"
                                            },
                                            "createdAt": "2018-06-01T07:24:19Z",
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/attachments/376",
                                                    "title": "200.gif"
                                                },
                                                "author": {
                                                    "href": "/api/v3/users/1",
                                                    "title": "OpenProject Admin"
                                                },
                                                "container": {
                                                    "href": "/api/v3/posts/72",
                                                    "title": "wiki"
                                                },
                                                "downloadLocation": {
                                                    "href": "/api/v3/attachments/376/content"
                                                },
                                                "delete": {
                                                    "href": "/api/v3/attachments/376",
                                                    "method": "delete"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/posts/72/attachments"
                                    }
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Attachments by postModel"
                        }
                    },
                    "404": {
                        "description": "Returned if the post does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view messages\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of a post.\nThat's why a 404 is returned here, even if a 403 might be more appropriate.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The requested resource could not be found."
                            }
                        }
                    }
                },
                "summary": "List attachments",
                "operationId": "List attachments",
                "description": "",
                "tags": [
                    "Attachments"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the post whose attachments will be listed",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_embedded": {
                                    "author": {
                                        "_type": "User",
                                        "id": 1,
                                        "name": "OpenProject Admin",
                                        "createdAt": "2015-03-20T12:56:52Z",
                                        "updatedAt": "2018-05-29T13:57:44Z",
                                        "login": "admin",
                                        "admin": true,
                                        "firstName": "OpenProject",
                                        "lastName": "Admin",
                                        "email": null,
                                        "avatar": "",
                                        "status": "active",
                                        "identityUrl": null,
                                        "_links": {
                                            "self": {
                                                "href": "/api/v3/users/1",
                                                "title": "OpenProject Admin"
                                            },
                                            "showUser": {
                                                "href": "/users/1",
                                                "type": "text/html"
                                            },
                                            "updateImmediately": {
                                                "href": "/api/v3/users/1",
                                                "title": "Update admin",
                                                "method": "patch"
                                            },
                                            "lock": {
                                                "href": "/api/v3/users/1/lock",
                                                "title": "Set lock on admin",
                                                "method": "post"
                                            }
                                        }
                                    },
                                    "container": {
                                        "_type": "Post",
                                        "id": 150,
                                        "subject": "sfsdfsdfsdfsdf",
                                        "_links": {
                                            "self": {
                                                "href": "/api/v3/posts/150"
                                            },
                                            "attachments": {
                                                "href": "/api/v3/posts/150/attachments"
                                            },
                                            "addAttachment": {
                                                "href": "/api/v3/posts/150/attachments",
                                                "method": "post"
                                            },
                                            "project": {
                                                "href": "/api/v3/projects/12",
                                                "title": "Demo project"
                                            }
                                        }
                                    }
                                },
                                "_type": "Attachment",
                                "id": 377,
                                "fileName": "some.gif",
                                "fileSize": 3521772,
                                "description": {
                                    "format": "plain",
                                    "raw": "",
                                    "html": ""
                                },
                                "contentType": "image/gif",
                                "digest": {
                                    "algorithm": "md5",
                                    "hash": "7ac9c97ef73d47127f590788b84c0c1c"
                                },
                                "createdAt": "2018-06-01T07:53:36Z",
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/attachments/377",
                                        "title": "200.gif"
                                    },
                                    "author": {
                                        "href": "/api/v3/users/1",
                                        "title": "OpenProject Admin"
                                    },
                                    "container": {
                                        "href": "/api/v3/posts/150",
                                        "title": "sfsdfsdfsdfsdf"
                                    },
                                    "downloadLocation": {
                                        "href": "/api/v3/attachments/377/content"
                                    },
                                    "delete": {
                                        "href": "/api/v3/attachments/377",
                                        "method": "delete"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returned if the client sends a not understandable request. Reasons include:\n\n* Omitting one of the required parts (metadata and file)\n\n* sending unparsable JSON in the metadata part",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request could not be parsed as JSON."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** edit messages\n\n*Note that you will only receive this error, if you are at least allowed to see the wiki page*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to delete this attachment."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the post does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view messages\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of a post.\nThat's why a 404 is returned here, even if a 403 might be more appropriate.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The requested resource could not be found."
                            }
                        }
                    },
                    "422": {
                        "description": "Returned if the client tries to send an invalid attachment.\nReasons are:\n\n* Omitting the file name (`fileName` property of metadata part)\n\n* Sending a file that is too large",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:PropertyConstraintViolation",
                                "message": "File is too large (maximum size is 5242880 Bytes)."
                            }
                        }
                    }
                },
                "summary": "Add attachment",
                "operationId": "Add attachment",
                "description": "Adds an attachment with the post as it's container.\n\nSee [the general specification for uploading attachments](#attachments-attachments) for details.",
                "tags": [
                    "Attachments"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the post to receive the attachment",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/wiki_pages/{id}/attachments": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Collection",
                                "total": 1,
                                "count": 1,
                                "_embedded": {
                                    "elements": [
                                        {
                                            "_type": "Attachment",
                                            "id": 376,
                                            "fileName": "some.gif",
                                            "fileSize": 3521772,
                                            "description": {
                                                "format": "plain",
                                                "raw": "",
                                                "html": ""
                                            },
                                            "contentType": "image/gif",
                                            "digest": {
                                                "algorithm": "md5",
                                                "hash": "7ac9c97ef73d47127f590788b84c0c1c"
                                            },
                                            "createdAt": "2018-06-01T07:24:19Z",
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/attachments/376",
                                                    "title": "200.gif"
                                                },
                                                "author": {
                                                    "href": "/api/v3/users/1",
                                                    "title": "OpenProject Admin"
                                                },
                                                "container": {
                                                    "href": "/api/v3/wiki_pages/72",
                                                    "title": "wiki"
                                                },
                                                "downloadLocation": {
                                                    "href": "/api/v3/attachments/376/content"
                                                },
                                                "delete": {
                                                    "href": "/api/v3/attachments/376",
                                                    "method": "delete"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/wiki_pages/72/attachments"
                                    }
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Attachments by wiki pageModel"
                        }
                    },
                    "404": {
                        "description": "Returned if the wiki page does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view wiki pages\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of a work package.\nThat's why a 404 is returned here, even if a 403 might be more appropriate.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The requested resource could not be found."
                            }
                        }
                    }
                },
                "summary": "List attachments",
                "operationId": "List attachments",
                "description": "",
                "tags": [
                    "Attachments"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the wiki page whose attachments will be listed",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_embedded": {
                                    "author": {
                                        "_type": "User",
                                        "id": 1,
                                        "name": "OpenProject Admin",
                                        "createdAt": "2015-03-20T12:56:52Z",
                                        "updatedAt": "2018-05-29T13:57:44Z",
                                        "login": "admin",
                                        "admin": true,
                                        "firstName": "OpenProject",
                                        "lastName": "Admin",
                                        "email": null,
                                        "avatar": "",
                                        "status": "active",
                                        "identityUrl": null,
                                        "_links": {
                                            "self": {
                                                "href": "/api/v3/users/1",
                                                "title": "OpenProject Admin"
                                            },
                                            "showUser": {
                                                "href": "/users/1",
                                                "type": "text/html"
                                            },
                                            "updateImmediately": {
                                                "href": "/api/v3/users/1",
                                                "title": "Update admin",
                                                "method": "patch"
                                            },
                                            "lock": {
                                                "href": "/api/v3/users/1/lock",
                                                "title": "Set lock on admin",
                                                "method": "post"
                                            }
                                        }
                                    },
                                    "container": {
                                        "_type": "WikiPage",
                                        "id": 72,
                                        "title": "wiki",
                                        "_links": {
                                            "self": {
                                                "href": "/api/v3/wiki_pages/72"
                                            },
                                            "attachments": {
                                                "href": "/api/v3/wiki_pages/72/attachments"
                                            },
                                            "addAttachment": {
                                                "href": "/api/v3/wiki_pages/72/attachments",
                                                "method": "post"
                                            },
                                            "project": {
                                                "href": "/api/v3/projects/12",
                                                "title": "Demo project"
                                            }
                                        }
                                    }
                                },
                                "_type": "Attachment",
                                "id": 376,
                                "fileName": "some.gif",
                                "fileSize": 3521772,
                                "description": {
                                    "format": "plain",
                                    "raw": "",
                                    "html": ""
                                },
                                "contentType": "image/gif",
                                "digest": {
                                    "algorithm": "md5",
                                    "hash": "7ac9c97ef73d47127f590788b84c0c1c"
                                },
                                "createdAt": "2018-06-01T07:24:19Z",
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/attachments/376",
                                        "title": "200.gif"
                                    },
                                    "author": {
                                        "href": "/api/v3/users/1",
                                        "title": "OpenProject Admin"
                                    },
                                    "container": {
                                        "href": "/api/v3/wiki_pages/72",
                                        "title": "wiki"
                                    },
                                    "downloadLocation": {
                                        "href": "/api/v3/attachments/376/content"
                                    },
                                    "delete": {
                                        "href": "/api/v3/attachments/376",
                                        "method": "delete"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returned if the client sends a not understandable request. Reasons include:\n\n* Omitting one of the required parts (metadata and file)\n\n* sending unparsable JSON in the metadata part",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request could not be parsed as JSON."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** edit wiki pages\n\n*Note that you will only receive this error, if you are at least allowed to see the wiki page*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to delete this attachment."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the wiki page does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view wiki pages\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of a wiki page\nThat's why a 404 is returned here, even if a 403 might be more appropriate.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The requested resource could not be found."
                            }
                        }
                    },
                    "422": {
                        "description": "Returned if the client tries to send an invalid attachment.\nReasons are:\n\n* Omitting the file name (`fileName` property of metadata part)\n\n* Sending a file that is too large",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:PropertyConstraintViolation",
                                "message": "File is too large (maximum size is 5242880 Bytes)."
                            }
                        }
                    }
                },
                "summary": "Add attachment",
                "operationId": "Add attachment",
                "description": "Adds an attachment with the wiki page as it's container.\n\nSee [the general specification for uploading attachments](#attachments-attachments) for details.",
                "tags": [
                    "Attachments"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the wiki page to receive the attachment",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/work_packages/{id}/attachments": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/Attachments by work packageModel"
                        }
                    },
                    "404": {
                        "description": "Returned if the work package does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view work package\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of a work package.\nThat's why a 404 is returned here, even if a 403 might be more appropriate.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified work package does not exist."
                            }
                        }
                    }
                },
                "summary": "List attachments",
                "operationId": "List attachments",
                "description": "",
                "tags": [
                    "Attachments"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the work package whose attachments will be listed",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/AttachmentModel"
                        }
                    },
                    "400": {
                        "description": "Returned if the client sends a not understandable request. Reasons include:\n\n* Omitting one of the required parts (metadata and file)\n\n* sending unparsable JSON in the metadata part",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request could not be parsed as JSON."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** edit work package or add work package\n\n*Note that you will only receive this error, if you are at least allowed to see the work package.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to delete this attachment."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the work package does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view work package\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of a work package.\nThat's why a 404 is returned here, even if a 403 might be more appropriate.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified work package does not exist."
                            }
                        }
                    },
                    "422": {
                        "description": "Returned if the client tries to send an invalid attachment.\nReasons are:\n\n* Omitting the file name (`fileName` property of metadata part)\n\n* Sending a file that is too large",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:PropertyConstraintViolation",
                                "message": "File is too large (maximum size is 5242880 Bytes)."
                            }
                        }
                    }
                },
                "summary": "Add attachment",
                "operationId": "Add attachment",
                "description": "To add an attachment to a work package, a client needs to issue a request of type `multipart/form-data`\nwith exactly two parts.\n\nThe first part *must* be called `metadata`. Its content type is expected to be `application/json`,\nthe body *must* be a single JSON object, containing at least the `fileName` and optionally the attachments `description`.\n\nThe second part *must* be called `file`, its content type *should* match the mime type of the file.\nThe body *must* be the raw content of the file.\nNote that a `filename` must be indicated in the `Content-Disposition` of this part, however it will be ignored.\nInstead the `fileName` inside the JSON of the metadata part will be used.",
                "tags": [
                    "Attachments"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the work package to receive the attachment",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/budgets/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Budget",
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/budgets/1",
                                        "title": "Q3 2015"
                                    }
                                },
                                "id": 1,
                                "subject": "Q3 2015"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/BudgetModel"
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** view work packages **or** view budgets (on the budgets project)",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to see this budget."
                            }
                        }
                    }
                },
                "summary": "view Budget",
                "operationId": "view Budget",
                "description": "",
                "tags": [
                    "Budgets"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Budget id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/projects/{id}/budgets": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/projects/1/budgets"
                                    }
                                },
                                "_type": "Collection",
                                "total": 2,
                                "count": 2,
                                "_embedded": {
                                    "elements": [
                                        {
                                            "_type": "Budget",
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/budgets/1",
                                                    "title": "Q3 2015"
                                                }
                                            },
                                            "id": 1,
                                            "subject": "Q3 2015"
                                        },
                                        {
                                            "_type": "Budget",
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/budgets/2",
                                                    "title": "Q4 2015"
                                                }
                                            },
                                            "id": 2,
                                            "subject": "Q4 2015"
                                        }
                                    ]
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Budgets by ProjectModel"
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions to see the budgets of the given\nproject.\n\n**Required permission:** view work packages **or** view budgets\n\n*Note that you will only receive this error, if you are at least allowed to see the corresponding project.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to see the budgets of this project."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if either:\n\n* the project does not exist\n\n* the client does not have sufficient permissions to see the project\n\n* the costs module is not enabled on the given project\n\n**Required permission:** view project\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of a project.\nThat's why a 404 is returned here, even if a 403 might be more appropriate.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified project does not exist."
                            }
                        }
                    }
                },
                "summary": "view Budgets of a Project",
                "operationId": "view Budgets of a Project",
                "description": "",
                "tags": [
                    "Budgets"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Project id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/projects/{project_id}/categories": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/projects/11/categories"
                                    }
                                },
                                "total": 2,
                                "count": 2,
                                "_type": "Collection",
                                "_embedded": {
                                    "elements": [
                                        {
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/categories/10",
                                                    "title": "Category with assignee"
                                                },
                                                "project": {
                                                    "href": "/api/v3/projects/11",
                                                    "title": "Example project"
                                                },
                                                "defaultAssignee": {
                                                    "href": "/api/v3/users/42",
                                                    "title": "John Sheppard"
                                                }
                                            },
                                            "_type": "Category",
                                            "id": 10,
                                            "name": "Foo"
                                        },
                                        {
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/categories/11"
                                                },
                                                "project": {
                                                    "href": "/api/v3/projects/11"
                                                }
                                            },
                                            "_type": "Category",
                                            "id": 11,
                                            "name": "Bar"
                                        }
                                    ]
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Categories by ProjectModel"
                        }
                    },
                    "404": {
                        "description": "Returned if the project does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view project\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of a project.\nThat's why a 404 is returned here, even if a 403 might be more appropriate.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified project does not exist."
                            }
                        }
                    }
                },
                "summary": "List categories of a project",
                "operationId": "List categories of a project",
                "description": "",
                "tags": [
                    "Categories"
                ],
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "description": "ID of the project whose categories will be listed",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/categories/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/categories/10",
                                        "title": "Category with assignee"
                                    },
                                    "project": {
                                        "href": "/api/v3/projects/11",
                                        "title": "Example project"
                                    },
                                    "defaultAssignee": {
                                        "href": "/api/v3/users/42",
                                        "title": "John Sheppard"
                                    }
                                },
                                "_type": "Category",
                                "id": 10,
                                "name": "Foo"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/CategoryModel"
                        }
                    },
                    "404": {
                        "description": "Returned if the category does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view project (defining the category)\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of\na category. That's why a 404 is returned here, even if a 403 might be more appropriate.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified category does not exist."
                            }
                        }
                    }
                },
                "summary": "View Category",
                "operationId": "View Category",
                "description": "",
                "tags": [
                    "Categories"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "category id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/configuration": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Configuration",
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/configuration"
                                    },
                                    "userPreferences": {
                                        "href": "/api/v3/my_preferences"
                                    }
                                },
                                "maximumAttachmentFileSize": 5242880,
                                "perPageOptions": [
                                    1,
                                    10,
                                    100
                                ]
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/ConfigurationModel"
                        }
                    }
                },
                "summary": "View configuration",
                "operationId": "View configuration",
                "description": "",
                "tags": [
                    "Configuration"
                ],
                "parameters": [],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/custom_actions/{custom_action_id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "CustomAction",
                                "name": "Change project and type",
                                "description": "Changes project and type in one go",
                                "_links": {
                                    "executeImmediately": {
                                        "href": "/apiChanges project and type in one go",
                                        "title": "Execute Change project and type",
                                        "method": "post"
                                    },
                                    "self": {
                                        "href": "/api/v3/custom_actions/2",
                                        "title": "Change project and type"
                                    }
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Custom ActionModel"
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** edit work packages in any project",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the custom action does not exist.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The requested resource could not be found."
                            }
                        }
                    }
                },
                "summary": "View custom action",
                "operationId": "View custom action",
                "description": "",
                "tags": [
                    "Custom actions"
                ],
                "parameters": [
                    {
                        "name": "custom_action_id",
                        "in": "path",
                        "description": "The id of the custom action to fetch",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/custom_actions/{custom_action_id}/execute": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {}
                    },
                    "400": {
                        "description": "Occurs when the client did not send a valid JSON object in the request body.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request body was not a single JSON object."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** edit work packages - Additional permissions might be required based on the custom action.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the custom action does not exist.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The requested resource could not be found."
                            }
                        }
                    },
                    "409": {
                        "description": "Returned if the client provided an outdated lockVersion or no lockVersion at all.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:UpdateConflict",
                                "message": "Couldn't update the resource because of conflicting modifications."
                            }
                        }
                    },
                    "422": {
                        "description": "Returned if the custom action was not executed successfully e.g. when a constraint on a work package property was violated.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:PropertyConstraintViolation",
                                "message": "Delay must be a number greater than or equal to 0",
                                "_embedded": {
                                    "details": {
                                        "attribute": "delay"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Execute custom action",
                "operationId": "Execute custom action",
                "description": "A POST to this end point executes the custom action on the work package provided in the payload. The altered work package will be returned. In order to avoid executing\n the custom action unbeknown to a change that has already taken place, the client has to provide the work package's current lockVersion.",
                "tags": [
                    "Custom actions"
                ],
                "parameters": [
                    {
                        "name": "custom_action_id",
                        "in": "path",
                        "description": "The id of the custom action to execute",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "lockVersion": {
                                    "type": "string"
                                },
                                "_links": {
                                    "type": "object",
                                    "properties": {
                                        "workPackage": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "example": {
                                "lockVersion": "3",
                                "_links": {
                                    "workPackage": {
                                        "href": "/api/v3/work_packages/42"
                                    }
                                }
                            }
                        }
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/custom_objects/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/custom_objects/1"
                                    }
                                },
                                "_type": "CustomObject",
                                "value": "Foo"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Custom ObjectModel"
                        }
                    },
                    "404": {
                        "description": "Returned if the custom object does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package in any project the custom object's custom field is active in.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The requested resource could not be found."
                            }
                        }
                    }
                },
                "summary": "View Custom Object",
                "operationId": "View Custom Object",
                "description": "",
                "tags": [
                    "Custom Objects"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The custom object's identifier",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/documents/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/DocumentModel"
                        }
                    },
                    "404": {
                        "description": "Returned if the document does not exist or if the user does not have permission to view it.\n\n**Required permission** `view documents` in the project the document belongs to",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The requested resource could not be found."
                            }
                        }
                    }
                },
                "summary": "View document",
                "operationId": "View document",
                "description": "",
                "tags": [
                    "Documents"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "document id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/documents": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/DocumentsModel"
                        }
                    },
                    "400": {
                        "description": "Returned if the client sends invalid request parameters e.g. filters",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidQuery",
                                "message": [
                                    "Filters Invalid filter does not exist."
                                ]
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client is not logged in and login is required.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to view this resource."
                            }
                        }
                    }
                },
                "summary": "List Documents",
                "operationId": "List Documents",
                "description": "The documents returned depend on the provided parameters and also on the requesting user's permissions.",
                "tags": [
                    "Documents"
                ],
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Page number inside the requested collection.",
                        "required": false,
                        "x-example": "25",
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of elements to display per page.",
                        "required": false,
                        "x-example": "25",
                        "type": "integer"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "JSON specifying sort criteria.\nAccepts the same format as returned by the [queries](#queries) endpoint. Currently supported sorts are:\n\n+ id: Sort by primary key\n\n+ created_at: Sort by document creation datetime",
                        "required": false,
                        "x-example": "[[\"created_at\", \"asc\"]]",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/grids/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Grid",
                                "id": 2,
                                "rowCount": 8,
                                "columnCount": 5,
                                "widgets": [
                                    {
                                        "_type": "GridWidget",
                                        "identifier": "time_entries_current_user",
                                        "startRow": 1,
                                        "endRow": 8,
                                        "startColumn": 1,
                                        "endColumn": 3
                                    },
                                    {
                                        "_type": "GridWidget",
                                        "identifier": "news",
                                        "startRow": 3,
                                        "endRow": 8,
                                        "startColumn": 4,
                                        "endColumn": 5
                                    },
                                    {
                                        "_type": "GridWidget",
                                        "identifier": "documents",
                                        "startRow": 1,
                                        "endRow": 3,
                                        "startColumn": 3,
                                        "endColumn": 6
                                    }
                                ],
                                "createdAt": "2018-12-03T16:58:30Z",
                                "updatedAt": "2018-12-13T19:36:40Z",
                                "_links": {
                                    "scope": {
                                        "href": "/my/page",
                                        "type": "text/html"
                                    },
                                    "updateImmediately": {
                                        "href": "/api/v3/grids/2",
                                        "method": "patch"
                                    },
                                    "update": {
                                        "href": "/api/v3/grids/2/form",
                                        "method": "post"
                                    },
                                    "self": {
                                        "href": "/api/v3/grids/2"
                                    }
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/GridModel"
                        }
                    },
                    "404": {
                        "description": "Returned if the Grid does not exist or if the user does not have permission to view it.\n\n**Required permission** depends on the page the grid is defined for",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The requested resource could not be found."
                            }
                        }
                    }
                },
                "summary": "View grid",
                "operationId": "View grid",
                "description": "",
                "tags": [
                    "Grids"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "grid id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/grids": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Grid",
                                "id": 2,
                                "rowCount": 8,
                                "columnCount": 5,
                                "widgets": [
                                    {
                                        "_type": "GridWidget",
                                        "identifier": "time_entries_current_user",
                                        "startRow": 1,
                                        "endRow": 8,
                                        "startColumn": 1,
                                        "endColumn": 3
                                    },
                                    {
                                        "_type": "GridWidget",
                                        "identifier": "news",
                                        "startRow": 3,
                                        "endRow": 8,
                                        "startColumn": 4,
                                        "endColumn": 5
                                    },
                                    {
                                        "_type": "GridWidget",
                                        "identifier": "documents",
                                        "startRow": 1,
                                        "endRow": 3,
                                        "startColumn": 3,
                                        "endColumn": 6
                                    }
                                ],
                                "createdAt": "2018-12-03T16:58:30Z",
                                "updatedAt": "2018-12-13T19:36:40Z",
                                "_links": {
                                    "scope": {
                                        "href": "/my/page",
                                        "type": "text/html"
                                    },
                                    "updateImmediately": {
                                        "href": "/api/v3/grids/2",
                                        "method": "patch"
                                    },
                                    "update": {
                                        "href": "/api/v3/grids/2/form",
                                        "method": "post"
                                    },
                                    "self": {
                                        "href": "/api/v3/grids/2"
                                    }
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/GridModel"
                        }
                    },
                    "400": {
                        "description": "Returned if the client sends invalid request parameters e.g. filters",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidQuery",
                                "message": [
                                    "Filters Invalid filter does not exist."
                                ]
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client is not logged in and login is required.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to view this resource."
                            }
                        }
                    }
                },
                "summary": "List Grids",
                "operationId": "List Grids",
                "description": "Lists all grids matching the provided filters and being part of the selected query page. The grids returned will also depend on the permissions of the requesting user.",
                "tags": [
                    "Grids"
                ],
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Page number inside the requested collection.",
                        "required": false,
                        "x-example": "25",
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of elements to display per page.",
                        "required": false,
                        "x-example": "25",
                        "type": "integer"
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "JSON specifying filter conditions.\nAccepts the same format as returned by the [queries](#queries) endpoint. Currently supported filters are:\n\n+ page: Filter grid by work package",
                        "required": false,
                        "x-example": "[{ \"page\": { \"operator\": \"=\", \"values\": [\"/my/page\"] } }]",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/GridModel"
                        }
                    },
                    "400": {
                        "description": "Occurs when the client did not send a valid JSON object in the request body.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request body was not a single JSON object."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** Depends on the page the grid is defined for.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    },
                    "422": {
                        "description": "Returned if:\n\n* a constraint for a property was violated (`PropertyConstraintViolation`)",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Create Grid",
                "operationId": "Create Grid",
                "description": "Creates a new grid applying the attributes provided in the body. The constraints applied to the grid depend on the page the grid is placed in which is why the create form end point should be used to be guided when wanting to create a grid.",
                "tags": [
                    "Grids"
                ],
                "parameters": [],
                "produces": [
                    "application/hal+json"
                ]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/GridModel"
                        }
                    },
                    "400": {
                        "description": "Occurs when the client did not send a valid JSON object in the request body.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request body was not a single JSON object."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** The permission depends on the page the grid is placed in.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    },
                    "422": {
                        "description": "Returned if:\n\n* a constraint for a property was violated (`PropertyConstraintViolation`)",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Update Grid",
                "operationId": "Update Grid",
                "description": "Updates the given grid by applying the attributes provided in the body.  The constraints applied to the grid depend on the page the grid is placed in which is why the create form end point should be used to be guided when wanting to update a grid.",
                "tags": [
                    "Grids"
                ],
                "parameters": [],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/grids/form": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Grid Create Form",
                "operationId": "Grid Create Form",
                "description": "",
                "tags": [
                    "Grids"
                ],
                "parameters": []
            }
        },
        "/api/v3/grids/{id}/form": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Form",
                                "_embedded": {
                                    "payload": {
                                        "rowCount": 6,
                                        "columnCount": 5,
                                        "widgets": [
                                            {
                                                "_type": "GridWidget",
                                                "identifier": "time_entries_current_user",
                                                "startRow": 1,
                                                "endRow": 8,
                                                "startColumn": 1,
                                                "endColumn": 3
                                            },
                                            {
                                                "_type": "GridWidget",
                                                "identifier": "news",
                                                "startRow": 3,
                                                "endRow": 8,
                                                "startColumn": 4,
                                                "endColumn": 5
                                            },
                                            {
                                                "_type": "GridWidget",
                                                "identifier": "documents",
                                                "startRow": 1,
                                                "endRow": 3,
                                                "startColumn": 3,
                                                "endColumn": 6
                                            }
                                        ]
                                    },
                                    "schema": {
                                        "_type": "Schema",
                                        "id": {
                                            "type": "Integer",
                                            "name": "ID",
                                            "required": true,
                                            "hasDefault": false,
                                            "writable": false
                                        },
                                        "createdAt": {
                                            "type": "DateTime",
                                            "name": "Created on",
                                            "required": true,
                                            "hasDefault": false,
                                            "writable": false
                                        },
                                        "updatedAt": {
                                            "type": "DateTime",
                                            "name": "Updated on",
                                            "required": true,
                                            "hasDefault": false,
                                            "writable": false
                                        },
                                        "rowCount": {
                                            "type": "Integer",
                                            "name": "Number of rows",
                                            "required": true,
                                            "hasDefault": false,
                                            "writable": true
                                        },
                                        "columnCount": {
                                            "type": "Integer",
                                            "name": "Number of columns",
                                            "required": true,
                                            "hasDefault": false,
                                            "writable": true
                                        },
                                        "scope": {
                                            "type": "Href",
                                            "name": "Page",
                                            "required": true,
                                            "hasDefault": false,
                                            "writable": false,
                                            "_links": {}
                                        },
                                        "widgets": {
                                            "type": "[]GridWidget",
                                            "name": "Widgets",
                                            "required": true,
                                            "hasDefault": false,
                                            "writable": true,
                                            "_links": {}
                                        },
                                        "_links": {}
                                    },
                                    "validationErrors": {
                                        "widgets": {
                                            "_type": "Error",
                                            "errorIdentifier": "urn:openproject-org:api:v3:errors:MultipleErrors",
                                            "message": "Multiple field constraints have been violated.",
                                            "_embedded": {
                                                "errors": [
                                                    {
                                                        "_type": "Error",
                                                        "errorIdentifier": "urn:openproject-org:api:v3:errors:PropertyConstraintViolation",
                                                        "message": "Widgets is outside of the grid.",
                                                        "_embedded": {
                                                            "details": {
                                                                "attribute": "widgets"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "_type": "Error",
                                                        "errorIdentifier": "urn:openproject-org:api:v3:errors:PropertyConstraintViolation",
                                                        "message": "Widgets is outside of the grid.",
                                                        "_embedded": {
                                                            "details": {
                                                                "attribute": "widgets"
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                },
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/grids/2/form",
                                        "method": "post"
                                    },
                                    "validate": {
                                        "href": "/api/v3/grids/2/form",
                                        "method": "post"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** depends on the page the grid is defined for.\n\n*Note that you will only receive this error, if you are at least allowed to see the corresponding grid.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the grid does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The requested resource could not be found."
                            }
                        }
                    }
                },
                "summary": "Grid Update Form",
                "operationId": "Grid Update Form",
                "description": "",
                "tags": [
                    "Grids"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the grid being modified",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/groups/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/View groupModel"
                        }
                    },
                    "404": {
                        "description": "Returned if the group does not exist or if the API user does not have permission to view them.\n\n**Required permission** If the user has the *manage members* permission in at least one project the user will be able to query all groups. If not, the user\nwill be able to query all groups which are members in projects, he has the *view members* permission in.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The requested resource could not be found."
                            }
                        }
                    }
                },
                "summary": "View group",
                "operationId": "View group",
                "description": "",
                "tags": [
                    "Groups"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Group id.",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/View groupModel"
                        }
                    },
                    "400": {
                        "description": "Occurs when the client did not send a valid JSON object in the request body.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request body was not a single JSON object."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** Administrator",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the membership does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission** If the user has the *manage members* permission in at least one project the user will be able to query all groups. If not, the user\nwill be able to query all groups which are members in projects, he has the *view members* permission in.\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of\na version. That's why a 404 is returned here, even if a 403 might be more appropriate.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The requested resource could not be found."
                            }
                        }
                    },
                    "422": {
                        "description": "Returned if:\n\n* a constraint for a property was violated (`PropertyConstraintViolation`)",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:PropertyConstraintViolation",
                                "message": "Member is already taken.",
                                "_embedded": {
                                    "details": {
                                        "attribute": "members"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Update group",
                "operationId": "Update group",
                "description": "Updates the given group by applying the attributes provided in the body.",
                "tags": [
                    "Groups"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Group id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/groups": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/View groupModel"
                        }
                    },
                    "400": {
                        "description": "Occurs when the client did not send a valid JSON object in the request body.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request body was not a single JSON object."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** Administrator",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    },
                    "422": {
                        "description": "Returned if:\n\n* a constraint for a property was violated (`PropertyConstraintViolation`)",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:PropertyConstraintViolation",
                                "message": "Name can't be blank.",
                                "_embedded": {
                                    "details": {
                                        "attribute": "name"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Create group",
                "operationId": "Create group",
                "description": "Creates a new group applying the attributes provided in the body.",
                "tags": [
                    "Groups"
                ],
                "parameters": [],
                "produces": [
                    "application/hal+json"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/List groupsModel"
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** View members or manage members in any project",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    }
                },
                "summary": "List groups",
                "operationId": "List groups",
                "description": "Returns a collection of groups. The client can choose to filter the groups similar to how work packages are filtered. In addition to the provided filters, the server will reduce the result set to only contain groups, for which the requesting client has sufficient permissions (*view_members*, *manage_members*).",
                "tags": [
                    "Groups"
                ],
                "parameters": [
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "JSON specifying sort criteria.\nAccepts the same format as returned by the [queries](#queries) endpoint. Currently supported sorts are:\n\n+ id: Sort by primary key\n\n+ created_at: Sort by group creation datetime\n\n+ updated_at: Sort by the time the group was updated last",
                        "required": false,
                        "x-example": "[[\"id\", \"asc\"]]",
                        "type": "string",
                        "default": "[\"id\", \"asc\"]"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/group/{id}": {
            "delete": {
                "responses": {
                    "202": {
                        "description": "Returned if the group was successfully deleted\n\nNote that the response body is empty as of now. In future versions of the API a body\n*might* be returned, indicating the progress of deletion.",
                        "headers": {},
                        "examples": {}
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** Administrator",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the group does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** Administrator\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of\na version. That's why a 404 is returned here, even if a 403 might be more appropriate.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The requested resource could not be found."
                            }
                        }
                    }
                },
                "summary": "Delete group",
                "operationId": "Delete group",
                "description": "Deletes the group.",
                "tags": [
                    "Groups"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Group id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/help_texts": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/Help textsModel"
                        }
                    }
                },
                "summary": "List all help texts",
                "operationId": "List all help texts",
                "description": "",
                "tags": [
                    "Help texts"
                ],
                "parameters": []
            }
        },
        "/api/v3/help_texts/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/Help textModel"
                        }
                    }
                },
                "summary": "View help text",
                "operationId": "View help text",
                "description": "",
                "tags": [
                    "Help texts"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Help text id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ]
            }
        },
        "/api/v3/memberships/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/View membershipModel"
                        }
                    },
                    "404": {
                        "description": "Returned if the membership does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view members **or** manage members\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of\na membership. That's why a 404 is returned here, even if a 403 might be more appropriate.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The requested resource could not be found."
                            }
                        }
                    }
                },
                "summary": "View membership",
                "operationId": "View membership",
                "description": "",
                "tags": [
                    "Memberships"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "membership id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/View membershipModel"
                        }
                    },
                    "400": {
                        "description": "Occurs when the client did not send a valid JSON object in the request body.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request body was not a single JSON object."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** Manage members in the membership's project.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the membership does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view member\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of\na version. That's why a 404 is returned here, even if a 403 might be more appropriate.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The requested resource could not be found."
                            }
                        }
                    },
                    "422": {
                        "description": "Returned if:\n\n* a constraint for a property was violated (`PropertyConstraintViolation`)",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:PropertyConstraintViolation",
                                "message": "Roles has an unassignable role.",
                                "_embedded": {
                                    "details": {
                                        "attribute": "roles"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Update membership",
                "operationId": "Update membership",
                "description": "Updates the given membership by applying the attributes provided in the body.\n\nBy providing a `notificationMessage` within the `_meta` block of the payload, the client can include a customized message to the user\nof the updated membership. In case of a group, the message will be sent to every user belonging to the group.",
                "tags": [
                    "Memberships"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Membership id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "Returned if the membership was successfully deleted",
                        "headers": {},
                        "examples": {}
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** manage members",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the membership does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view members\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of\na version. That's why a 404 is returned here, even if a 403 might be more appropriate.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The requested resource could not be found."
                            }
                        }
                    }
                },
                "summary": "Delete membership",
                "operationId": "Delete membership",
                "description": "Deletes the membership.",
                "tags": [
                    "Memberships"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Membership id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/memberships": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/View membershipModel"
                        }
                    },
                    "400": {
                        "description": "Occurs when the client did not send a valid JSON object in the request body.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request body was not a single JSON object."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** Manage members",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    },
                    "422": {
                        "description": "Returned if:\n\n* a constraint for a property was violated (`PropertyConstraintViolation`)",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:PropertyConstraintViolation",
                                "message": "Project can't be blank.",
                                "_embedded": {
                                    "details": {
                                        "attribute": "project"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Create membership",
                "operationId": "Create membership",
                "description": "Creates a new membership applying the attributes provided in the body.\n\nYou can use the form and schema to be retrieve the valid attribute values and by that be guided towards successful creation.\n\nBy providing a `notificationMessage` within the `_meta` block of the payload, the client can include a customized message to the user\nof the newly created membership. In case of a group, the message will be sent to every user belonging to the group.",
                "tags": [
                    "Memberships"
                ],
                "parameters": [],
                "produces": [
                    "application/hal+json"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/memberships"
                                    }
                                },
                                "total": 2,
                                "count": 2,
                                "_type": "Collection",
                                "_embedded": {
                                    "elements": [
                                        {
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/memberships/11"
                                                },
                                                "schema": {
                                                    "href": "/api/v3/memberships/schema"
                                                },
                                                "project": {
                                                    "href": "/api/v3/projects/3",
                                                    "title": "A Project"
                                                },
                                                "principal": {
                                                    "href": "/api/v3/users/5",
                                                    "title": "A user"
                                                },
                                                "roles": [
                                                    {
                                                        "href": "/api/v3/roles/4",
                                                        "title": "Reader"
                                                    }
                                                ]
                                            },
                                            "_type": "Membership",
                                            "id": 11,
                                            "createdAt": "2015-03-20T12:56:56Z",
                                            "updatedAt": "2018-12-20T18:16:11Z"
                                        },
                                        {
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/memberships/41"
                                                },
                                                "schema": {
                                                    "href": "/api/v3/memberships/schema"
                                                },
                                                "project": {
                                                    "href": "/api/v3/projects/6",
                                                    "title": "Another Project"
                                                },
                                                "principal": {
                                                    "href": "/api/v3/groups/5",
                                                    "title": "A group"
                                                },
                                                "roles": [
                                                    {
                                                        "href": "/api/v3/roles/8",
                                                        "title": "Project admin"
                                                    }
                                                ]
                                            },
                                            "_type": "Membership",
                                            "id": 41,
                                            "createdAt": "2019-12-22T12:56:06Z",
                                            "updatedAt": "2020-12-20T18:16:12Z"
                                        }
                                    ]
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/List membershipsModel"
                        }
                    }
                },
                "summary": "List memberships",
                "operationId": "List memberships",
                "description": "Returns a collection of memberships. The client can choose to filter the memberships similar to how work packages are filtered. In addition to the provided filters, the server will reduce the result set to only contain memberships, for which the requesting client has sufficient permissions (*view_members*, *manage_members*).",
                "tags": [
                    "Memberships"
                ],
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "JSON specifying filter conditions.\nAccepts the same format as returned by the [queries](#queries) endpoint.\nCurrently supported filters are:\n\n+ any_name_attribute: filters memberships based on the name of the principal. All possible name variants (and also email and login) are searched.\n\n+ blocked: reduces the result set to all memberships that are temporarily blocked or that are not blocked temporarily.\n\n+ group: filters memberships based on the name of a group. The group however is not the principal used for filtering. Rather, the memberships of the group are used as the filter values.\n\n+ name: filters memberships based on the name of the principal. Note that only the name is used which depends on a setting in the OpenProject instance.\n\n+ principal: filters memberships based on the id of the principal.\n\n+ project: filters memberships based on the id of the project.\n\n+ role: filters memberships based on the id of any role assigned to the membership.\n\n+ status: filters memberships based on the status of the principal.\n\n+ created_at: filters memberships based on the time the membership was created.\n\n+ updated_at: filters memberships based on the time the membership was updated last.",
                        "required": false,
                        "x-example": "[{ \"name\": { \"operator\": \"=\", \"values\": [\"A User\"] }\" }]",
                        "type": "string"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "JSON specifying sort criteria.\nAccepts the same format as returned by the [queries](#queries) endpoint. Currently supported sorts are:\n\n+ id: Sort by primary key\n\n+ name: Sort by the name of the principal. Note that this depends on the setting for how the name is to be displayed at least for users.\n\n+ email: Sort by the email address of the principal. Groups and principal users, which do not have an email, are sorted last.\n\n+ status: Sort by the status of the principal. Groups and principal users, which do not have a status, are sorted together with the active users.\n\n+ created_at: Sort by membership creation datetime\n\n+ updated_at: Sort by the time the membership was updated last",
                        "required": false,
                        "x-example": "[[\"id\", \"asc\"]]",
                        "type": "string",
                        "default": "[\"id\", \"asc\"]"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/memberships/schemas": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Schema",
                                "_dependencies": [],
                                "id": {
                                    "type": "Integer",
                                    "name": "ID",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": false
                                },
                                "createdAt": {
                                    "type": "DateTime",
                                    "name": "Created on",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": false
                                },
                                "updatedAt": {
                                    "type": "DateTime",
                                    "name": "Updated on",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": false
                                },
                                "notificationMessage": {
                                    "type": "Formattable",
                                    "name": "Message",
                                    "required": false,
                                    "hasDefault": false,
                                    "writable": true,
                                    "options": {},
                                    "location": "_meta"
                                },
                                "project": {
                                    "type": "Project",
                                    "name": "Project",
                                    "required": false,
                                    "hasDefault": false,
                                    "writable": true,
                                    "location": "_links",
                                    "_links": {}
                                },
                                "principal": {
                                    "type": "Principal",
                                    "name": "Principal",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": true,
                                    "location": "_links",
                                    "_links": {}
                                },
                                "roles": {
                                    "type": "[]Role",
                                    "name": "Role",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": true,
                                    "location": "_links",
                                    "_links": {}
                                },
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/memberships/schema"
                                    }
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/View membership schemaModel"
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions to see the schema.\n\n**Required permission:** manage members or view memberships on any project",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    }
                },
                "summary": "View membership schema",
                "operationId": "View membership schema",
                "description": "",
                "tags": [
                    "Memberships"
                ],
                "parameters": [],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/memberships/form": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {}
                    },
                    "400": {
                        "description": "Occurs when the client did not send a valid JSON object in the request body.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request body was not a single JSON object."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** manage memberships in any project",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    }
                },
                "summary": "Membership create form",
                "operationId": "Membership create form",
                "description": "",
                "tags": [
                    "Memberships"
                ],
                "parameters": [],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/memberships/{id}/form": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Form",
                                "_embedded": {
                                    "payload": {
                                        "_links": {
                                            "roles": [
                                                {
                                                    "href": "/api/v3/roles/4",
                                                    "title": "A role"
                                                }
                                            ]
                                        },
                                        "_meta": {
                                            "notificationMessage": {
                                                "raw": "Alice, you can now also create work packages."
                                            }
                                        }
                                    },
                                    "schema": {
                                        "_type": "Schema",
                                        "_dependencies": [],
                                        "id": {
                                            "type": "Integer",
                                            "name": "ID",
                                            "required": true,
                                            "hasDefault": false,
                                            "writable": false
                                        },
                                        "createdAt": {
                                            "type": "DateTime",
                                            "name": "Created on",
                                            "required": true,
                                            "hasDefault": false,
                                            "writable": false
                                        },
                                        "updatedAt": {
                                            "type": "DateTime",
                                            "name": "Updated on",
                                            "required": true,
                                            "hasDefault": false,
                                            "writable": false
                                        },
                                        "notificationMessage": {
                                            "type": "Formattable",
                                            "name": "Message",
                                            "required": false,
                                            "hasDefault": false,
                                            "writable": true,
                                            "options": {},
                                            "location": "_meta"
                                        },
                                        "project": {
                                            "type": "Project",
                                            "name": "Project",
                                            "required": false,
                                            "hasDefault": false,
                                            "writable": false,
                                            "_links": {}
                                        },
                                        "principal": {
                                            "type": "Principal",
                                            "name": "Principal",
                                            "required": true,
                                            "hasDefault": false,
                                            "writable": false,
                                            "_links": {}
                                        },
                                        "roles": {
                                            "type": "[]Role",
                                            "name": "Role",
                                            "required": true,
                                            "hasDefault": false,
                                            "writable": true,
                                            "location": "_links",
                                            "_links": {
                                                "allowedValues": {
                                                    "href": "/api/v3/roles?filters=%5B%7B%22unit%22%3A%7B%22operator%22%3A%22%3D%22%2C%22values%22%3A%5B%22project%22%5D%7D%7D%5D"
                                                }
                                            }
                                        },
                                        "_links": {}
                                    },
                                    "validationErrors": {}
                                },
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/memberships/5/form",
                                        "method": "post"
                                    },
                                    "validate": {
                                        "href": "/api/v3/memberships/5/form",
                                        "method": "post"
                                    },
                                    "commit": {
                                        "href": "/api/v3/memberships/5",
                                        "method": "patch"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Occurs when the client did not send a valid JSON object in the request body.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request body was not a single JSON object."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** manage versions in the version's project",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    }
                },
                "summary": "Membership update form",
                "operationId": "Membership update form",
                "description": "",
                "tags": [
                    "Memberships"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Membership id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/memberships/available_projects": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/Available projects for membershipsModel"
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** manage members",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    }
                },
                "summary": "Available projects for memberships",
                "operationId": "Available projects for memberships",
                "description": "Gets a list of projects in which a membership can be created in. The list contains all projects in which the user issuing the request has the manage members permissions.",
                "tags": [
                    "Memberships"
                ],
                "parameters": [],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/news/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/NewsModel"
                        }
                    },
                    "404": {
                        "description": "Returned if the news does not exist or if the user does not have permission to view it.\n\n**Required permission** being member of the project the news belongs to",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The requested resource could not be found."
                            }
                        }
                    }
                },
                "summary": "View news",
                "operationId": "View news",
                "description": "",
                "tags": [
                    "News"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "news id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/news": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Collection",
                                "total": 78,
                                "count": 2,
                                "pageSize": 2,
                                "offset": 1,
                                "_embedded": {
                                    "elements": [
                                        {
                                            "_type": "News",
                                            "id": 1,
                                            "title": "asperiores possimus nam doloribus ab",
                                            "summary": "Celebrer spiculum colo viscus claustrum atque. Id nulla culpa sumptus. Comparo crapula depopulo demonstro.",
                                            "description": {
                                                "format": "markdown",
                                                "raw": "Videlicet deserunt aequitas cognatus. Concedo quia est quia pariatur vorago vallum. Calco autem atavus accusamus conscendo cornu ulterius. Tam patria ago consectetur ventito sustineo nihil caecus. Supra officiis eos velociter somniculosus tonsor qui. Suffragium aduro arguo angustus cogito quia tolero vulnus. Supplanto sortitus cresco apud vestrum qui.",
                                                "html": "<p>Videlicet deserunt aequitas cognatus. Concedo quia est quia pariatur vorago vallum. Calco autem atavus accusamus conscendo cornu ulterius. Tam patria ago consectetur ventito sustineo nihil caecus. Supra officiis eos velociter somniculosus tonsor qui. Suffragium aduro arguo angustus cogito quia tolero vulnus. Supplanto sortitus cresco apud vestrum qui.</p>"
                                            },
                                            "createdAt": "2015-03-20T12:57:01Z",
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/news/1",
                                                    "title": "asperiores possimus nam doloribus ab"
                                                },
                                                "project": {
                                                    "href": "/api/v3/projects/1",
                                                    "title": "Seeded Project"
                                                },
                                                "author": {
                                                    "href": "/api/v3/users/2",
                                                    "title": "Peggie Feeney"
                                                }
                                            }
                                        },
                                        {
                                            "_type": "News",
                                            "id": 2,
                                            "title": "terminatio tutamen. Officia adeptio sp",
                                            "summary": "Consequatur sequi surculus creo tui aequitas.",
                                            "description": {
                                                "format": "markdown",
                                                "raw": "Amicitia alius cattus voluntarius. Virgo viduo terminatio tutamen. Officia adeptio spectaculum atavus nisi cum concido bis. Harum caecus auxilium sol theatrum eaque consequatur. Omnis aeger suus adipisci cicuta. Cur delicate alias curto cursim atqui talio fugiat.",
                                                "html": "<p>Amicitia alius cattus voluntarius. Virgo viduo terminatio tutamen. Officia adeptio spectaculum atavus nisi cum concido bis. Harum caecus auxilium sol theatrum eaque consequatur. Omnis aeger suus adipisci cicuta. Cur delicate alias curto cursim atqui talio fugiat.</p>"
                                            },
                                            "createdAt": "2015-03-20T12:57:01Z",
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/news/2",
                                                    "title": "terminatio tutamen. Officia adeptio sp"
                                                },
                                                "project": {
                                                    "href": "/api/v3/projects/1",
                                                    "title": "Seeded Project"
                                                },
                                                "author": {
                                                    "href": "/api/v3/users/2",
                                                    "title": "Peggie Feeney"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/news?offset=1&pageSize=2"
                                    },
                                    "jumpTo": {
                                        "href": "/api/v3/news?offset=%7Boffset%7D&pageSize=2",
                                        "templated": true
                                    },
                                    "changeSize": {
                                        "href": "/api/v3/news?offset=1&pageSize=%7Bsize%7D",
                                        "templated": true
                                    },
                                    "nextByOffset": {
                                        "href": "/api/v3/news?offset=2&pageSize=2"
                                    }
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/List of NewsModel"
                        }
                    },
                    "400": {
                        "description": "Returned if the client sends invalid request parameters e.g. filters",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidQuery",
                                "message": [
                                    "Filters Invalid filter does not exist."
                                ]
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client is not logged in and login is required.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to view this resource."
                            }
                        }
                    }
                },
                "summary": "List News",
                "operationId": "List News",
                "description": "Lists news. The news returned depend on the provided parameters and also on the requesting user's permissions.",
                "tags": [
                    "News"
                ],
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Page number inside the requested collection.",
                        "required": false,
                        "x-example": "25",
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of elements to display per page.",
                        "required": false,
                        "x-example": "25",
                        "type": "integer"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "JSON specifying sort criteria.\nAccepts the same format as returned by the [queries](#queries) endpoint. Currently supported sorts are:\n\n+ id: Sort by primary key\n\n+ created_at: Sort by news creation datetime",
                        "required": false,
                        "x-example": "[[\"created_at\", \"asc\"]]",
                        "type": "string"
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "JSON specifying filter conditions.\nAccepts the same format as returned by the [queries](#queries) endpoint. Currently supported filters are:\n\n+ project_id: Filter news by project",
                        "required": false,
                        "x-example": "[{ \"project_id\": { \"operator\": \"=\", \"values\": [\"1\", \"2\"] } }]",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/posts/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/PostModel"
                        }
                    },
                    "404": {
                        "description": "Returned if the post does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view messages in the post's project",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The requested resource could not be found."
                            }
                        }
                    }
                },
                "summary": "View Post",
                "operationId": "View Post",
                "description": "Retrieve an individual post as identified by the id parameter",
                "tags": [
                    "Posts"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post's identifier",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/principals": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Collection",
                                "total": 4,
                                "count": 4,
                                "_embedded": {
                                    "elements": [
                                        {
                                            "_type": "User",
                                            "id": 4,
                                            "login": "Eliza92778",
                                            "admin": false,
                                            "firstName": "Danika",
                                            "lastName": "O'Keefe",
                                            "name": "Danika O'Keefe",
                                            "email": "jackie@dicki.org",
                                            "avatar": "https://example.org/users/4/avatar",
                                            "createdAt": "2015-03-20T12:57:02Z",
                                            "updatedAt": "2015-06-16T15:28:14Z",
                                            "status": "active",
                                            "identityUrl": null,
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/users/4",
                                                    "title": "Danika O'Keefe"
                                                },
                                                "showUser": {
                                                    "href": "/users/4",
                                                    "type": "text/html"
                                                },
                                                "updateImmediately": {
                                                    "href": "/api/v3/users/4",
                                                    "title": "Update Eliza92778",
                                                    "method": "patch"
                                                },
                                                "lock": {
                                                    "href": "/api/v3/users/4/lock",
                                                    "title": "Set lock on Eliza92778",
                                                    "method": "post"
                                                },
                                                "delete": {
                                                    "href": "/api/v3/users/4",
                                                    "title": "Delete Eliza92778",
                                                    "method": "delete"
                                                }
                                            }
                                        },
                                        {
                                            "_type": "User",
                                            "id": 2,
                                            "login": "Sebastian9686",
                                            "admin": false,
                                            "firstName": "Peggie",
                                            "lastName": "Feeney",
                                            "name": "Peggie Feeney",
                                            "email": null,
                                            "avatar": "https://example.org/users/4/avatar",
                                            "createdAt": "2015-03-20T12:56:55Z",
                                            "updatedAt": "2015-03-20T12:56:55Z",
                                            "status": "active",
                                            "identityUrl": null,
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/users/2",
                                                    "title": "Peggie Feeney"
                                                },
                                                "showUser": {
                                                    "href": "/users/2",
                                                    "type": "text/html"
                                                },
                                                "updateImmediately": {
                                                    "href": "/api/v3/users/2",
                                                    "title": "Update Sebastian9686",
                                                    "method": "patch"
                                                },
                                                "lock": {
                                                    "href": "/api/v3/users/2/lock",
                                                    "title": "Set lock on Sebastian9686",
                                                    "method": "post"
                                                },
                                                "delete": {
                                                    "href": "/api/v3/users/2",
                                                    "title": "Delete Sebastian9686",
                                                    "method": "delete"
                                                }
                                            }
                                        },
                                        {
                                            "_type": "Group",
                                            "id": 9,
                                            "name": "The group",
                                            "createdAt": "2015-09-23T11:06:36Z",
                                            "updatedAt": "2015-09-23T11:06:36Z",
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/groups/9",
                                                    "title": "The group"
                                                }
                                            }
                                        },
                                        {
                                            "_type": "PlaceholderUser",
                                            "id": 29,
                                            "name": "UX Designer",
                                            "createdAt": "2018-09-23T11:06:36Z",
                                            "updatedAt": "2019-10-23T11:06:36Z",
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/placeholder_users/29",
                                                    "title": "UX Designer"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/principals"
                                    }
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/PrincipalsModel"
                        }
                    }
                },
                "summary": "List principals",
                "operationId": "List principals",
                "description": "List all principals. The client can choose to filter the principals similar to how work packages are filtered. In addition to the provided filters, the server will reduce the result set to only contain principals who are members in projects the client is allowed to see.",
                "tags": [
                    "Principals"
                ],
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "JSON specifying filter conditions.\nAccepts the same format as returned by the [queries](#queries) endpoint.\nCurrently supported filters are:\n\n+ type: filters principals by their type (*User*, *Group*, *PlaceholderUser*).\n\n+ member: filters principals by the projects they are members in.\n\n+ name: filters principals by the user or group name.\n\n+ any_name_attribute: filters principals by the user or group first- and last name, email or login.\n\n+ status: filters principals by their status number (active = *1*, registered = *2*, locked = *3*, invited = *4*)",
                        "required": false,
                        "x-example": "[{ \"type\": { \"operator\": \"=\", \"values\": [\"User\"] } }]",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/priorities": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/priorities"
                                    }
                                },
                                "_type": "Collection",
                                "total": 4,
                                "count": 4,
                                "_embedded": {
                                    "elements": [
                                        {
                                            "_type": "Priority",
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/priorities/1",
                                                    "title": "Low"
                                                }
                                            },
                                            "id": 1,
                                            "name": "Low",
                                            "position": 1,
                                            "isDefault": false,
                                            "isActive": true
                                        },
                                        {
                                            "_type": "Priority",
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/priorities/2",
                                                    "title": "Normal"
                                                }
                                            },
                                            "id": 2,
                                            "name": "Normal",
                                            "position": 2,
                                            "isDefault": true,
                                            "isActive": true
                                        },
                                        {
                                            "_type": "Priority",
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/priorities/3",
                                                    "title": "High"
                                                }
                                            },
                                            "id": 3,
                                            "name": "High",
                                            "position": 3,
                                            "isDefault": false,
                                            "isActive": true
                                        },
                                        {
                                            "_type": "Priority",
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/priorities/4",
                                                    "title": "Immediate"
                                                }
                                            },
                                            "id": 4,
                                            "name": "Immediate",
                                            "position": 5,
                                            "isDefault": false,
                                            "isActive": true
                                        }
                                    ]
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/PrioritiesModel"
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** view work package (on any project)",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to see the priorities."
                            }
                        }
                    }
                },
                "summary": "List all Priorities",
                "operationId": "List all Priorities",
                "description": "",
                "tags": [
                    "Priorities"
                ],
                "parameters": [],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/priorities/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Priority",
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/priorities/1",
                                        "title": "Low"
                                    }
                                },
                                "id": 1,
                                "name": "Low",
                                "position": 1,
                                "isDefault": false,
                                "isActive": true
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/PriorityModel"
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** view work package (on any project)",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to see this priority."
                            }
                        }
                    }
                },
                "summary": "View Priority",
                "operationId": "View Priority",
                "description": "",
                "tags": [
                    "Priorities"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Priority id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/projects/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/View projectModel"
                        }
                    },
                    "404": {
                        "description": "Returned if the project does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view project\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of a project.\nThat's why a 404 is returned here, even if a 403 might be more appropriate.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The requested resource could not be found."
                            }
                        }
                    }
                },
                "summary": "View project",
                "operationId": "View project",
                "description": "",
                "tags": [
                    "Projects"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Project id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/View projectModel"
                        }
                    },
                    "400": {
                        "description": "Occurs when the client did not send a valid JSON object in the request body.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request body was not a single JSON object."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** edit project for the project to be altered",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the project does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view project\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of\na version. That's why a 404 is returned here, even if a 403 might be more appropriate.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The requested resource could not be found."
                            }
                        }
                    },
                    "422": {
                        "description": "Returned if:\n\n* a constraint for a property was violated (`PropertyConstraintViolation`)",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:PropertyConstraintViolation",
                                "message": "Name can't be blank.",
                                "_embedded": {
                                    "details": {
                                        "attribute": "name"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Update Project",
                "operationId": "Update Project",
                "description": "Updates the given project by applying the attributes provided in the body.",
                "tags": [
                    "Projects"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Project id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "Returned if the project was successfully deleted. There is currently no end point to query for the actual deletion status.\nSuch an end point _might_ be added in the future.",
                        "headers": {},
                        "examples": {}
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** admin",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the project does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view project\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of\na version. That's why a 404 is returned here, even if a 403 might be more appropriate.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The requested resource could not be found."
                            }
                        }
                    },
                    "422": {
                        "description": "Returned if the project cannot be deleted. This can happen when there are still references to the project in other projects\nthat need to be severed at first.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:PropertyConstraintViolation",
                                "message": "Work packages in non descendant projects reference versions of the project or its descendants.",
                                "_embedded": {
                                    "details": {
                                        "attribute": "base"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Delete Project",
                "operationId": "Delete Project",
                "description": "Deletes the project permanently. As this is a lengthy process, the actual deletion is carried out asynchronously.\nSo the project might exist well after the request has returned successfully. To prevent unwanted changes to\nthe project scheduled for deletion, it is archived at once.",
                "tags": [
                    "Projects"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Project id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/projects": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/View projectModel"
                        }
                    },
                    "400": {
                        "description": "Occurs when the client did not send a valid JSON object in the request body.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request body was not a single JSON object."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** add project which is a global permission",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    },
                    "422": {
                        "description": "Returned if:\n\n* a constraint for a property was violated (`PropertyConstraintViolation`)",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:PropertyConstraintViolation",
                                "message": "Name can't be blank.",
                                "_embedded": {
                                    "details": {
                                        "attribute": "name"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Create project",
                "operationId": "Create project",
                "description": "Creates a new project, applying the attributes provided in the body.\n\nYou can use the form and schema to be retrieve the valid attribute values and by that be guided towards successful creation.",
                "tags": [
                    "Projects"
                ],
                "parameters": [],
                "produces": [
                    "application/hal+json"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/List projectsModel"
                        }
                    }
                },
                "summary": "List projects",
                "operationId": "List projects",
                "description": "Returns a collection of projects. The collection can be filtered via query parameters similar to how work packages are filtered. In addition to the provided filter, the result set is always limited to only contain projects the client is allowed to see.",
                "tags": [
                    "Projects"
                ],
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "JSON specifying filter conditions.\nAccepts the same format as returned by the [queries](#queries) endpoint.\nCurrently supported filters are:\n\n+ active: based on the active property of the project\n\n+ ancestor: filters projects by their ancestor. A project is not considered to be it's own ancestor.\n\n+ created_at: based on the time the project was created\n\n+ latest_activity_at: based on the time the last activity was registered on a project.\n\n+ name_and_identifier: based on both the name and the identifier.\n\n+ parent_id: filters projects by their parent.\n\n+ principal: based on members of the project.\n\n+ type_id: based on the types active in a project.\n\n+ user_action: based on the actions (see [Actions](#actions)) the current user has in the project.\n\n+ id: based on projects' id.\nThere might also be additional filters based on the custom fields that have been configured.",
                        "required": false,
                        "x-example": "[{ \"ancestor\": { \"operator\": \"=\", \"values\": ['1'] }\" }]",
                        "type": "string"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "JSON specifying sort criteria.\nCurrently supported orders are:\n\n+ id\n\n+ name\n\n+ created_at\n\n+ public\n\n+ latest_activity_at\n\n+ required_disk_space\nThere might also be additional orders based on the custom fields that have been configured.",
                        "required": false,
                        "x-example": "[[\"id\", \"asc\"]]",
                        "type": "string"
                    }
                ]
            }
        },
        "/api/v3/projects/schemas": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Schema",
                                "_dependencies": [],
                                "id": {
                                    "type": "Integer",
                                    "name": "ID",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": false
                                },
                                "name": {
                                    "type": "String",
                                    "name": "Name",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": true,
                                    "minLength": 1,
                                    "maxLength": 255
                                },
                                "identifier": {
                                    "type": "String",
                                    "name": "Identifier",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": true,
                                    "minLength": 1,
                                    "maxLength": 100
                                },
                                "description": {
                                    "type": "Formattable",
                                    "name": "Description",
                                    "required": false,
                                    "hasDefault": false,
                                    "writable": true
                                },
                                "public": {
                                    "type": "Boolean",
                                    "name": "Public",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": true
                                },
                                "active": {
                                    "type": "Boolean",
                                    "name": "Active",
                                    "required": true,
                                    "hasDefault": true,
                                    "writable": true
                                },
                                "status": {
                                    "type": "ProjectStatus",
                                    "name": "Status",
                                    "required": false,
                                    "hasDefault": true,
                                    "writable": true,
                                    "_links": {
                                        "allowedValues": [
                                            {
                                                "href": "/api/v3/project_statuses/on_track",
                                                "title": "On track"
                                            },
                                            {
                                                "href": "/api/v3/project_statuses/at_risk",
                                                "title": "At risk"
                                            },
                                            {
                                                "href": "/api/v3/project_statuses/off_track",
                                                "title": "Off track"
                                            }
                                        ]
                                    }
                                },
                                "statusExplanation": {
                                    "type": "Formattable",
                                    "name": "Status explanation",
                                    "required": false,
                                    "hasDefault": false,
                                    "writable": true
                                },
                                "parent": {
                                    "type": "Project",
                                    "name": "Subproject of",
                                    "required": false,
                                    "hasDefault": false,
                                    "writable": true,
                                    "location": "_links",
                                    "visibility": "default",
                                    "_links": {}
                                },
                                "createdAt": {
                                    "type": "DateTime",
                                    "name": "Created on",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": false
                                },
                                "updatedAt": {
                                    "type": "DateTime",
                                    "name": "Updated on",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": false
                                },
                                "customField30": {
                                    "type": "Integer",
                                    "name": "Integer project custom field",
                                    "required": false,
                                    "hasDefault": false,
                                    "writable": true,
                                    "visibility": "default"
                                },
                                "customField31": {
                                    "type": "CustomOption",
                                    "name": "List project custom field",
                                    "required": false,
                                    "hasDefault": false,
                                    "writable": true,
                                    "location": "_links",
                                    "visibility": "default",
                                    "_links": {}
                                },
                                "customField32": {
                                    "type": "Version",
                                    "name": "Version project custom field",
                                    "required": false,
                                    "hasDefault": false,
                                    "writable": true,
                                    "location": "_links",
                                    "visibility": "default",
                                    "_links": {}
                                },
                                "customField34": {
                                    "type": "Boolean",
                                    "name": "Boolean project custom field",
                                    "required": false,
                                    "hasDefault": false,
                                    "writable": true,
                                    "visibility": "default"
                                },
                                "customField35": {
                                    "type": "String",
                                    "name": "Text project custom field",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": true,
                                    "visibility": "default"
                                },
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/projects/schema"
                                    }
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Projects schemaModel"
                        }
                    }
                },
                "summary": "View project schema",
                "operationId": "View project schema",
                "description": "",
                "tags": [
                    "Projects"
                ],
                "parameters": [],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/projects/form": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Form",
                                "_embedded": {
                                    "payload": {
                                        "identifier": "new_project_identifier",
                                        "name": "New project name",
                                        "active": true,
                                        "public": false,
                                        "description": {
                                            "format": "markdown",
                                            "raw": null,
                                            "html": ""
                                        },
                                        "customField30": null,
                                        "customField34": null,
                                        "customField35": "Text custom field value",
                                        "customField41": {
                                            "format": "markdown",
                                            "raw": "",
                                            "html": ""
                                        },
                                        "customField42": null,
                                        "statusExplanation": {
                                            "format": "markdown",
                                            "raw": null,
                                            "html": "<p></p>"
                                        },
                                        "_links": {
                                            "customField26": {
                                                "href": null,
                                                "title": null
                                            },
                                            "customField31": {
                                                "href": null,
                                                "title": null
                                            },
                                            "parent": {
                                                "href": null
                                            },
                                            "status": {
                                                "href": null
                                            }
                                        }
                                    },
                                    "schema": {
                                        "_type": "Schema",
                                        "_dependencies": [],
                                        "id": {
                                            "type": "Integer",
                                            "name": "ID",
                                            "required": true,
                                            "hasDefault": false,
                                            "writable": false
                                        },
                                        "name": {
                                            "type": "String",
                                            "name": "Name",
                                            "required": true,
                                            "hasDefault": false,
                                            "writable": true,
                                            "minLength": 1,
                                            "maxLength": 255
                                        },
                                        "identifier": {
                                            "type": "String",
                                            "name": "Identifier",
                                            "required": true,
                                            "hasDefault": false,
                                            "writable": true,
                                            "minLength": 1,
                                            "maxLength": 100
                                        },
                                        "description": {
                                            "type": "Formattable",
                                            "name": "Description",
                                            "required": false,
                                            "hasDefault": false,
                                            "writable": true
                                        },
                                        "public": {
                                            "type": "Boolean",
                                            "name": "Public",
                                            "required": true,
                                            "hasDefault": false,
                                            "writable": true
                                        },
                                        "active": {
                                            "type": "Boolean",
                                            "name": "Active",
                                            "required": true,
                                            "hasDefault": true,
                                            "writable": true
                                        },
                                        "status": {
                                            "type": "ProjectStatus",
                                            "name": "Status",
                                            "required": false,
                                            "hasDefault": true,
                                            "writable": true,
                                            "_links": {
                                                "allowedValues": [
                                                    {
                                                        "href": "/api/v3/project_statuses/on_track",
                                                        "title": "On track"
                                                    },
                                                    {
                                                        "href": "/api/v3/project_statuses/at_risk",
                                                        "title": "At risk"
                                                    },
                                                    {
                                                        "href": "/api/v3/project_statuses/off_track",
                                                        "title": "Off track"
                                                    }
                                                ]
                                            }
                                        },
                                        "statusExplanation": {
                                            "type": "Formattable",
                                            "name": "Status explanation",
                                            "required": false,
                                            "hasDefault": false,
                                            "writable": true
                                        },
                                        "parent": {
                                            "type": "Project",
                                            "name": "Subproject of",
                                            "required": false,
                                            "hasDefault": false,
                                            "writable": true,
                                            "location": "_links",
                                            "visibility": "default",
                                            "_links": {
                                                "allowedValues": {
                                                    "href": "/api/v3/projects/available_parent_projects"
                                                }
                                            }
                                        },
                                        "createdAt": {
                                            "type": "DateTime",
                                            "name": "Created on",
                                            "required": true,
                                            "hasDefault": false,
                                            "writable": false
                                        },
                                        "updatedAt": {
                                            "type": "DateTime",
                                            "name": "Updated on",
                                            "required": true,
                                            "hasDefault": false,
                                            "writable": false
                                        },
                                        "customField26": {
                                            "type": "User",
                                            "name": "Project user",
                                            "required": false,
                                            "hasDefault": false,
                                            "writable": true,
                                            "location": "_links",
                                            "visibility": "default",
                                            "_links": {
                                                "allowedValues": {
                                                    "href": "/api/v3/principals?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22%21%22%2C%22values%22%3A%5B%220%22%2C%223%22%5D%7D%7D%2C%7B%22type%22%3A%7B%22operator%22%3A%22%3D%22%2C%22values%22%3A%5B%22User%22%5D%7D%7D%2C%7B%22member%22%3A%7B%22operator%22%3A%22%3D%22%2C%22values%22%3A%5B%22%22%5D%7D%7D%5D&pageSize=0"
                                                }
                                            }
                                        },
                                        "customField30": {
                                            "type": "Integer",
                                            "name": "some project cf",
                                            "required": false,
                                            "hasDefault": false,
                                            "writable": true,
                                            "visibility": "default"
                                        },
                                        "customField31": {
                                            "type": "CustomOption",
                                            "name": "list project cf",
                                            "required": false,
                                            "hasDefault": false,
                                            "writable": true,
                                            "location": "_links",
                                            "visibility": "default",
                                            "_embedded": {
                                                "allowedValues": [
                                                    {
                                                        "_type": "CustomOption",
                                                        "id": 513,
                                                        "value": "abc",
                                                        "_links": {
                                                            "self": {
                                                                "href": "/api/v3/custom_options/513",
                                                                "title": "abc"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "_type": "CustomOption",
                                                        "id": 514,
                                                        "value": "def",
                                                        "_links": {
                                                            "self": {
                                                                "href": "/api/v3/custom_options/514",
                                                                "title": "def"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "_type": "CustomOption",
                                                        "id": 515,
                                                        "value": "ghi",
                                                        "_links": {
                                                            "self": {
                                                                "href": "/api/v3/custom_options/515",
                                                                "title": "ghi"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "_links": {
                                                "allowedValues": [
                                                    {
                                                        "href": "/api/v3/custom_options/513",
                                                        "title": "abc"
                                                    },
                                                    {
                                                        "href": "/api/v3/custom_options/514",
                                                        "title": "def"
                                                    },
                                                    {
                                                        "href": "/api/v3/custom_options/515",
                                                        "title": "ghi"
                                                    }
                                                ]
                                            }
                                        },
                                        "customField34": {
                                            "type": "Boolean",
                                            "name": "Bool Project CF",
                                            "required": false,
                                            "hasDefault": false,
                                            "writable": true,
                                            "visibility": "default"
                                        },
                                        "customField35": {
                                            "type": "String",
                                            "name": "text project cf",
                                            "required": true,
                                            "hasDefault": false,
                                            "writable": true,
                                            "visibility": "default"
                                        },
                                        "customField41": {
                                            "type": "Formattable",
                                            "name": "Long text project cf",
                                            "required": false,
                                            "hasDefault": false,
                                            "writable": true,
                                            "visibility": "default"
                                        },
                                        "customField42": {
                                            "type": "Date",
                                            "name": "Date project cf",
                                            "required": false,
                                            "hasDefault": false,
                                            "writable": true,
                                            "visibility": "default"
                                        },
                                        "_links": {}
                                    },
                                    "validationErrors": {
                                        "identifier": {
                                            "_type": "Error",
                                            "errorIdentifier": "urn:openproject-org:api:v3:errors:PropertyConstraintViolation",
                                            "message": "Identifier has already been taken.",
                                            "_embedded": {
                                                "details": {
                                                    "attribute": "identifier"
                                                }
                                            }
                                        }
                                    }
                                },
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/projects/form",
                                        "method": "post"
                                    },
                                    "validate": {
                                        "href": "/api/v3/projects/form",
                                        "method": "post"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Occurs when the client did not send a valid JSON object in the request body.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request body was not a single JSON object."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** add project which is a global permission",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    }
                },
                "summary": "Project create form",
                "operationId": "Project create form",
                "description": "",
                "tags": [
                    "Projects"
                ],
                "parameters": [],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/projects/{id}/form": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {}
                    },
                    "400": {
                        "description": "Occurs when the client did not send a valid JSON object in the request body.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request body was not a single JSON object."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** edit projects in the project",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    }
                },
                "summary": "Project update form",
                "operationId": "Project update form",
                "description": "",
                "tags": [
                    "Projects"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Project id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/projects/{id}/copy/form": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {}
                    },
                    "400": {
                        "description": "Occurs when the client did not send a valid JSON object in the request body.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request body was not a single JSON object."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** copy projects in the source project",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    }
                },
                "summary": "Project copy form",
                "operationId": "Project copy form",
                "description": "",
                "tags": [
                    "Projects"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Project id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/projects/{id}/copy": {
            "post": {
                "responses": {
                    "302": {
                        "description": "Returned if the request is successful. It will redirect to the job statuses API with the backend job that got created. You can query that endpoint to check the status of the copy, and eventually get the created project.",
                        "headers": {},
                        "examples": {}
                    },
                    "400": {
                        "description": "Occurs when the client did not send a valid JSON object in the request body.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request body was not a single JSON object."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** copy projects in the source project",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    },
                    "422": {
                        "description": "Returned if:\n\n* a constraint for a property was violated (`PropertyConstraintViolation`)",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:PropertyConstraintViolation",
                                "message": "Name can't be blank.",
                                "_embedded": {
                                    "details": {
                                        "attribute": "name"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Create project copy",
                "operationId": "Create project copy",
                "description": "",
                "tags": [
                    "Projects"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Project id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/projects/available_parent_projects": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/List available parent project candidatesModel"
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** edit project in a project or the global add project permission",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    }
                },
                "summary": "List available parent project candidates",
                "operationId": "List available parent project candidates",
                "description": "Lists projects which can become parent to another project. Only sound candidates are returned.\nFor instance a project cannot become parent of itself or it's children.\n\nTo specify the project for which a parent is queried for, the `of` parameter can be provided. If no `of`\nparameter is provided, a new project is assumed. Then, the check for the hierarchy is omitted as a new project cannot be\npart of a hierarchy yet.\n\nCandidates can be filtered. Most commonly one will want to filter by name or identifier.\nYou can do this through the `filters` parameter which works just like the work package index.\n\nFor instance to find all parent candidates with \"rollout\" in their name:\n\n```\n?filters=[{\"name_and_identifier\":{\"operator\":\"~\",\"values\":[\"rollout\"]}}]\n```",
                "tags": [
                    "Projects"
                ],
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "JSON specifying filter conditions.",
                        "required": false,
                        "x-example": "[{ \"ancestor\": { \"operator\": \"=\", \"values\": ['1'] }\" }]",
                        "type": "string"
                    },
                    {
                        "name": "of",
                        "in": "query",
                        "description": "The id or identifier of the project the parent candidate is determined for",
                        "required": false,
                        "x-example": "123",
                        "type": "string"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "JSON specifying sort criteria.\nAccepts the same format as returned by the [queries](#queries) endpoint and allows all the filters and sortBy supported by the project list end point.",
                        "required": false,
                        "x-example": "[[\"id\", \"asc\"]]",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/versions/{id}/projects": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/versions/2/projects"
                                    }
                                },
                                "total": 1,
                                "count": 1,
                                "_type": "Collection",
                                "_embedded": {
                                    "elements": [
                                        {
                                            "_type": "Project",
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/projects/1",
                                                    "title": "Lorem"
                                                },
                                                "categories": {
                                                    "href": "/api/v3/projects/1/categories"
                                                },
                                                "versions": {
                                                    "href": "/api/v3/projects/1/versions"
                                                },
                                                "status": {
                                                    "href": "/api/v3/project_statuses/on_track",
                                                    "title": "On track"
                                                }
                                            },
                                            "id": 1,
                                            "identifier": "project_identifier",
                                            "name": "Project example",
                                            "description": {
                                                "format": "markdown",
                                                "raw": "Lorem **ipsum** dolor sit amet",
                                                "html": "<p>Lorem <strong>ipsum</strong> dolor sit amet</p>"
                                            },
                                            "active": true,
                                            "statusExplanation": {
                                                "format": "markdown",
                                                "raw": "Everything **fine**",
                                                "html": "<p>Everything <strong>fine</strong></p>"
                                            },
                                            "createdAt": "2014-05-21T08:51:20Z",
                                            "updatedAt": "2014-05-21T08:51:20Z"
                                        }
                                    ]
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/List projects by versionModel"
                        }
                    },
                    "404": {
                        "description": "Returned if the version does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view work packages **or** manage versions (any project where the given version is available)\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of a version.\nThat's why a 404 is returned here, even if a 403 might be more appropriate.*",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "List projects with version",
                "operationId": "List projects with version",
                "description": "This endpoint lists the projects where the given version is available.\n\nThe projects returned depend on the sharing settings of the given version,\nbut are also limited to the projects that the current user is allowed to see.",
                "tags": [
                    "Projects"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Version id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/project_statuses/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "ProjectStatus",
                                "id": "on_track",
                                "name": "On track",
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/project_statuses/on_track"
                                    }
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/View project statusModel"
                        }
                    },
                    "404": {
                        "description": "Returned if the project status does not exist.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The requested resource could not be found."
                            }
                        }
                    }
                },
                "summary": "View project status",
                "operationId": "View project status",
                "description": "",
                "tags": [
                    "Projects"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Project status id",
                        "required": true,
                        "x-example": "on_track",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/queries/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/QueryModel"
                        }
                    },
                    "404": {
                        "description": "Returned if the query does not exist or the client does not have sufficient permissions to see it.\n\n**Required condition:** query belongs to user or query is public\n\n**Required permission:** view work package in queries project",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified query does not exist."
                            }
                        }
                    }
                },
                "summary": "View query",
                "operationId": "View query",
                "description": "Retrieve an individual query as identified by the id parameter. Then end point accepts a number of parameters that can be used to override the resources' persisted parameters.",
                "tags": [
                    "Queries"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Query id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "JSON specifying filter conditions.\nThe filters provided as parameters are not applied to the query but are instead used to override the query's persisted filters.\nAll filters also accepted by the work packages endpoint are accepted. If no filter is to be applied, the client should send an empty array (`[]`).",
                        "required": false,
                        "x-example": "[{ \"assignee\": { \"operator\": \"=\", \"values\": [\"1\", \"5\"] }\" }]",
                        "type": "string",
                        "default": "[{ \"status_id\": { \"operator\": \"o\", \"values\": null }}]"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Page number inside the queries' result collection of work packages.",
                        "required": false,
                        "x-example": "25",
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of elements to display per page for the queries' result collection of work packages.",
                        "required": false,
                        "x-example": "25",
                        "type": "integer"
                    },
                    {
                        "name": "columns",
                        "in": "query",
                        "description": "Selected columns for the table view.",
                        "required": false,
                        "x-example": "[]",
                        "type": "string",
                        "default": "['type', 'priority']"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "JSON specifying sort criteria. The sort criteria is applied to the query's result collection of work packages overriding the query's persisted sort criteria.",
                        "required": false,
                        "x-example": "[[\"status\", \"asc\"]]",
                        "type": "string",
                        "default": "[\"id\", \"asc\"]"
                    },
                    {
                        "name": "groupBy",
                        "in": "query",
                        "description": "The column to group by. The grouping criteria is applied to the to the query's result collection of work packages overriding the query's persisted group criteria.",
                        "required": false,
                        "x-example": "status",
                        "type": "string"
                    },
                    {
                        "name": "showSums",
                        "in": "query",
                        "description": "Indicates whether properties should be summed up if they support it. The showSums parameter is applied to the to the query's result collection of work packages overriding the query's persisted sums property.",
                        "required": false,
                        "x-example": "true",
                        "type": "boolean",
                        "default": "false"
                    },
                    {
                        "name": "timelineVisible",
                        "in": "query",
                        "description": "Indicates whether the timeline should be shown.",
                        "required": false,
                        "x-example": "true",
                        "type": "boolean",
                        "default": "false"
                    },
                    {
                        "name": "timelineLabels",
                        "in": "query",
                        "description": "Overridden labels in the timeline view",
                        "required": false,
                        "x-example": "{}",
                        "type": "string",
                        "default": "{}"
                    },
                    {
                        "name": "highlightingMode",
                        "in": "query",
                        "description": "Highlighting mode for the table view.",
                        "required": false,
                        "x-example": "inline",
                        "type": "string",
                        "default": "inline"
                    },
                    {
                        "name": "highlightedAttributes",
                        "in": "query",
                        "description": "Highlighted attributes mode for the table view when `highlightingMode` is `inline`. When set to `[]` all highlightable attributes will be returned as `highlightedAttributes`.",
                        "required": false,
                        "x-example": "[]",
                        "type": "string",
                        "default": "['type', 'priority']"
                    },
                    {
                        "name": "showHierarchies",
                        "in": "query",
                        "description": "Indicates whether the hierarchy mode should be enabled.",
                        "required": false,
                        "x-example": "true",
                        "type": "boolean",
                        "default": "true"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/QueryModel"
                        }
                    },
                    "400": {
                        "description": "Occurs when the client did not send a valid JSON object in the request body.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request body was not a single JSON object."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** edit work package",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to edit the content of the work package."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the query does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view work packages in the query's project (unless global)",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified query does not exist."
                            }
                        }
                    },
                    "422": {
                        "description": "Returned if:\n\n* the client tries to modify a read-only property (`PropertyIsReadOnly`)\n\n* a constraint for a property was violated (`PropertyConstraintViolation`)\n\n* the client provides a link to an invalid resource (`ResourceTypeMismatch`)",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:PropertyConstraintViolation",
                                "message": "The name might not be blank.",
                                "_embedded": {
                                    "details": {
                                        "attribute": "name"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Edit Query",
                "operationId": "Edit Query",
                "description": "When calling this endpoint the client provides a single object, containing the properties and links that it wants to change, in the body.\nNote that it is only allowed to provide properties or links supporting the **write** operation.",
                "tags": [
                    "Queries"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Query id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "name": "New query name"
                            }
                        }
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {},
                        "examples": {}
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** for own queries none; for public queries: manage public queries\n\n*Note that you will only receive this error, if you are at least allowed to see the corresponding query.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the query does not exist or the client does not have sufficient permissions to see it.\n\n**Required condition:** query belongs to user or query is public\n\n**Required permission:** view work package in queries project",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The requested resource could not be found."
                            }
                        }
                    }
                },
                "summary": "Delete query",
                "operationId": "Delete query",
                "description": "Delete the query identified by the id parameter",
                "tags": [
                    "Queries"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Query id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/queries/default": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/Default QueryModel"
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions to see the default query.\n\n**Required permission:** view work packages in any project",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    }
                },
                "summary": "View default query",
                "operationId": "View default query",
                "description": "Same as [viewing an existing, persisted Query](#queries-query-get) in its response, this resource returns an unpersisted query and by that allows to get the default query configuration. The client may also provide additional parameters which will modify the default query.",
                "tags": [
                    "Queries"
                ],
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "JSON specifying filter conditions.\nThe filters provided as parameters are not applied to the query but are instead used to override the query's persisted filters.\nAll filters also accepted by the work packages endpoint are accepted. If no filter is to be applied, the client should send an empty array (`[]`).",
                        "required": false,
                        "x-example": "[{ \"assignee\": { \"operator\": \"=\", \"values\": [\"1\", \"5\"] }\" }]",
                        "type": "string",
                        "default": "[{ \"status_id\": { \"operator\": \"o\", \"values\": null }}]"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Page number inside the queries' result collection of work packages.",
                        "required": false,
                        "x-example": "25",
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of elements to display per page for the queries' result collection of work packages.",
                        "required": false,
                        "x-example": "25",
                        "type": "integer"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "JSON specifying sort criteria. The sort criteria is applied to the query's result collection of work packages overriding the query's persisted sort criteria.",
                        "required": false,
                        "x-example": "[[\"status\", \"asc\"]]",
                        "type": "string",
                        "default": "[\"id\", \"asc\"]"
                    },
                    {
                        "name": "groupBy",
                        "in": "query",
                        "description": "The column to group by. The grouping criteria is applied to the to the query's result collection of work packages overriding the query's persisted group criteria.",
                        "required": false,
                        "x-example": "status",
                        "type": "string"
                    },
                    {
                        "name": "showSums",
                        "in": "query",
                        "description": "Indicates whether properties should be summed up if they support it. The showSums parameter is applied to the to the query's result collection of work packages overriding the query's persisted sums property.",
                        "required": false,
                        "x-example": "true",
                        "type": "boolean",
                        "default": "false"
                    },
                    {
                        "name": "timelineVisible",
                        "in": "query",
                        "description": "Indicates whether the timeline should be shown.",
                        "required": false,
                        "x-example": "true",
                        "type": "boolean",
                        "default": "false"
                    },
                    {
                        "name": "timelineZoomLevel",
                        "in": "query",
                        "description": "Indicates in what zoom level the timeline should be shown. Valid values are  `days`, `weeks`, `months`, `quarters`, and `years`.",
                        "required": false,
                        "x-example": "days",
                        "type": "string",
                        "default": "days"
                    },
                    {
                        "name": "showHierarchies",
                        "in": "query",
                        "description": "Indicates whether the hierarchy mode should be enabled.",
                        "required": false,
                        "x-example": "true",
                        "type": "boolean",
                        "default": "true"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/projects/{id}/queries/default": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Query",
                                "name": "default",
                                "filters": [
                                    {
                                        "_type": "StatusQueryFilter",
                                        "name": "Status",
                                        "_links": {
                                            "filter": {
                                                "href": "/api/v3/queries/filters/status",
                                                "title": "Status"
                                            },
                                            "operator": {
                                                "href": "/api/v3/queries/operators/o",
                                                "title": "open"
                                            },
                                            "schema": {
                                                "href": "/api/v3/queries/filter_instance_schemas/status"
                                            },
                                            "values": []
                                        }
                                    }
                                ],
                                "public": false,
                                "sums": false,
                                "timelineVisible": false,
                                "timelineZoomLevel": "days",
                                "showHierarchies": true,
                                "starred": false,
                                "_embedded": {
                                    "results": {
                                        "_type": "WorkPackageCollection",
                                        "total": 234,
                                        "count": 30,
                                        "pageSize": 2,
                                        "offset": 1,
                                        "_embedded": {
                                            "elements": [
                                                "<--- shortened for brevity --->"
                                            ]
                                        },
                                        "_links": {
                                            "self": {
                                                "href": "/api/v3/projects/42/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D"
                                            },
                                            "jumpTo": {
                                                "href": "/api/v3/projects/42/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D",
                                                "templated": true
                                            },
                                            "changeSize": {
                                                "href": "/api/v3/projects/42/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D",
                                                "templated": true
                                            },
                                            "createWorkPackage": {
                                                "href": "/api/v3/work_packages/form",
                                                "method": "post"
                                            },
                                            "createWorkPackageImmediate": {
                                                "href": "/api/v3/work_packages",
                                                "method": "post"
                                            }
                                        }
                                    }
                                },
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/projects/42/queries/default",
                                        "title": "Default"
                                    },
                                    "results": {
                                        "href": "/api/v3/projects/42/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D"
                                    },
                                    "columns": [
                                        {
                                            "href": "/api/v3/queries/columns/id",
                                            "title": "ID"
                                        },
                                        {
                                            "href": "/api/v3/queries/columns/subject",
                                            "title": "Subject"
                                        },
                                        {
                                            "href": "/api/v3/queries/columns/type",
                                            "title": "Type"
                                        },
                                        {
                                            "href": "/api/v3/queries/columns/status",
                                            "title": "Status"
                                        },
                                        {
                                            "href": "/api/v3/queries/columns/priority",
                                            "title": "Priority"
                                        },
                                        {
                                            "href": "/api/v3/queries/columns/assignee",
                                            "title": "Assignee"
                                        },
                                        {
                                            "href": "/api/v3/queries/columns/updated_at",
                                            "title": "Updated on"
                                        }
                                    ],
                                    "groupBy": {
                                        "href": null,
                                        "title": null
                                    },
                                    "sortBy": [
                                        {
                                            "href": "/api/v3/queries/sort_bys/parent-desc",
                                            "title": "Parent (Descending)"
                                        }
                                    ],
                                    "user": {
                                        "href": "/api/v3/users/1",
                                        "title": "OpenProject Admin"
                                    },
                                    "project": {
                                        "href": "/api/v3/projects/42",
                                        "title": "Lorem ipsum project"
                                    }
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Default Query for ProjectModel"
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions to see the default query.\n\n**Required permission:** view work packages in the project",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the client does not have sufficient permissions to see the project.\n\n**Required permission:** any permission in the project",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The requested resource could not be found."
                            }
                        }
                    }
                },
                "summary": "View default query for project",
                "operationId": "View default query for project",
                "description": "Same as [viewing an existing, persisted Query](#queries-query-get) in its response, this resource returns an unpersisted query and by that allows to get the default query configuration. The client may also provide additional parameters which will modify the default query. The query will already be scoped for the project.",
                "tags": [
                    "Queries"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the project the default query is requested for",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "JSON specifying filter conditions.\nThe filters provided as parameters are not applied to the query but are instead used to override the query's persisted filters.\nAll filters also accepted by the work packages endpoint are accepted. If no filter is to be applied, the client should send an empty array (`[]`).",
                        "required": false,
                        "x-example": "[{ \"assignee\": { \"operator\": \"=\", \"values\": [\"1\", \"5\"] }\" }]",
                        "type": "string",
                        "default": "[{ \"status_id\": { \"operator\": \"o\", \"values\": null }}]"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Page number inside the queries' result collection of work packages.",
                        "required": false,
                        "x-example": "25",
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of elements to display per page for the queries' result collection of work packages.",
                        "required": false,
                        "x-example": "25",
                        "type": "integer"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "JSON specifying sort criteria. The sort criteria is applied to the query's result collection of work packages overriding the query's persisted sort criteria.",
                        "required": false,
                        "x-example": "[[\"status\", \"asc\"]]",
                        "type": "string",
                        "default": "[\"id\", \"asc\"]"
                    },
                    {
                        "name": "groupBy",
                        "in": "query",
                        "description": "The column to group by. The grouping criteria is applied to the to the query's result collection of work packages overriding the query's persisted group criteria.",
                        "required": false,
                        "x-example": "status",
                        "type": "string"
                    },
                    {
                        "name": "showSums",
                        "in": "query",
                        "description": "Indicates whether properties should be summed up if they support it. The showSums parameter is applied to the to the query's result collection of work packages overriding the query's persisted sums property.",
                        "required": false,
                        "x-example": "true",
                        "type": "boolean",
                        "default": "false"
                    },
                    {
                        "name": "timelineVisible",
                        "in": "query",
                        "description": "Indicates whether the timeline should be shown.",
                        "required": false,
                        "x-example": "true",
                        "type": "boolean",
                        "default": "false"
                    },
                    {
                        "name": "showHierarchies",
                        "in": "query",
                        "description": "Indicates whether the hierarchy mode should be enabled.",
                        "required": false,
                        "x-example": "true",
                        "type": "boolean",
                        "default": "true"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/queries/{id}/star": {
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Query",
                                "id": 9,
                                "name": "fdsfdsfdsf",
                                "createdAt": "2015-03-20T12:56:56Z",
                                "updatedAt": "2015-05-20T18:16:53Z",
                                "filters": [
                                    {
                                        "_type": "StatusQueryFilter",
                                        "name": "Status",
                                        "_links": {
                                            "filter": {
                                                "href": "/api/v3/queries/filters/status",
                                                "title": "Status"
                                            },
                                            "operator": {
                                                "href": "/api/v3/queries/operators/o",
                                                "title": "open"
                                            },
                                            "schema": {
                                                "href": "/api/v3/queries/filter_instance_schemas/status"
                                            },
                                            "values": []
                                        }
                                    },
                                    {
                                        "_type": "DueDateQueryFilter",
                                        "name": "Finish date",
                                        "values": [
                                            "1"
                                        ],
                                        "_links": {
                                            "filter": {
                                                "href": "/api/v3/queries/filters/dueDate",
                                                "title": "Finish date"
                                            },
                                            "operator": {
                                                "href": "/api/v3/queries/operators/<t+",
                                                "title": "in less than"
                                            },
                                            "schema": {
                                                "href": "/api/v3/queries/filter_instance_schemas/dueDate"
                                            }
                                        }
                                    }
                                ],
                                "public": false,
                                "sums": false,
                                "starred": true,
                                "_embedded": {
                                    "results": {
                                        "_type": "WorkPackageCollection",
                                        "total": 234,
                                        "count": 30,
                                        "pageSize": 2,
                                        "offset": 1,
                                        "_embedded": {
                                            "elements": [
                                                "<--- shortened for brevity --->"
                                            ]
                                        },
                                        "_links": {
                                            "self": {
                                                "href": "/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D"
                                            },
                                            "jumpTo": {
                                                "href": "/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D",
                                                "templated": true
                                            },
                                            "changeSize": {
                                                "href": "/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D",
                                                "templated": true
                                            },
                                            "createWorkPackage": {
                                                "href": "/api/v3/work_packages/form",
                                                "method": "post"
                                            },
                                            "createWorkPackageImmediate": {
                                                "href": "/api/v3/work_packages",
                                                "method": "post"
                                            }
                                        }
                                    }
                                },
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/queries/9",
                                        "title": "fdsfdsfdsf"
                                    },
                                    "results": {
                                        "href": "/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D"
                                    },
                                    "columns": [
                                        {
                                            "href": "/api/v3/queries/columns/id",
                                            "title": "ID"
                                        },
                                        {
                                            "href": "/api/v3/queries/columns/subject",
                                            "title": "Subject"
                                        },
                                        {
                                            "href": "/api/v3/queries/columns/type",
                                            "title": "Type"
                                        },
                                        {
                                            "href": "/api/v3/queries/columns/status",
                                            "title": "Status"
                                        },
                                        {
                                            "href": "/api/v3/queries/columns/priority",
                                            "title": "Priority"
                                        },
                                        {
                                            "href": "/api/v3/queries/columns/assignee",
                                            "title": "Assignee"
                                        },
                                        {
                                            "href": "/api/v3/queries/columns/updated_at",
                                            "title": "Updated on"
                                        }
                                    ],
                                    "groupBy": {
                                        "href": null,
                                        "title": null
                                    },
                                    "sortBy": [
                                        {
                                            "href": "/api/v3/queries/sort_bys/parent-desc",
                                            "title": "Parent (Descending)"
                                        }
                                    ],
                                    "user": {
                                        "href": "/api/v3/users/1",
                                        "title": "OpenProject Admin"
                                    },
                                    "project": {
                                        "href": "/api/v3/projects/3",
                                        "title": "copy"
                                    }
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Star QueryModel"
                        }
                    },
                    "400": {
                        "description": "Occurs when the client did not send an empty request body.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request body was not empty."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** for own queries none; for public queries: manage public queries\n\n*Note that you will only receive this error, if you are at least allowed to see the corresponding query.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to star this query."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the query does not exist or the client does not have sufficient permissions to see it.\n\n**Required condition:** query belongs to user or query is public\n\n**Required permission:** view work package in queries project",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified query does not exist."
                            }
                        }
                    }
                },
                "summary": "Star query",
                "operationId": "Star query",
                "description": "",
                "tags": [
                    "Queries"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Query id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/queries/{id}/unstar": {
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Query",
                                "id": 9,
                                "name": "fdsfdsfdsf",
                                "createdAt": "2015-03-20T12:56:56Z",
                                "updatedAt": "2015-05-20T18:16:53Z",
                                "filters": [
                                    {
                                        "_type": "StatusQueryFilter",
                                        "name": "Status",
                                        "_links": {
                                            "filter": {
                                                "href": "/api/v3/queries/filters/status",
                                                "title": "Status"
                                            },
                                            "operator": {
                                                "href": "/api/v3/queries/operators/o",
                                                "title": "open"
                                            },
                                            "schema": {
                                                "href": "/api/v3/queries/filter_instance_schemas/status"
                                            },
                                            "values": []
                                        }
                                    },
                                    {
                                        "_type": "DueDateQueryFilter",
                                        "name": "Finish date",
                                        "values": [
                                            "1"
                                        ],
                                        "_links": {
                                            "filter": {
                                                "href": "/api/v3/queries/filters/dueDate",
                                                "title": "Finish date"
                                            },
                                            "operator": {
                                                "href": "/api/v3/queries/operators/<t+",
                                                "title": "in less than"
                                            },
                                            "schema": {
                                                "href": "/api/v3/queries/filter_instance_schemas/dueDate"
                                            }
                                        }
                                    }
                                ],
                                "public": false,
                                "sums": false,
                                "starred": false,
                                "_embedded": {
                                    "results": {
                                        "_type": "WorkPackageCollection",
                                        "total": 234,
                                        "count": 30,
                                        "pageSize": 2,
                                        "offset": 1,
                                        "_embedded": {
                                            "elements": [
                                                "<--- shortened for brevity --->"
                                            ]
                                        },
                                        "_links": {
                                            "self": {
                                                "href": "/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D"
                                            },
                                            "jumpTo": {
                                                "href": "/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D",
                                                "templated": true
                                            },
                                            "changeSize": {
                                                "href": "/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D",
                                                "templated": true
                                            },
                                            "createWorkPackage": {
                                                "href": "/api/v3/work_packages/form",
                                                "method": "post"
                                            },
                                            "createWorkPackageImmediate": {
                                                "href": "/api/v3/work_packages",
                                                "method": "post"
                                            }
                                        }
                                    }
                                },
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/queries/9",
                                        "title": "fdsfdsfdsf"
                                    },
                                    "results": {
                                        "href": "/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D"
                                    },
                                    "columns": [
                                        {
                                            "href": "/api/v3/queries/columns/id",
                                            "title": "ID"
                                        },
                                        {
                                            "href": "/api/v3/queries/columns/subject",
                                            "title": "Subject"
                                        },
                                        {
                                            "href": "/api/v3/queries/columns/type",
                                            "title": "Type"
                                        },
                                        {
                                            "href": "/api/v3/queries/columns/status",
                                            "title": "Status"
                                        },
                                        {
                                            "href": "/api/v3/queries/columns/priority",
                                            "title": "Priority"
                                        },
                                        {
                                            "href": "/api/v3/queries/columns/assignee",
                                            "title": "Assignee"
                                        },
                                        {
                                            "href": "/api/v3/queries/columns/updated_at",
                                            "title": "Updated on"
                                        }
                                    ],
                                    "groupBy": {
                                        "href": null,
                                        "title": null
                                    },
                                    "sortBy": [
                                        {
                                            "href": "/api/v3/queries/sort_bys/parent-desc",
                                            "title": "Parent (Descending)"
                                        }
                                    ],
                                    "user": {
                                        "href": "/api/v3/users/1",
                                        "title": "OpenProject Admin"
                                    },
                                    "project": {
                                        "href": "/api/v3/projects/3",
                                        "title": "copy"
                                    }
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Unstar QueryModel"
                        }
                    },
                    "400": {
                        "description": "Occurs when the client did not send an empty request body.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request body was not empty."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** for own queries none; for public queries: manage public queries\n\n*Note that you will only receive this error, if you are at least allowed to see the corresponding query.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to unstar this query."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the query does not exist or the client does not have sufficient permissions to see it.\n\n**Required condition:** query belongs to user or query is public\n\n**Required permission:** view work package in queries project",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified query does not exist."
                            }
                        }
                    }
                },
                "summary": "Unstar query",
                "operationId": "Unstar query",
                "description": "",
                "tags": [
                    "Queries"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Query id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/queries": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/queries"
                                    }
                                },
                                "total": 1,
                                "count": 1,
                                "_type": "Collection",
                                "_embedded": {
                                    "elements": [
                                        {
                                            "_type": "Query",
                                            "id": 9,
                                            "name": "fdsfdsfdsf",
                                            "createdAt": "2015-03-20T12:56:56Z",
                                            "updatedAt": "2015-05-20T18:16:53Z",
                                            "filters": [
                                                {
                                                    "_type": "StatusQueryFilter",
                                                    "name": "Status",
                                                    "_links": {
                                                        "filter": {
                                                            "href": "/api/v3/queries/filters/status",
                                                            "title": "Status"
                                                        },
                                                        "operator": {
                                                            "href": "/api/v3/queries/operators/o",
                                                            "title": "open"
                                                        },
                                                        "schema": {
                                                            "href": "/api/v3/queries/filter_instance_schemas/status"
                                                        },
                                                        "values": []
                                                    }
                                                },
                                                {
                                                    "_type": "DueDateQueryFilter",
                                                    "name": "Finish date",
                                                    "values": [
                                                        "1"
                                                    ],
                                                    "_links": {
                                                        "filter": {
                                                            "href": "/api/v3/queries/filters/dueDate",
                                                            "title": "Finish date"
                                                        },
                                                        "operator": {
                                                            "href": "/api/v3/queries/operators/<t+",
                                                            "title": "in less than"
                                                        },
                                                        "schema": {
                                                            "href": "/api/v3/queries/filter_instance_schemas/dueDate"
                                                        }
                                                    }
                                                }
                                            ],
                                            "public": false,
                                            "sums": false,
                                            "starred": true,
                                            "_embedded": {
                                                "results": {
                                                    "_type": "WorkPackageCollection",
                                                    "total": 234,
                                                    "count": 30,
                                                    "pageSize": 2,
                                                    "offset": 1,
                                                    "_embedded": {
                                                        "elements": [
                                                            "<--- shortened for brevity --->"
                                                        ]
                                                    },
                                                    "_links": {
                                                        "self": {
                                                            "href": "/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D"
                                                        },
                                                        "jumpTo": {
                                                            "href": "/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D",
                                                            "templated": true
                                                        },
                                                        "changeSize": {
                                                            "href": "/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D",
                                                            "templated": true
                                                        },
                                                        "createWorkPackage": {
                                                            "href": "/api/v3/work_packages/form",
                                                            "method": "post"
                                                        },
                                                        "createWorkPackageImmediate": {
                                                            "href": "/api/v3/work_packages",
                                                            "method": "post"
                                                        }
                                                    }
                                                }
                                            },
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/queries/9",
                                                    "title": "fdsfdsfdsf"
                                                },
                                                "results": {
                                                    "href": "/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D"
                                                },
                                                "columns": [
                                                    {
                                                        "href": "/api/v3/queries/columns/id",
                                                        "title": "ID"
                                                    },
                                                    {
                                                        "href": "/api/v3/queries/columns/subject",
                                                        "title": "Subject"
                                                    },
                                                    {
                                                        "href": "/api/v3/queries/columns/type",
                                                        "title": "Type"
                                                    },
                                                    {
                                                        "href": "/api/v3/queries/columns/status",
                                                        "title": "Status"
                                                    },
                                                    {
                                                        "href": "/api/v3/queries/columns/priority",
                                                        "title": "Priority"
                                                    },
                                                    {
                                                        "href": "/api/v3/queries/columns/assignee",
                                                        "title": "Assignee"
                                                    },
                                                    {
                                                        "href": "/api/v3/queries/columns/updated_at",
                                                        "title": "Updated on"
                                                    }
                                                ],
                                                "groupBy": {
                                                    "href": null,
                                                    "title": null
                                                },
                                                "sortBy": [
                                                    {
                                                        "href": "/api/v3/queries/sort_bys/parent-desc",
                                                        "title": "Parent (Descending)"
                                                    }
                                                ],
                                                "user": {
                                                    "href": "/api/v3/users/1",
                                                    "title": "OpenProject Admin"
                                                },
                                                "project": {
                                                    "href": "/api/v3/projects/3",
                                                    "title": "copy"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/QueriesModel"
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions to see queries.\n\n**Required permission:** view work packages or manage public queries in any project",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to see the queries."
                            }
                        }
                    }
                },
                "summary": "List queries",
                "operationId": "List queries",
                "description": "Returns a collection of queries. The collection can be filtered via query parameters similar to how work packages are filtered. Please note however, that the filters are applied to the queries and not to the work packages the queries in turn might return.",
                "tags": [
                    "Queries"
                ],
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "JSON specifying filter conditions.\nAccepts the same format as returned by the [queries](#queries) endpoint.\nCurrently supported filters are:\n\n+ project: filters queries by the project they are assigned to. If the project filter is passed with the `!*` (not any) operator, global queries are returned.\n\n+ id: filters queries based on their id\n\n+ updated_at: filters queries based on the last time they where updated",
                        "required": false,
                        "x-example": "[{ \"project_id\": { \"operator\": \"!*\", \"values\": null }\" }]",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/QueryModel"
                        }
                    },
                    "400": {
                        "description": "Occurs when the client did not send a valid JSON object in the request body.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request body was not a single JSON object."
                            }
                        }
                    },
                    "422": {
                        "description": "Returned if:\n\n* the client tries to modify a read-only property (`PropertyIsReadOnly`)\n\n* a constraint for a property was violated (`PropertyConstraintViolation`)\n\n* the client provides a link to an invalid resource (`ResourceTypeMismatch`),\n  e.g. a user, project or operator not found",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:PropertyConstraintViolation",
                                "message": "Project not found",
                                "_embedded": {
                                    "details": {
                                        "attribute": "project"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Create query",
                "operationId": "Create query",
                "description": "When calling this endpoint the client provides a single object, containing at least the properties and links that are required, in the body.\nThe required fields of a Query can be found in its schema, which is embedded in the respective form.\nNote that it is only allowed to provide properties or links supporting the write operation.",
                "tags": [
                    "Queries"
                ],
                "parameters": [],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/queries/form": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Query Create Form",
                "operationId": "Query Create Form",
                "description": "",
                "tags": [
                    "Queries"
                ],
                "parameters": []
            }
        },
        "/api/v3/queries/schema": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Schema",
                                "_dependencies": [],
                                "id": {
                                    "type": "Integer",
                                    "name": "ID",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": false
                                },
                                "name": {
                                    "type": "String",
                                    "name": "Name",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": true,
                                    "minLength": 1,
                                    "maxLength": 255
                                },
                                "createdAt": {
                                    "type": "DateTime",
                                    "name": "Created on",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": false
                                },
                                "updatedAt": {
                                    "type": "DateTime",
                                    "name": "Updated on",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": false
                                },
                                "user": {
                                    "type": "User",
                                    "name": "User",
                                    "required": true,
                                    "hasDefault": true,
                                    "writable": false
                                },
                                "project": {
                                    "type": "Project",
                                    "name": "Project",
                                    "required": false,
                                    "hasDefault": false,
                                    "writable": true,
                                    "location": "_links",
                                    "_links": {}
                                },
                                "public": {
                                    "type": "Boolean",
                                    "name": "Public",
                                    "required": false,
                                    "hasDefault": true,
                                    "writable": true
                                },
                                "sums": {
                                    "type": "Boolean",
                                    "name": "Sums",
                                    "required": false,
                                    "hasDefault": true,
                                    "writable": true
                                },
                                "timelineVisible": {
                                    "type": "Boolean",
                                    "name": "Timeline visible",
                                    "required": false,
                                    "hasDefault": true,
                                    "writable": true
                                },
                                "timelineZoomLevel": {
                                    "type": "String",
                                    "name": "Timeline zoom level",
                                    "required": false,
                                    "hasDefault": true,
                                    "writable": true
                                },
                                "timelineLabels": {
                                    "type": "QueryTimelineLabels",
                                    "name": "Timeline labels",
                                    "required": false,
                                    "hasDefault": true,
                                    "writable": true
                                },
                                "highlightingMode": {
                                    "type": "String",
                                    "name": "Highlighting mode",
                                    "required": false,
                                    "hasDefault": true,
                                    "writable": true
                                },
                                "highlightedAttributes": {
                                    "type": "[]QueryColumn",
                                    "name": "Highlighted attributes",
                                    "required": false,
                                    "hasDefault": true,
                                    "writable": true,
                                    "location": "_links"
                                },
                                "showHierarchies": {
                                    "type": "Boolean",
                                    "name": "Show hierarchies",
                                    "required": false,
                                    "hasDefault": true,
                                    "writable": true
                                },
                                "starred": {
                                    "type": "Boolean",
                                    "name": "Starred",
                                    "required": false,
                                    "hasDefault": true,
                                    "writable": true
                                },
                                "columns": {
                                    "type": "[]QueryColumn",
                                    "name": "Columns",
                                    "required": false,
                                    "hasDefault": true,
                                    "writable": true,
                                    "location": "_links",
                                    "_links": {}
                                },
                                "filters": {
                                    "type": "[]QueryFilterInstance",
                                    "name": "Filters",
                                    "required": false,
                                    "writable": true,
                                    "hasDefault": true,
                                    "location": "_links",
                                    "_links": {
                                        "allowedValuesSchemas": {
                                            "href": "/api/v3/queries/filter_instance_schemas"
                                        }
                                    }
                                },
                                "groupBy": {
                                    "type": "[]QueryGroupBy",
                                    "name": "Group results by",
                                    "required": false,
                                    "hasDefault": false,
                                    "writable": true,
                                    "_links": {}
                                },
                                "sortBy": {
                                    "type": "[]QuerySortBy",
                                    "name": "Sort by",
                                    "required": false,
                                    "hasDefault": true,
                                    "writable": true,
                                    "_links": {}
                                },
                                "results": {
                                    "type": "WorkPackageCollection",
                                    "name": "Results",
                                    "required": false,
                                    "hasDefault": false,
                                    "writable": false
                                },
                                "_embedded": {
                                    "filtersSchemas": {
                                        "_type": "Collection",
                                        "total": 20,
                                        "count": 20,
                                        "_embedded": {
                                            "elements": [
                                                {
                                                    "_type": "QueryFilterInstanceSchema",
                                                    "_dependencies": [
                                                        {
                                                            "_type": "SchemaDependency",
                                                            "on": "operator",
                                                            "dependencies": {
                                                                "/api/v3/queries/operators/=": {
                                                                    "values": {
                                                                        "type": "[]User",
                                                                        "name": "Values",
                                                                        "required": true,
                                                                        "hasDefault": false,
                                                                        "writable": true,
                                                                        "_links": {}
                                                                    }
                                                                },
                                                                "/api/v3/queries/operators/!": {
                                                                    "values": {
                                                                        "type": "[]User",
                                                                        "name": "Values",
                                                                        "required": true,
                                                                        "hasDefault": false,
                                                                        "writable": true,
                                                                        "_links": {}
                                                                    }
                                                                },
                                                                "/api/v3/queries/operators/!*": {},
                                                                "/api/v3/queries/operators/*": {}
                                                            }
                                                        }
                                                    ],
                                                    "name": {
                                                        "type": "String",
                                                        "name": "Name",
                                                        "required": true,
                                                        "hasDefault": true,
                                                        "writable": false
                                                    },
                                                    "filter": {
                                                        "type": "QueryFilter",
                                                        "name": "Filter",
                                                        "required": true,
                                                        "hasDefault": false,
                                                        "writable": true,
                                                        "_links": {}
                                                    },
                                                    "_links": {
                                                        "self": {
                                                            "href": "/api/v3/queries/filter_instance_schemas/assignee"
                                                        },
                                                        "filter": {
                                                            "href": "/api/v3/queries/filters/assignee",
                                                            "title": "Assignee"
                                                        }
                                                    }
                                                },
                                                {
                                                    "_type": "QueryFilterInstanceSchema",
                                                    "_dependencies": [
                                                        {
                                                            "_type": "SchemaDependency",
                                                            "on": "operator",
                                                            "dependencies": {
                                                                "/api/v3/queries/operators/=": {
                                                                    "values": {
                                                                        "type": "[]User",
                                                                        "name": "Values",
                                                                        "required": true,
                                                                        "hasDefault": false,
                                                                        "writable": true,
                                                                        "_links": {}
                                                                    }
                                                                },
                                                                "/api/v3/queries/operators/!": {
                                                                    "values": {
                                                                        "type": "[]User",
                                                                        "name": "Values",
                                                                        "required": true,
                                                                        "hasDefault": false,
                                                                        "writable": true,
                                                                        "_links": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "name": {
                                                        "type": "String",
                                                        "name": "Name",
                                                        "required": true,
                                                        "hasDefault": true,
                                                        "writable": false
                                                    },
                                                    "filter": {
                                                        "type": "QueryFilter",
                                                        "name": "Filter",
                                                        "required": true,
                                                        "hasDefault": false,
                                                        "writable": true,
                                                        "_links": {}
                                                    },
                                                    "_links": {
                                                        "self": {
                                                            "href": "/api/v3/queries/filter_instance_schemas/author"
                                                        },
                                                        "filter": {
                                                            "href": "/api/v3/queries/filters/author",
                                                            "title": "Author"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "_links": {
                                            "self": {
                                                "href": "/api/v3/queries/filter_instance_schemas"
                                            }
                                        }
                                    }
                                },
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/queries/schema"
                                    }
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Schema For Global QueriesModel"
                        }
                    },
                    "403": {
                        "description": "**Required permission:** view work package in any project",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    }
                },
                "summary": "View schema for global queries",
                "operationId": "View schema for global queries",
                "description": "Retrieve the schema for global queries, those, that are not assigned to a project.",
                "tags": [
                    "Queries"
                ],
                "parameters": [],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/projects/{id}/queries/schema": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Schema",
                                "_dependencies": [],
                                "id": {
                                    "type": "Integer",
                                    "name": "ID",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": false
                                },
                                "name": {
                                    "type": "String",
                                    "name": "Name",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": true,
                                    "minLength": 1,
                                    "maxLength": 255
                                },
                                "createdAt": {
                                    "type": "DateTime",
                                    "name": "Created on",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": false
                                },
                                "updatedAt": {
                                    "type": "DateTime",
                                    "name": "Updated on",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": false
                                },
                                "user": {
                                    "type": "User",
                                    "name": "User",
                                    "required": true,
                                    "hasDefault": true,
                                    "writable": false
                                },
                                "project": {
                                    "type": "Project",
                                    "name": "Project",
                                    "required": false,
                                    "hasDefault": false,
                                    "writable": true,
                                    "_links": {}
                                },
                                "public": {
                                    "type": "Boolean",
                                    "name": "Public",
                                    "required": false,
                                    "hasDefault": true,
                                    "writable": true
                                },
                                "sums": {
                                    "type": "Boolean",
                                    "name": "Sums",
                                    "required": false,
                                    "hasDefault": true,
                                    "writable": true
                                },
                                "timelineVisible": {
                                    "type": "Boolean",
                                    "name": "Timeline visible",
                                    "required": false,
                                    "hasDefault": true,
                                    "writable": true
                                },
                                "timelineZoomLevel": {
                                    "type": "String",
                                    "name": "Timeline zoom level",
                                    "required": false,
                                    "hasDefault": true,
                                    "writable": true
                                },
                                "showHierarchies": {
                                    "type": "Boolean",
                                    "name": "Show hierarchies",
                                    "required": false,
                                    "hasDefault": true,
                                    "writable": true
                                },
                                "starred": {
                                    "type": "Boolean",
                                    "name": "Starred",
                                    "required": false,
                                    "hasDefault": true,
                                    "writable": true
                                },
                                "columns": {
                                    "type": "[]QueryColumn",
                                    "name": "Columns",
                                    "required": false,
                                    "hasDefault": true,
                                    "writable": true,
                                    "_links": {}
                                },
                                "filters": {
                                    "type": "[]QueryFilterInstance",
                                    "name": "Filters",
                                    "required": false,
                                    "writable": true,
                                    "hasDefault": true,
                                    "_links": {
                                        "allowedValuesSchemas": {
                                            "href": "/api/v3/projects/42/queries/filter_instance_schemas"
                                        }
                                    }
                                },
                                "groupBy": {
                                    "type": "[]QueryGroupBy",
                                    "name": "Group results by",
                                    "required": false,
                                    "hasDefault": false,
                                    "writable": true,
                                    "_links": {}
                                },
                                "sortBy": {
                                    "type": "[]QuerySortBy",
                                    "name": "Sort by",
                                    "required": false,
                                    "hasDefault": true,
                                    "writable": true,
                                    "_links": {}
                                },
                                "results": {
                                    "type": "WorkPackageCollection",
                                    "name": "Results",
                                    "required": false,
                                    "hasDefault": false,
                                    "writable": false
                                },
                                "_embedded": {
                                    "filtersSchemas": {
                                        "_type": "Collection",
                                        "total": 20,
                                        "count": 20,
                                        "_embedded": {
                                            "elements": [
                                                {
                                                    "_type": "QueryFilterInstanceSchema",
                                                    "_dependencies": [
                                                        {
                                                            "_type": "SchemaDependency",
                                                            "on": "operator",
                                                            "dependencies": {
                                                                "/api/v3/queries/operators/=": {
                                                                    "values": {
                                                                        "type": "[]User",
                                                                        "name": "Values",
                                                                        "required": true,
                                                                        "hasDefault": false,
                                                                        "writable": true,
                                                                        "_links": {}
                                                                    }
                                                                },
                                                                "/api/v3/queries/operators/!": {
                                                                    "values": {
                                                                        "type": "[]User",
                                                                        "name": "Values",
                                                                        "required": true,
                                                                        "hasDefault": false,
                                                                        "writable": true,
                                                                        "_links": {}
                                                                    }
                                                                },
                                                                "/api/v3/queries/operators/!*": {},
                                                                "/api/v3/queries/operators/*": {}
                                                            }
                                                        }
                                                    ],
                                                    "name": {
                                                        "type": "String",
                                                        "name": "Name",
                                                        "required": true,
                                                        "hasDefault": true,
                                                        "writable": false
                                                    },
                                                    "filter": {
                                                        "type": "QueryFilter",
                                                        "name": "Filter",
                                                        "required": true,
                                                        "hasDefault": false,
                                                        "writable": true,
                                                        "_links": {}
                                                    },
                                                    "_links": {
                                                        "self": {
                                                            "href": "/api/v3/queries/filter_instance_schemas/assignee"
                                                        },
                                                        "filter": {
                                                            "href": "/api/v3/queries/filters/assignee",
                                                            "title": "Assignee"
                                                        }
                                                    }
                                                },
                                                {
                                                    "_type": "QueryFilterInstanceSchema",
                                                    "_dependencies": [
                                                        {
                                                            "_type": "SchemaDependency",
                                                            "on": "operator",
                                                            "dependencies": {
                                                                "/api/v3/queries/operators/=": {
                                                                    "values": {
                                                                        "type": "[]User",
                                                                        "name": "Values",
                                                                        "required": true,
                                                                        "hasDefault": false,
                                                                        "writable": true,
                                                                        "_links": {}
                                                                    }
                                                                },
                                                                "/api/v3/queries/operators/!": {
                                                                    "values": {
                                                                        "type": "[]User",
                                                                        "name": "Values",
                                                                        "required": true,
                                                                        "hasDefault": false,
                                                                        "writable": true,
                                                                        "_links": {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "name": {
                                                        "type": "String",
                                                        "name": "Name",
                                                        "required": true,
                                                        "hasDefault": true,
                                                        "writable": false
                                                    },
                                                    "filter": {
                                                        "type": "QueryFilter",
                                                        "name": "Filter",
                                                        "required": true,
                                                        "hasDefault": false,
                                                        "writable": true,
                                                        "_links": {}
                                                    },
                                                    "_links": {
                                                        "self": {
                                                            "href": "/api/v3/queries/filter_instance_schemas/author"
                                                        },
                                                        "filter": {
                                                            "href": "/api/v3/queries/filters/author",
                                                            "title": "Author"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "_links": {
                                            "self": {
                                                "href": "/api/v3/projects/42/queries/filter_instance_schemas"
                                            }
                                        }
                                    }
                                },
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/projects/42/queries/schema"
                                    }
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Schema For Project QueriesModel"
                        }
                    },
                    "403": {
                        "description": "**Required permission:** view work package in the project",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    }
                },
                "summary": "View schema for project queries",
                "operationId": "View schema for project queries",
                "description": "Retrieve the schema for project queries.",
                "tags": [
                    "Queries"
                ],
                "parameters": [],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/queries/available_projects": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/Query Available ProjectsModel"
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** view work packages",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    }
                },
                "summary": "Available projects",
                "operationId": "Available projects",
                "description": "Gets a list of projects that are available as projects a query can be assigned to.",
                "tags": [
                    "Queries"
                ],
                "parameters": [],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/queries/columns/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "QueryColumn::Property",
                                "id": "priority",
                                "name": "Priority",
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/queries/columns/priority",
                                        "title": "Priority"
                                    }
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Query ColumnModel"
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package in any project",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:Unauthenticated",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the QueryColumn does not exist.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified query does not exist."
                            }
                        }
                    }
                },
                "summary": "View Query Column",
                "operationId": "View Query Column",
                "description": "Retrieve an individual QueryColumn as identified by the `id` parameter.",
                "tags": [
                    "Query Columns"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "QueryColumn id",
                        "required": true,
                        "x-example": "priority",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/queries/filters/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "QueryFilter",
                                "id": "status",
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/queries/filters/status",
                                        "title": "Status"
                                    }
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Query FilterModel"
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package in any project",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:Unauthenticated",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the QueryFilter does not exist.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified query does not exist."
                            }
                        }
                    }
                },
                "summary": "View Query Filter",
                "operationId": "View Query Filter",
                "description": "Retrieve an individual QueryFilter as identified by the id parameter.",
                "tags": [
                    "Query Filters"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "QueryFilter identifier.",
                        "required": true,
                        "x-example": "status",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/queries/operators/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "QueryOperator",
                                "id": "!",
                                "name": "is not",
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/queries/operators/!",
                                        "title": "is not"
                                    }
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Query OperatorModel"
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package in any project",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:Unauthenticated",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the QueryOperator does not exist.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified query does not exist."
                            }
                        }
                    }
                },
                "summary": "View Query Operator",
                "operationId": "View Query Operator",
                "description": "Retrieve an individual QueryOperator as identified by the `id` parameter.",
                "tags": [
                    "Query Operators"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "QueryOperator id",
                        "required": true,
                        "x-example": "!",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/queries/sort_bys/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "QuerySortBy",
                                "id": "status-asc",
                                "name": "Status (Ascending)",
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/queries/sort_bys/status-asc",
                                        "title": "Status (Ascending)"
                                    },
                                    "column": {
                                        "href": "/api/v3/queries/columns/status",
                                        "title": "Status"
                                    },
                                    "direction": {
                                        "href": "urn:openproject-org:api:v3:queries:directions:asc",
                                        "title": "Ascending"
                                    }
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Query Sort ByModel"
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package in any project",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:Unauthenticated",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the QuerySortBy does not exist.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified query does not exist."
                            }
                        }
                    }
                },
                "summary": "View Query Sort By",
                "operationId": "View Query Sort By",
                "description": "Retrieve an individual QuerySortBy as identified by the id parameter.",
                "tags": [
                    "Query Sort Bys"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "QuerySortBy identifier. The identifier is a combination of the column identifier and the direction.",
                        "required": true,
                        "x-example": "status-asc",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/queries/filter_instance_schemas/{identifier}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "QueryFilterInstanceSchema",
                                "_dependencies": [
                                    {
                                        "_type": "SchemaDependency",
                                        "on": "operator",
                                        "dependencies": {
                                            "/api/v3/queries/operators/=": {
                                                "values": {
                                                    "type": "[]User",
                                                    "name": "Values",
                                                    "required": true,
                                                    "hasDefault": false,
                                                    "writable": true,
                                                    "_links": {}
                                                }
                                            },
                                            "/api/v3/queries/operators/!": {
                                                "values": {
                                                    "type": "[]User",
                                                    "name": "Values",
                                                    "required": true,
                                                    "hasDefault": false,
                                                    "writable": true,
                                                    "_links": {}
                                                }
                                            }
                                        }
                                    }
                                ],
                                "name": {
                                    "type": "String",
                                    "name": "Name",
                                    "required": true,
                                    "hasDefault": true,
                                    "writable": false
                                },
                                "filter": {
                                    "type": "QueryFilter",
                                    "name": "Filter",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": true,
                                    "_links": {}
                                },
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/queries/filter_instance_schemas/author"
                                    },
                                    "filter": {
                                        "href": "/api/v3/queries/filters/author",
                                        "title": "Author"
                                    }
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Query Filter Instance SchemaModel"
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package in any project",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:Unauthenticated",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the QueryFilterInstanceSchema does not exist.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified query does not exist."
                            }
                        }
                    }
                },
                "summary": "View Query Filter Instance Schema",
                "operationId": "View Query Filter Instance Schema",
                "description": "Retrieve an individual QueryFilterInstanceSchema as identified by the id parameter.",
                "tags": [
                    "Query Filter Instance Schema"
                ],
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "description": "QueryFilterInstanceSchema identifier. The identifier is the filter identifier.",
                        "required": true,
                        "x-example": "author",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/queries/filter_instance_schemas": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Collection",
                                "total": 2,
                                "count": 2,
                                "_embedded": {
                                    "elements": [
                                        {
                                            "_type": "QueryFilterInstanceSchema",
                                            "_dependencies": [
                                                {
                                                    "_type": "SchemaDependency",
                                                    "on": "operator",
                                                    "dependencies": {
                                                        "/api/v3/queries/operators/=": {
                                                            "values": {
                                                                "type": "[]User",
                                                                "name": "Values",
                                                                "required": true,
                                                                "hasDefault": false,
                                                                "writable": true,
                                                                "_links": {}
                                                            }
                                                        },
                                                        "/api/v3/queries/operators/!": {
                                                            "values": {
                                                                "type": "[]User",
                                                                "name": "Values",
                                                                "required": true,
                                                                "hasDefault": false,
                                                                "writable": true,
                                                                "_links": {}
                                                            }
                                                        },
                                                        "/api/v3/queries/operators/!*": {},
                                                        "/api/v3/queries/operators/*": {}
                                                    }
                                                }
                                            ],
                                            "name": {
                                                "type": "String",
                                                "name": "Name",
                                                "required": true,
                                                "hasDefault": true,
                                                "writable": false
                                            },
                                            "filter": {
                                                "type": "QueryFilter",
                                                "name": "Filter",
                                                "required": true,
                                                "hasDefault": false,
                                                "writable": true,
                                                "_links": {}
                                            },
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/queries/filter_instance_schemas/assignee"
                                                },
                                                "filter": {
                                                    "href": "/api/v3/queries/filters/assignee",
                                                    "title": "Assignee"
                                                }
                                            }
                                        },
                                        {
                                            "_type": "QueryFilterInstanceSchema",
                                            "_dependencies": [
                                                {
                                                    "_type": "SchemaDependency",
                                                    "on": "operator",
                                                    "dependencies": {
                                                        "/api/v3/queries/operators/=": {
                                                            "values": {
                                                                "type": "[]User",
                                                                "name": "Values",
                                                                "required": true,
                                                                "hasDefault": false,
                                                                "writable": true,
                                                                "_links": {}
                                                            }
                                                        },
                                                        "/api/v3/queries/operators/!": {
                                                            "values": {
                                                                "type": "[]User",
                                                                "name": "Values",
                                                                "required": true,
                                                                "hasDefault": false,
                                                                "writable": true,
                                                                "_links": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            ],
                                            "name": {
                                                "type": "String",
                                                "name": "Name",
                                                "required": true,
                                                "hasDefault": true,
                                                "writable": false
                                            },
                                            "filter": {
                                                "type": "QueryFilter",
                                                "name": "Filter",
                                                "required": true,
                                                "hasDefault": false,
                                                "writable": true,
                                                "_links": {}
                                            },
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/queries/filter_instance_schemas/author"
                                                },
                                                "filter": {
                                                    "href": "/api/v3/queries/filters/author",
                                                    "title": "Author"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/queries/filter_instance_schemas"
                                    }
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Query Filter Instance SchemasModel"
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package in any project",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:Unauthenticated",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    }
                },
                "summary": "List Query Filter Instance Schemas",
                "operationId": "List Query Filter Instance Schemas",
                "description": "Returns the list of QueryFilterInstanceSchemas defined for a global query. That is a query not assigned to a project.",
                "tags": [
                    "Query Filter Instance Schema"
                ],
                "parameters": [],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/projects/{id}/queries/filter_instance_schemas": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Collection",
                                "total": 2,
                                "count": 2,
                                "_embedded": {
                                    "elements": [
                                        {
                                            "_type": "QueryFilterInstanceSchema",
                                            "_dependencies": [
                                                {
                                                    "_type": "SchemaDependency",
                                                    "on": "operator",
                                                    "dependencies": {
                                                        "/api/v3/queries/operators/=": {
                                                            "values": {
                                                                "type": "[]User",
                                                                "name": "Values",
                                                                "required": true,
                                                                "hasDefault": false,
                                                                "writable": true,
                                                                "_links": {}
                                                            }
                                                        },
                                                        "/api/v3/queries/operators/!": {
                                                            "values": {
                                                                "type": "[]User",
                                                                "name": "Values",
                                                                "required": true,
                                                                "hasDefault": false,
                                                                "writable": true,
                                                                "_links": {}
                                                            }
                                                        },
                                                        "/api/v3/queries/operators/!*": {},
                                                        "/api/v3/queries/operators/*": {}
                                                    }
                                                }
                                            ],
                                            "name": {
                                                "type": "String",
                                                "name": "Name",
                                                "required": true,
                                                "hasDefault": true,
                                                "writable": false
                                            },
                                            "filter": {
                                                "type": "QueryFilter",
                                                "name": "Filter",
                                                "required": true,
                                                "hasDefault": false,
                                                "writable": true,
                                                "_links": {}
                                            },
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/queries/filter_instance_schemas/assignee"
                                                },
                                                "filter": {
                                                    "href": "/api/v3/queries/filters/assignee",
                                                    "title": "Assignee"
                                                }
                                            }
                                        },
                                        {
                                            "_type": "QueryFilterInstanceSchema",
                                            "_dependencies": [
                                                {
                                                    "_type": "SchemaDependency",
                                                    "on": "operator",
                                                    "dependencies": {
                                                        "/api/v3/queries/operators/=": {
                                                            "values": {
                                                                "type": "[]User",
                                                                "name": "Values",
                                                                "required": true,
                                                                "hasDefault": false,
                                                                "writable": true,
                                                                "_links": {}
                                                            }
                                                        },
                                                        "/api/v3/queries/operators/!": {
                                                            "values": {
                                                                "type": "[]User",
                                                                "name": "Values",
                                                                "required": true,
                                                                "hasDefault": false,
                                                                "writable": true,
                                                                "_links": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            ],
                                            "name": {
                                                "type": "String",
                                                "name": "Name",
                                                "required": true,
                                                "hasDefault": true,
                                                "writable": false
                                            },
                                            "filter": {
                                                "type": "QueryFilter",
                                                "name": "Filter",
                                                "required": true,
                                                "hasDefault": false,
                                                "writable": true,
                                                "_links": {}
                                            },
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/queries/filter_instance_schemas/author"
                                                },
                                                "filter": {
                                                    "href": "/api/v3/queries/filters/author",
                                                    "title": "Author"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/projects/42/queries/filter_instance_schemas"
                                    }
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Query Filter Instance Schemas For ProjectModel"
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package in any project",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:Unauthenticated",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    }
                },
                "summary": "List Query Filter Instance Schemas for Project",
                "operationId": "List Query Filter Instance Schemas for Project",
                "description": "Returns the list of QueryFilterInstanceSchemas defined for a query of the specified project.",
                "tags": [
                    "Query Filter Instance Schema"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the project.",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/relations/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/relations/1"
                                    },
                                    "update": {
                                        "href": "/api/v3/relations/1/form",
                                        "method": "POST"
                                    },
                                    "updateImmediately": {
                                        "href": "/api/v3/relations/1",
                                        "method": "PATCH"
                                    },
                                    "delete": {
                                        "href": "/api/v3/relations/1",
                                        "method": "DELETE"
                                    },
                                    "from": {
                                        "href": "/api/v3/work_packages/42",
                                        "title": "Steel Delivery"
                                    },
                                    "to": {
                                        "href": "/api/v3/work_packages/84",
                                        "title": "Bending the steel"
                                    }
                                },
                                "_type": "Relation",
                                "id": 1,
                                "name": "precedes",
                                "type": "precedes",
                                "reverseType": "follows",
                                "description": "We can't bend the steel before it's been delivered!",
                                "delay": 0
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/RelationModel"
                        }
                    },
                    "404": {
                        "description": "Returned if the relation does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view work packages for the involved work packages",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified relation does not exist."
                            }
                        }
                    }
                },
                "summary": "View Relation",
                "operationId": "View Relation",
                "description": "",
                "tags": [
                    "Relations"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Relation id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/relations/1"
                                    },
                                    "update": {
                                        "href": "/api/v3/relations/1/form",
                                        "method": "POST"
                                    },
                                    "updateImmediately": {
                                        "href": "/api/v3/relations/1",
                                        "method": "PATCH"
                                    },
                                    "delete": {
                                        "href": "/api/v3/relations/1",
                                        "method": "DELETE"
                                    },
                                    "from": {
                                        "href": "/api/v3/work_packages/42",
                                        "title": "Steel Delivery"
                                    },
                                    "to": {
                                        "href": "/api/v3/work_packages/84",
                                        "title": "Bending the steel"
                                    }
                                },
                                "_type": "Relation",
                                "id": 1,
                                "name": "precedes",
                                "type": "precedes",
                                "reverseType": "follows",
                                "description": "We can't bend the steel before it's been delivered!",
                                "delay": 0
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/RelationModel"
                        }
                    },
                    "400": {
                        "description": "Occurs when the client did not send a valid JSON object in the request body.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request body was not a single JSON object."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the relation does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** manage work package relations",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified relation does not exist."
                            }
                        }
                    },
                    "422": {
                        "description": "Returned if:\n\n* the client tries to modify a read-only property (`PropertyIsReadOnly`)\n\n* a constraint for a property was violated (`PropertyConstraintViolation`)\n\n* the client provides a link to an invalid resource (`ResourceTypeMismatch`) or a\n  work package that does not exist or for which the client does not have sufficient permissions\n  to see it (**required permissions**: `view work packages` for the involved work packages).",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:PropertyConstraintViolation",
                                "message": "Delay must be a number greater than or equal to 0",
                                "_embedded": {
                                    "details": {
                                        "attribute": "delay"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Edit Relation",
                "operationId": "Edit Relation",
                "description": "When calling this endpoint the client provides a single object, containing the properties and links that it wants to change, in the body.\nIt is only allowed to provide properties or links supporting the **write** operation.\n\nNote that changing the `type` of a relation invariably also changes the respective `reverseType` as well as the \"name\" of it.\nThe returned Relation object will reflect that change. For instance if you change a Relation's\n`type` to \"follows\" then the `reverseType` will be changed to `precedes`.",
                "tags": [
                    "Relations"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Relation ID",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "Returned if the relation was deleted successfully.\nThe response body is empty.",
                        "headers": {},
                        "examples": {}
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** manage work package relations",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to delete this relation."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the relation does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** manage work package relations",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified relation does not exist."
                            }
                        }
                    }
                },
                "summary": "Delete Relation",
                "operationId": "Delete Relation",
                "description": "Deletes the relation.",
                "tags": [
                    "Relations"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Relation ID",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/relations/schema": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Schema",
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/relations/schema"
                                    }
                                },
                                "id": {
                                    "name": "ID",
                                    "type": "Integer",
                                    "writable": false
                                },
                                "type": {
                                    "name": "Type",
                                    "type": "String",
                                    "writable": true
                                },
                                "reverseType": {
                                    "name": "Reverse Type",
                                    "type": "String",
                                    "writable": false
                                },
                                "description": {
                                    "name": "Description",
                                    "type": "String",
                                    "writable": true
                                },
                                "from": {
                                    "name": "From work package",
                                    "type": "WorkPackage",
                                    "writable": false
                                },
                                "to": {
                                    "name": "To work package",
                                    "type": "WorkPackage",
                                    "writable": false
                                },
                                "delay": {
                                    "name": "Delay",
                                    "type": "Integer",
                                    "writable": true
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Relation schemaModel"
                        }
                    }
                },
                "summary": "View relation schema",
                "operationId": "View relation schema",
                "description": "",
                "tags": [
                    "Relations"
                ],
                "parameters": [],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/relations/schema/{type}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Schema",
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/relations/schema"
                                    }
                                },
                                "id": {
                                    "name": "ID",
                                    "type": "Integer",
                                    "writable": false
                                },
                                "type": {
                                    "name": "Type",
                                    "type": "String",
                                    "writable": true
                                },
                                "reverseType": {
                                    "name": "Reverse Type",
                                    "type": "String",
                                    "writable": false
                                },
                                "description": {
                                    "name": "Description",
                                    "type": "String",
                                    "writable": true
                                },
                                "from": {
                                    "name": "From work package",
                                    "type": "WorkPackage",
                                    "writable": false
                                },
                                "to": {
                                    "name": "To work package",
                                    "type": "WorkPackage",
                                    "writable": false
                                },
                                "delay": {
                                    "name": "Delay",
                                    "type": "Integer",
                                    "writable": true
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Relation schemaModel"
                        }
                    },
                    "404": {
                        "description": "Returned if the relation type does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** manage work package relations",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified relation type does not exist."
                            }
                        }
                    }
                },
                "summary": "View relation schema for type",
                "operationId": "View relation schema for type",
                "description": "",
                "tags": [
                    "Relations"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Type of the schema",
                        "required": true,
                        "x-example": "follows",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/relations": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/relations"
                                    }
                                },
                                "total": 3,
                                "count": 1,
                                "_type": "Collection",
                                "_embedded": {
                                    "elements": [
                                        {
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/relations/1"
                                                },
                                                "update": {
                                                    "href": "/api/v3/relations/1/form",
                                                    "method": "POST"
                                                },
                                                "updateImmediately": {
                                                    "href": "/api/v3/relations/1",
                                                    "method": "PATCH"
                                                },
                                                "delete": {
                                                    "href": "/api/v3/relations/1",
                                                    "method": "DELETE"
                                                },
                                                "from": {
                                                    "href": "/api/v3/work_packages/42",
                                                    "title": "Steel Delivery"
                                                },
                                                "to": {
                                                    "href": "/api/v3/work_packages/84",
                                                    "title": "Bending the steel"
                                                }
                                            },
                                            "_type": "Relation",
                                            "id": 1,
                                            "name": "precedes",
                                            "type": "precedes",
                                            "reverseType": "follows",
                                            "description": "We can't bend the steel before it's been delivered!",
                                            "delay": 0
                                        }
                                    ]
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/RelationsModel"
                        }
                    }
                },
                "summary": "List Relations",
                "operationId": "List Relations",
                "description": "Lists all relations according to the given (optional, logically conjunctive) filters and ordered by ID.\nThe response only includes relations between work packages which the user is allowed to see.",
                "tags": [
                    "Relations"
                ],
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "JSON specifying filter conditions.\nAccepts the same format as returned by the [queries](#queries) endpoint. Valid fields to filter by are:\n\n+ id - ID of relation\n\n+ from - ID of work package from which the filtered relations emanates.\n\n+ to - ID of work package to which this related points.\n\n+ involved - ID of either the `from` or the `to` work package.\n\n+ type - The type of relation to filter by, e.g. \"follows\".",
                        "required": false,
                        "x-example": "[{ \"from\": { \"operator\": \"=\", \"values\": 42 }\" }]",
                        "type": "string"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "JSON specifying sort criteria.\nAccepts the same format as returned by the [queries](#queries) endpoint.",
                        "required": false,
                        "x-example": "[[\"type\", \"asc\"]]",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/relations/{id}/form": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/relations/form"
                                    },
                                    "validate": {
                                        "href": "/api/v3/relations/form",
                                        "method": "POST"
                                    },
                                    "commit": {
                                        "href": "/api/v3/relations",
                                        "method": "PATCH"
                                    }
                                },
                                "_type": "Form",
                                "_embedded": {
                                    "payload": {
                                        "_links": {
                                            "from": {
                                                "href": "/api/v3/work_packages/4534"
                                            },
                                            "to": {
                                                "href": "/api/v3/work_packages/3857"
                                            }
                                        },
                                        "_type": "WorkPackage",
                                        "type": "follows",
                                        "delay": 3,
                                        "description": "let it rest for 3 days"
                                    },
                                    "schema": {
                                        "_type": "Schema",
                                        "_links": {
                                            "self": {
                                                "href": "/api/v3/relations/schema"
                                            }
                                        },
                                        "id": {
                                            "name": "ID",
                                            "type": "Integer",
                                            "writable": false
                                        },
                                        "type": {
                                            "name": "Type",
                                            "type": "String",
                                            "writable": true,
                                            "allowedValues": [
                                                "relates",
                                                "duplicates",
                                                "duplicated",
                                                "blocks",
                                                "blocked",
                                                "precedes",
                                                "follows",
                                                "includes",
                                                "partof",
                                                "requires",
                                                "required"
                                            ]
                                        },
                                        "reverseType": {
                                            "name": "Reverse Type",
                                            "type": "String",
                                            "writable": false
                                        },
                                        "description": {
                                            "name": "Description",
                                            "type": "String",
                                            "writable": true
                                        },
                                        "from": {
                                            "name": "From work package",
                                            "type": "WorkPackage",
                                            "writeable": false
                                        },
                                        "to": {
                                            "name": "To work package",
                                            "type": "WorkPackage",
                                            "writable": false
                                        },
                                        "delay": {
                                            "name": "Delay",
                                            "type": "Integer",
                                            "writable": true
                                        }
                                    },
                                    "validationErrors": {
                                        "from": {
                                            "_type": "Error",
                                            "errorIdentifier": "urn:openproject-org:api:v3:errors:BadExampleError",
                                            "message": "For the purpose of this example we need a validation error. The remainder of the response pretends there were no errors."
                                        }
                                    }
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Relation edit formModel"
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** manage work package relations\n\n*Note that you will only receive this error, if you are at least allowed to see the involved work packages.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to edit the specified relation."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the relation does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view (involved) work package(s), manage work package relations",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified relation does not exist."
                            }
                        }
                    }
                },
                "summary": "Relation edit form",
                "operationId": "Relation edit form",
                "description": "",
                "tags": [
                    "Relations"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the relation being modified",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/render/markdown": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "text/html": "<p>Hello world! <a href=\"http://example.com\">This</a> <strong>is</strong> markdown!</p>\n"
                        },
                        "schema": {
                            "$ref": "#/definitions/MarkdownModel"
                        }
                    },
                    "400": {
                        "description": "Returned if the context passed by the client is not valid (e.g. unknown).\n\nNote that this response will also occur when the requesting user\nis not allowed to see the context resource (e.g. limited work package visibility).",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRenderContext",
                                "message": "Could not render markdown string in the given context."
                            }
                        }
                    },
                    "415": {
                        "description": "Returned if the Content-Type indicated in the request is not `text/plain`.",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:TypeNotSupported",
                                "message": "Expected Content-Type to be 'text/plain' but got 'application/json'."
                            }
                        }
                    }
                },
                "summary": "Preview Markdown document",
                "operationId": "Preview Markdown document",
                "description": "",
                "tags": [
                    "Previewing"
                ],
                "parameters": [
                    {
                        "name": "context",
                        "in": "query",
                        "description": "API-Link to the context in which the rendering occurs, for example a specific work package.\n\nIf left out only context-agnostic rendering takes place.\nPlease note that OpenProject features markdown-extensions on top of the extensions GitHub Flavored Markdown (gfm) already\nprovides that can only work given a context (e.g. display attached images).\n\n**Supported contexts:**\n\n* `/api/v3/work_packages/{id}` - an existing work package",
                        "required": false,
                        "x-example": "/api/v3/work_packages/42",
                        "type": "string"
                    }
                ],
                "produces": [
                    "text/html",
                    "application/json"
                ]
            }
        },
        "/api/v3/render/plain": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "text/html": "<p>Hello world! This *is* plain text!</p>\n"
                        },
                        "schema": {
                            "$ref": "#/definitions/Plain TextModel"
                        }
                    },
                    "415": {
                        "description": "Returned if the Content-Type indicated in the request is not `text/plain`.",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:TypeNotSupported",
                                "message": "Expected Content-Type to be 'text/plain' but got 'application/json'."
                            }
                        }
                    }
                },
                "summary": "Preview plain document",
                "operationId": "Preview plain document",
                "description": "",
                "tags": [
                    "Previewing"
                ],
                "parameters": [],
                "produces": [
                    "text/html",
                    "application/json"
                ]
            }
        },
        "/api/v3/revisions/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/RevisionModel"
                        }
                    },
                    "404": {
                        "description": "Returned if the revision does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view changesets for the project the repository is created in.\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of a revision.\nThat's why a 404 is returned here, even if a 403 might be more appropriate.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified revision does not exist."
                            }
                        }
                    }
                },
                "summary": "View revision",
                "operationId": "View revision",
                "description": "",
                "tags": [
                    "Revisions"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Revision id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/roles/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Role",
                                "id": 3,
                                "name": "Manager",
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/roles/3",
                                        "title": "Manager"
                                    }
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/RoleModel"
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions to see roles.\n\n**Required permission:** view members **or** manage members",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to view this resource."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the role does not exist.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The requested resource could not be found."
                            }
                        }
                    }
                },
                "summary": "View role",
                "operationId": "View role",
                "description": "Fetch an individual role.",
                "tags": [
                    "Roles"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "role id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/roles": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Collection",
                                "total": 5,
                                "count": 5,
                                "_embedded": {
                                    "elements": [
                                        {
                                            "_type": "Role",
                                            "id": 3,
                                            "name": "Manager",
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/roles/3",
                                                    "title": "Manager"
                                                }
                                            }
                                        },
                                        {
                                            "_type": "Role",
                                            "id": 2,
                                            "name": "Anonymous",
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/roles/2",
                                                    "title": "Anonymous"
                                                }
                                            }
                                        },
                                        {
                                            "_type": "Role",
                                            "id": 5,
                                            "name": "Reader",
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/roles/5",
                                                    "title": "Reader"
                                                }
                                            }
                                        },
                                        {
                                            "_type": "Role",
                                            "id": 4,
                                            "name": "Member",
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/roles/4",
                                                    "title": "Member"
                                                }
                                            }
                                        },
                                        {
                                            "_type": "Role",
                                            "id": 1,
                                            "name": "Non member",
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/roles/1",
                                                    "title": "Non member"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/roles"
                                    }
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/RolesModel"
                        }
                    }
                },
                "summary": "List roles",
                "operationId": "List roles",
                "description": "List all defined roles. This includes built in roles like 'Anonymous' and 'Non member'.",
                "tags": [
                    "Roles"
                ],
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "JSON specifying filter conditions.\nAccepts the same format as returned by the [queries](#queries) endpoint.\nCurrently supported filters are:\n\n+ grantable: filters roles based on whether they are selectable for a membership\n\n+ unit: filters roles based on the unit ('project' or 'system') for which they are selectable for a membership",
                        "required": false,
                        "x-example": "[{ \"unit\": { \"operator\": \"=\", \"values\": [\"system\"] }\" }]",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/RootModel"
                        }
                    }
                },
                "summary": "View root",
                "operationId": "View root",
                "description": "",
                "tags": [
                    "Root"
                ],
                "parameters": []
            }
        },
        "/api/v3/example/schema": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Schema",
                                "_dependencies": [],
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/example/schema"
                                    }
                                },
                                "lockVersion": {
                                    "name": "Resource Version",
                                    "type": "Integer",
                                    "writable": false
                                },
                                "subject": {
                                    "name": "Subject",
                                    "type": "String",
                                    "minLength": 1,
                                    "maxLength": 255
                                },
                                "status": {
                                    "_links": {
                                        "allowedValues": [
                                            {
                                                "href": "/api/v3/statuses/1",
                                                "title": "New"
                                            },
                                            {
                                                "href": "/api/v3/statuses/2",
                                                "title": "Closed"
                                            }
                                        ]
                                    },
                                    "name": "Status",
                                    "type": "Status",
                                    "location": "_links",
                                    "_embedded": {
                                        "allowedValues": [
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/api/v3/statuses/1"
                                                    }
                                                },
                                                "_type": "Status",
                                                "id": 1,
                                                "name": "New",
                                                "position": 1,
                                                "isDefault": true,
                                                "isClosed": false,
                                                "defaultDoneRatio": 0,
                                                "createdAt": "2014-05-21T08:51:20Z",
                                                "updatedAt": "2014-05-21T09:12:00Z"
                                            },
                                            {
                                                "_links": {
                                                    "self": {
                                                        "href": "/api/v3/statuses/2"
                                                    }
                                                },
                                                "_type": "Status",
                                                "id": 2,
                                                "name": "Closed",
                                                "position": 2,
                                                "isDefault": false,
                                                "isClosed": true,
                                                "defaultDoneRatio": 100,
                                                "createdAt": "2014-05-21T08:51:20Z",
                                                "updatedAt": "2014-05-21T09:12:00Z"
                                            }
                                        ]
                                    }
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Example SchemaModel"
                        }
                    }
                },
                "summary": "view the schema",
                "operationId": "view the schema",
                "description": "This is an example of how a schema might look like. Note that this endpoint does not exist in the actual implementation.",
                "tags": [
                    "Schemas"
                ],
                "parameters": [],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/statuses": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/statuses"
                                    }
                                },
                                "total": 6,
                                "count": 6,
                                "_type": "Collection",
                                "_embedded": {
                                    "elements": [
                                        {
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/statuses/1"
                                                }
                                            },
                                            "_type": "Status",
                                            "id": 1,
                                            "name": "New",
                                            "position": 1,
                                            "isDefault": true,
                                            "isClosed": false,
                                            "defaultDoneRatio": 0
                                        },
                                        {
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/statuses/3"
                                                }
                                            },
                                            "_type": "Status",
                                            "id": 3,
                                            "name": "Resolved",
                                            "position": 3,
                                            "isDefault": false,
                                            "isClosed": false,
                                            "isReadonly": false,
                                            "defaultDoneRatio": 75
                                        },
                                        {
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/statuses/4"
                                                }
                                            },
                                            "_type": "Status",
                                            "id": 4,
                                            "name": "Feedback",
                                            "position": 4,
                                            "isDefault": false,
                                            "isClosed": false,
                                            "defaultDoneRatio": 25
                                        },
                                        {
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/statuses/5"
                                                }
                                            },
                                            "_type": "Status",
                                            "id": 5,
                                            "name": "Closed",
                                            "position": 5,
                                            "isDefault": false,
                                            "isClosed": true,
                                            "defaultDoneRatio": 100
                                        },
                                        {
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/statuses/6"
                                                }
                                            },
                                            "_type": "Status",
                                            "id": 6,
                                            "name": "Rejected",
                                            "position": 6,
                                            "isDefault": false,
                                            "isClosed": true,
                                            "defaultDoneRatio": 100
                                        },
                                        {
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/statuses/2"
                                                }
                                            },
                                            "_type": "Status",
                                            "id": 2,
                                            "name": "In Progress",
                                            "position": 3,
                                            "isDefault": false,
                                            "isClosed": false,
                                            "defaultDoneRatio": 50
                                        }
                                    ]
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/StatusesModel"
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** view work package (on any project)",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to see the statuses."
                            }
                        }
                    }
                },
                "summary": "List all Statuses",
                "operationId": "List all Statuses",
                "description": "",
                "tags": [
                    "Statuses"
                ],
                "parameters": [],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/statuses/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/statuses/1"
                                    }
                                },
                                "_type": "Status",
                                "id": 1,
                                "name": "New",
                                "position": 1,
                                "isDefault": true,
                                "isClosed": false,
                                "defaultDoneRatio": 0
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/StatusModel"
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** view work package (on any project)",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to see this status."
                            }
                        }
                    }
                },
                "summary": "View Status",
                "operationId": "View Status",
                "description": "",
                "tags": [
                    "Statuses"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "status id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/time_entries/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/View time entryModel"
                        }
                    },
                    "404": {
                        "description": "Returned if the time entry does not exist or if the user does not have permission to view them.\n\n**Required permission** `view time entries` in the project the time entry is assigned to or `view own time entries` for time entries belonging to the user",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The requested resource could not be found."
                            }
                        }
                    }
                },
                "summary": "View time entry",
                "operationId": "View time entry",
                "description": "",
                "tags": [
                    "Time Entries"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "time entry id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/View time entryModel"
                        }
                    },
                    "400": {
                        "description": "Occurs when the client did not send a valid JSON object in the request body.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request body was not a single JSON object."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** Edit (own) time entries, depending on what time entry is being modified.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    },
                    "422": {
                        "description": "Returned if:\n\n* a constraint for a property was violated (`PropertyConstraintViolation`)",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:PropertyConstraintViolation",
                                "message": "Work package is invalid.",
                                "_embedded": {
                                    "details": {
                                        "attribute": "workPackage"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Update Time entry",
                "operationId": "Update Time entry",
                "description": "Updates the given time entry by applying the attributes provided in the body. Please note that while there is a fixed set of attributes, custom fields can extend a time entries' attributes and are accepted by the endpoint.",
                "tags": [
                    "Time Entries"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Time entry id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "Returned if the time entry was deleted successfully.",
                        "headers": {},
                        "examples": {}
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the time entry does not exist or if the user does not have sufficient permissions to see the time entry.\n\n**Required permission** `view time entries` in the project the time entry is assigned to or `view own time entries` for time entries belonging to the user",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The requested resource could not be found."
                            }
                        }
                    }
                },
                "summary": "Delete time entry",
                "operationId": "Delete time entry",
                "description": "Permanently deletes the specified time entry.",
                "tags": [
                    "Time Entries"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Time entry id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/time_entries": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/View time entryModel"
                        }
                    },
                    "400": {
                        "description": "Occurs when the client did not send a valid JSON object in the request body.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request body was not a single JSON object."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** Log time",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    },
                    "422": {
                        "description": "Returned if:\n\n* a constraint for a property was violated (`PropertyConstraintViolation`)",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:PropertyConstraintViolation",
                                "message": "Work package is invalid.",
                                "_embedded": {
                                    "details": {
                                        "attribute": "workPackage"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Create Time entry",
                "operationId": "Create Time entry",
                "description": "Creates a new time entry applying the attributes provided in the body. Please note that while there is a fixed set of attributes, custom fields can extend a time entries' attributes and are accepted by the endpoint.",
                "tags": [
                    "Time Entries"
                ],
                "parameters": [],
                "produces": [
                    "application/hal+json"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Collection",
                                "total": 39,
                                "count": 2,
                                "pageSize": 2,
                                "offset": 1,
                                "_embedded": {
                                    "elements": [
                                        {
                                            "_type": "TimeEntry",
                                            "id": 5,
                                            "comment": {
                                                "format": "plain",
                                                "raw": "Some comment",
                                                "html": "<p>Some comment</p>"
                                            },
                                            "spentOn": "2015-03-20",
                                            "hours": "PT5H",
                                            "createdAt": "2015-03-20T12:56:56Z",
                                            "updatedAt": "2015-03-20T12:56:56Z",
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/time_entries/1"
                                                },
                                                "updateImmediately": {
                                                    "href": "/api/v3/time_entries/1",
                                                    "method": "patch"
                                                },
                                                "delete": {
                                                    "href": "/api/v3/time_entries/1",
                                                    "method": "delete"
                                                },
                                                "project": {
                                                    "href": "/api/v3/projects/1",
                                                    "title": "Some project"
                                                },
                                                "workPackage": {
                                                    "href": "/api/v3/work_packages/1",
                                                    "title": "Some work package"
                                                },
                                                "user": {
                                                    "href": "/api/v3/users/2",
                                                    "title": "Some user"
                                                },
                                                "activity": {
                                                    "href": "/api/v3/time_entries/activities/18",
                                                    "title": "Some time entry activity"
                                                }
                                            }
                                        },
                                        {
                                            "_type": "TimeEntry",
                                            "id": 10,
                                            "comment": {
                                                "format": "plain",
                                                "raw": "Another comment",
                                                "html": "<p>Another comment</p>"
                                            },
                                            "spentOn": "2015-03-21",
                                            "hours": "PT7H",
                                            "createdAt": "2015-03-20T12:56:56Z",
                                            "updatedAt": "2015-03-20T12:56:56Z",
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/time_entries/2"
                                                },
                                                "project": {
                                                    "href": "/api/v3/projects/42",
                                                    "title": "Some other project"
                                                },
                                                "workPackage": {
                                                    "href": "/api/v3/work_packages/541",
                                                    "title": "Some other work package"
                                                },
                                                "user": {
                                                    "href": "/api/v3/users/6",
                                                    "title": "Some other project"
                                                },
                                                "activity": {
                                                    "href": "/api/v3/time_entries/activities/14",
                                                    "title": "some other time entry activity"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/time_entries?offset=1&pageSize=2"
                                    },
                                    "jumpTo": {
                                        "href": "/api/v3/time_entries?offset=%7Boffset%7D&pageSize=2",
                                        "templated": true
                                    },
                                    "changeSize": {
                                        "href": "/api/v3/time_entries?offset=1&pageSize=%7Bsize%7D",
                                        "templated": true
                                    },
                                    "nextByOffset": {
                                        "href": "/api/v3/time_entries?offset=2&pageSize=2"
                                    },
                                    "createTimeEntry": {
                                        "href": "/api/v3/time_entries/form",
                                        "method": "post"
                                    },
                                    "createTimeEntryImmediately": {
                                        "href": "/api/v3/time_entries",
                                        "method": "post"
                                    }
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/List time entriesModel"
                        }
                    },
                    "400": {
                        "description": "Returned if the client sends invalid request parameters e.g. filters",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidQuery",
                                "message": [
                                    "Filters Invalid filter does not exist."
                                ]
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client is not logged in and login is required.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to view this resource."
                            }
                        }
                    }
                },
                "summary": "List time entries",
                "operationId": "List time entries",
                "description": "Lists time entries. The time entries returned depend on the filters provided and also on the permission of the requesting user.",
                "tags": [
                    "Time Entries"
                ],
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Page number inside the requested collection.",
                        "required": false,
                        "x-example": "25",
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of elements to display per page.",
                        "required": false,
                        "x-example": "25",
                        "type": "integer"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "JSON specifying sort criteria.\nAccepts the same format as returned by the [queries](#queries) endpoint. Currently supported sorts are:\n\n+ id: Sort by primary key\n\n+ hours: Sort by logged hours\n\n+ spent_on: Sort by spent on date\n\n+ created_at: Sort by time entry creation datetime\n\n+ updated_at: Sort by the time the time entry was updated last",
                        "required": false,
                        "x-example": "[[\"spent_on\", \"asc\"]]",
                        "type": "string",
                        "default": "[\"spent_on\", \"asc\"]"
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "JSON specifying filter conditions.\nAccepts the same format as returned by the [queries](#queries) endpoint. Currently supported filters are:\n\n+ work_package: Filter time entries by work package\n\n+ project: Filter time entries by project\n\n+ user: Filter time entries by users\n\n+ spent_on: Filter time entries by spent on date\n\n+ created_at: Filter time entries by creation datetime\n\n+ updated_at: Filter time entries by the last time they where updated\n\n+ activity: Filter time entries by time entry activity",
                        "required": false,
                        "x-example": "[{ \"work_package\": { \"operator\": \"=\", \"values\": [\"1\", \"2\"] } }, { \"project\": { \"operator\": \"=\", \"values\": [\"1\"] } }]",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/time_entries/schema": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Schema",
                                "_dependencies": [],
                                "id": {
                                    "type": "Integer",
                                    "name": "ID",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": false,
                                    "options": {}
                                },
                                "createdAt": {
                                    "type": "DateTime",
                                    "name": "Created on",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": false,
                                    "options": {}
                                },
                                "updatedAt": {
                                    "type": "DateTime",
                                    "name": "Updated on",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": false,
                                    "options": {}
                                },
                                "spentOn": {
                                    "type": "Date",
                                    "name": "Date",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": true,
                                    "options": {}
                                },
                                "hours": {
                                    "type": "Duration",
                                    "name": "Hours",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": true,
                                    "options": {}
                                },
                                "user": {
                                    "type": "User",
                                    "name": "User",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": false,
                                    "options": {}
                                },
                                "workPackage": {
                                    "type": "WorkPackage",
                                    "name": "Work package",
                                    "required": false,
                                    "hasDefault": false,
                                    "writable": true,
                                    "location": "_links",
                                    "_links": {}
                                },
                                "project": {
                                    "type": "Project",
                                    "name": "Project",
                                    "required": false,
                                    "hasDefault": false,
                                    "writable": true,
                                    "location": "_links",
                                    "_links": {}
                                },
                                "activity": {
                                    "type": "TimeEntriesActivity",
                                    "name": "Activity",
                                    "required": true,
                                    "hasDefault": true,
                                    "writable": true,
                                    "location": "_links",
                                    "_links": {}
                                },
                                "customField29": {
                                    "type": "String",
                                    "name": "sfsdfsdfsdfsdfdsf",
                                    "required": false,
                                    "hasDefault": false,
                                    "writable": true,
                                    "options": {
                                        "rtl": null
                                    }
                                },
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/time_entries/schema"
                                    }
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/View time entry schemaModel"
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions to see the schema.\n\n**Required permission:** *log time* or *view time entries* or *edit time entries* or *edit own time entries* on any project",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    }
                },
                "summary": "View time entry schema",
                "operationId": "View time entry schema",
                "description": "",
                "tags": [
                    "Time Entries"
                ],
                "parameters": [],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/time_entries/form": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {}
                    },
                    "400": {
                        "description": "Occurs when the client did not send a valid JSON object in the request body.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request body was not a single JSON object."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** *log time* in any project",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    }
                },
                "summary": "Time entry create form",
                "operationId": "Time entry create form",
                "description": "",
                "tags": [
                    "Time Entries"
                ],
                "parameters": [],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/time_entries/:id/form": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {}
                    },
                    "400": {
                        "description": "Occurs when the client did not send a valid JSON object in the request body.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request body was not a single JSON object."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions to edit the time entry.\n\n**Required permission:** *edit time entries* for every time entry of a project, or *edit own time entries* for time entries belonging to the user.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the time entry does not exist or if the client does not have sufficient permissions to view it.\n\n**Required permission** `view time entries` in the project the time entry is assigned to or `view own time entries` for time entries belonging to the user",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The requested resource could not be found."
                            }
                        }
                    }
                },
                "summary": "Time entry update form",
                "operationId": "Time entry update form",
                "description": "",
                "tags": [
                    "Time Entries"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "body",
                        "description": "time entries activity id",
                        "required": true,
                        "x-example": "1",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/time_entries/available_projects": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/Available projects for time entriesModel"
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** *log time*, *edit time entries* or *edit own time entries* in any project",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    }
                },
                "summary": "Available projects for time entries",
                "operationId": "Available projects for time entries",
                "description": "Gets a list of projects in which a time entry can be created in or be assigned to on update. The list contains all projects in which the user issuing the request has the necessary permissions.",
                "tags": [
                    "Time Entries"
                ],
                "parameters": [],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/time_entries/activity/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/View time entries activityModel"
                        }
                    },
                    "404": {
                        "description": "Returned if the activity does not exist or if the user does not have permission to view them.\n\n**Required permission** `view time entries`, `log time`, `edit time entries`, `edit own time entries` or `manage project activities` in any project",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The requested resource could not be found."
                            }
                        }
                    }
                },
                "summary": "View time entries activity",
                "operationId": "View time entries activity",
                "description": "",
                "tags": [
                    "Time Entry Activities"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "time entries activity id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/types": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/types"
                                    }
                                },
                                "total": 2,
                                "count": 2,
                                "_type": "Collection",
                                "_embedded": {
                                    "elements": [
                                        {
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/types/1"
                                                }
                                            },
                                            "_type": "Type",
                                            "id": 1,
                                            "name": "Bug",
                                            "color": "#ff0000",
                                            "position": 1,
                                            "isDefault": true,
                                            "isMilestone": false,
                                            "createdAt": "2014-05-21T08:51:20Z",
                                            "updatedAt": "2014-05-21T08:51:20Z"
                                        },
                                        {
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/types/2"
                                                }
                                            },
                                            "_type": "Type",
                                            "id": 2,
                                            "name": "Feature",
                                            "color": "#888",
                                            "position": 2,
                                            "isDefault": false,
                                            "isMilestone": false,
                                            "createdAt": "2014-05-21T08:51:20Z",
                                            "updatedAt": "2014-05-21T08:51:20Z"
                                        }
                                    ]
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/TypesModel"
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** view work package or manage types (on any project)",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to see the types."
                            }
                        }
                    }
                },
                "summary": "List all Types",
                "operationId": "List all Types",
                "description": "",
                "tags": [
                    "Types"
                ],
                "parameters": [],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/projects/{project_id}/types": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/projects/11/types"
                                    }
                                },
                                "total": 2,
                                "count": 2,
                                "_type": "Collection",
                                "_embedded": {
                                    "elements": [
                                        {
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/types/1"
                                                }
                                            },
                                            "_type": "Type",
                                            "id": 1,
                                            "name": "Bug",
                                            "color": "#ff0000",
                                            "position": 1,
                                            "isDefault": true,
                                            "isMilestone": false,
                                            "createdAt": "2014-05-21T08:51:20Z",
                                            "updatedAt": "2014-05-21T08:51:20Z"
                                        },
                                        {
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/types/2"
                                                }
                                            },
                                            "_type": "Type",
                                            "id": 2,
                                            "name": "Feature",
                                            "color": "#888",
                                            "position": 2,
                                            "isDefault": false,
                                            "isMilestone": false,
                                            "createdAt": "2014-05-21T08:51:20Z",
                                            "updatedAt": "2014-05-21T08:51:20Z"
                                        }
                                    ]
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Types by ProjectModel"
                        }
                    },
                    "404": {
                        "description": "Returned if the project does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view work packages **or** manage types (on given project)\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of a project.\nThat's why a 404 is returned here, even if a 403 might be more appropriate.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified project does not exist."
                            }
                        }
                    }
                },
                "summary": "List types available in a project",
                "operationId": "List types available in a project",
                "description": "This endpoint lists the types that are *available* in a given project.",
                "tags": [
                    "Types"
                ],
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "description": "ID of the project whose types will be listed",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/types/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/types/1"
                                    }
                                },
                                "_type": "Type",
                                "id": 1,
                                "name": "Bug",
                                "color": "#ff0000",
                                "position": 1,
                                "isDefault": true,
                                "isMilestone": false,
                                "createdAt": "2014-05-21T08:51:20Z",
                                "updatedAt": "2014-05-21T08:51:20Z"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/TypeModel"
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** view work package or manage types (on any project)",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to see this type."
                            }
                        }
                    }
                },
                "summary": "View Type",
                "operationId": "View Type",
                "description": "",
                "tags": [
                    "Types"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "type id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/my_preferences": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/UserPreferencesModel"
                        }
                    },
                    "401": {
                        "description": "Returned if no user is currently authenticated",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:Unauthenticated",
                                "message": "You need to be authenticated to access this resource."
                            }
                        }
                    }
                },
                "summary": "Show my preferences",
                "operationId": "Show my preferences",
                "description": "",
                "tags": [
                    "UserPreferences"
                ],
                "parameters": [],
                "produces": [
                    "application/hal+json"
                ]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/UserPreferencesModel"
                        }
                    },
                    "400": {
                        "description": "Occurs when the client did not send a valid JSON object in the request body.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request body was not a single JSON object."
                            }
                        }
                    },
                    "401": {
                        "description": "Returned if no user is currently authenticated",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:Unauthenticated",
                                "message": "You need to be authenticated to access this resource."
                            }
                        }
                    },
                    "422": {
                        "description": "Returned if the update contains invalid properties.\nReasons are:\n\n* Specifying an invalid type\n\n* Using an unknown time zone",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:PropertyConstraintViolation",
                                "message": "Time zone is not set to one of the allowed values."
                            }
                        }
                    }
                },
                "summary": "Update UserPreferences",
                "operationId": "Update UserPreferences",
                "description": "When calling this endpoint the client provides a single object, containing the properties that it wants to change, in the body.",
                "tags": [
                    "UserPreferences"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "accessibilityMode": {
                                    "type": "boolean"
                                },
                                "timeZone": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "accessibilityMode": true,
                                "timeZone": "Europe/Paris"
                            }
                        }
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/users/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/View userModel"
                        }
                    },
                    "404": {
                        "description": "Returned if the user does not exist or if the API user does not have permission to view them.\n\n**Required permission** The user needs to be locked in if the installation is configured to prevent anonymous access",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified user does not exist or you do not have permission to view them."
                            }
                        }
                    }
                },
                "summary": "View user",
                "operationId": "View user",
                "description": "",
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id. Use `me` to reference current user, if any.",
                        "required": true,
                        "x-example": "1",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/View userModel"
                        }
                    },
                    "400": {
                        "description": "Occurs when the client did not send a valid JSON object in the request body.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request body was not a single JSON object."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** Administrators, manage_user global permission",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to update the account of this user."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the user does not exist or if the API user does not have the necessary permissions to update it.\n\n**Required permission:** Administrators only (exception: users may update their own accounts)",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified user does not exist or you do not have permission to view them."
                            }
                        }
                    },
                    "422": {
                        "description": "Returned if:\n\n* the client tries to modify a read-only property (`PropertyIsReadOnly`)\n\n* a constraint for a property was violated (`PropertyConstraintViolation`)",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:PropertyConstraintViolation",
                                "message": "The email address is already taken.",
                                "_embedded": {
                                    "details": {
                                        "attribute": "email"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Update user",
                "operationId": "Update user",
                "description": "Updates the user's writable attributes.\nWhen calling this endpoint the client provides a single object, containing at least the properties and links that are required, in the body.",
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "login": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                },
                                "firstName": {
                                    "type": "string"
                                },
                                "lastName": {
                                    "type": "string"
                                },
                                "admin": {
                                    "type": "boolean"
                                },
                                "language": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "login": "h.wurst",
                                "email": "h.wurst@openproject.com",
                                "firstName": "Hans",
                                "lastName": "Wurst",
                                "admin": true,
                                "language": "en"
                            }
                        }
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            },
            "delete": {
                "responses": {
                    "202": {
                        "description": "Returned if the account was deleted successfully.\n\nNote that the response body is empty as of now. In future versions of the API a body\n*might* be returned, indicating the progress of deletion.",
                        "headers": {},
                        "examples": {}
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions or if deletion of users was disabled in the instance wide settings.\n\n**Required permission:** Administrators only (exception: users might be able to delete their own accounts)",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to delete the account of this user."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the user does not exist.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified user does not exist."
                            }
                        }
                    }
                },
                "summary": "Delete user",
                "operationId": "Delete user",
                "description": "Permanently deletes the specified user account.",
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/users": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/View userModel"
                        }
                    },
                    "400": {
                        "description": "Occurs when the client did not send a valid JSON object in the request body.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request body was not a single JSON object."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** Administrator",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to create new users."
                            }
                        }
                    },
                    "422": {
                        "description": "Returned if:\n\n* a constraint for a property was violated (`PropertyConstraintViolation`)",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:PropertyConstraintViolation",
                                "message": "The email address is already taken.",
                                "_embedded": {
                                    "details": {
                                        "attribute": "email"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Create User",
                "operationId": "Create User",
                "description": "Creates a new user. Only administrators and users with manage_user global permission are allowed to do so.\nWhen calling this endpoint the client provides a single object, containing at least the properties and links that are required, in the body.\n\nValid values for `status`:\n\n1) \"active\" - In this case a password has to be provided in addition to the other attributes.\n2) \"invited\" - In this case nothing but the email address is required. The rest is optional. An invitation will be sent to the user.",
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "login": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                },
                                "firstName": {
                                    "type": "string"
                                },
                                "lastName": {
                                    "type": "string"
                                },
                                "admin": {
                                    "type": "boolean"
                                },
                                "language": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "login": "h.wurst",
                                "email": "h.wurst@openproject.com",
                                "firstName": "Hans",
                                "lastName": "Wurst",
                                "admin": false,
                                "language": "de",
                                "status": "active",
                                "password": "hunter5"
                            }
                        }
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/UsersModel"
                        }
                    },
                    "400": {
                        "description": "Returned if the client sends an unknown sort column.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidQuery",
                                "message": "Unknown sort column."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** Administrator",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to list users."
                            }
                        }
                    }
                },
                "summary": "List Users",
                "operationId": "List Users",
                "description": "Lists users. Only administrators or users with manage_user global permission have permission to do this.",
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Page number inside the requested collection.",
                        "required": false,
                        "x-example": "25",
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of elements to display per page.",
                        "required": false,
                        "x-example": "25",
                        "type": "integer"
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "JSON specifying filter conditions.\nAccepts the same format as returned by the [queries](#queries) endpoint. Currently supported filters are:\n\n+ status: Status the user has\n\n+ group: Name of the group in which to-be-listed users are members.\n\n+ name: Filter users in whose first or last names, or email addresses the given string occurs.\n\n+ login: User's login",
                        "required": false,
                        "x-example": "[{ \"status\": { \"operator\": \"=\", \"values\": [\"invited\"] } }, { \"group\": { \"operator\": \"=\", \"values\": [\"1\"] } }, { \"name\": { \"operator\": \"=\", \"values\": [\"h.wurst@openproject.com\"] } }]",
                        "type": "string"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "JSON specifying sort criteria.\nAccepts the same format as returned by the [queries](#queries) endpoint.",
                        "required": false,
                        "x-example": "[[\"status\", \"asc\"]]",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/users/{id}/lock": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/View userModel"
                        }
                    },
                    "400": {
                        "description": "Returned if the client tries to lock a user account whose current status does not allow this transition.\n\n**Required permission:** Administrators only",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidUserStatusTransition",
                                "message": "The current user account status does not allow this operation."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions for locking a user.\n\n**Required permission:** Administrators only",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to lock the account of this user."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the user does not exist.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified user does not exist."
                            }
                        }
                    }
                },
                "summary": "Lock user",
                "operationId": "Lock user",
                "description": "",
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/View userModel"
                        }
                    },
                    "400": {
                        "description": "Returned if the client tries to unlock a user account whose current status does not allow this transition.\n\n**Required permission:** Administrators only",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidUserStatusTransition",
                                "message": "The current user account status does not allow this operation."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions for unlocking a user.\n\n**Required permission:** Administrators only",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to unlock the account of this user."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the user does not exist.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified user does not exist."
                            }
                        }
                    }
                },
                "summary": "Unlock user",
                "operationId": "Unlock user",
                "description": "",
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/users/schemas": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Schema",
                                "_dependencies": [],
                                "id": {
                                    "type": "Integer",
                                    "name": "ID",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": false,
                                    "options": {}
                                },
                                "login": {
                                    "type": "String",
                                    "name": "Username",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": true,
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "options": {}
                                },
                                "admin": {
                                    "type": "Boolean",
                                    "name": "Administrator",
                                    "required": false,
                                    "hasDefault": false,
                                    "writable": true,
                                    "options": {}
                                },
                                "mail": {
                                    "type": "String",
                                    "name": "Email",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": true,
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "options": {}
                                },
                                "firstName": {
                                    "type": "String",
                                    "name": "First name",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": false,
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "options": {}
                                },
                                "lastName": {
                                    "type": "String",
                                    "name": "Last name",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": false,
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "options": {}
                                },
                                "avatar": {
                                    "type": "String",
                                    "name": "Avatar",
                                    "required": false,
                                    "hasDefault": false,
                                    "writable": false,
                                    "options": {}
                                },
                                "status": {
                                    "type": "String",
                                    "name": "Status",
                                    "required": false,
                                    "hasDefault": false,
                                    "writable": true,
                                    "options": {}
                                },
                                "identityUrl": {
                                    "type": "String",
                                    "name": "Identity url",
                                    "required": false,
                                    "hasDefault": false,
                                    "writable": true,
                                    "options": {}
                                },
                                "language": {
                                    "type": "String",
                                    "name": "Language",
                                    "required": false,
                                    "hasDefault": false,
                                    "writable": true,
                                    "options": {}
                                },
                                "password": {
                                    "type": "Password",
                                    "name": "Password",
                                    "required": false,
                                    "hasDefault": false,
                                    "writable": false,
                                    "options": {}
                                },
                                "createdAt": {
                                    "type": "DateTime",
                                    "name": "Created on",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": false,
                                    "options": {}
                                },
                                "updatedAt": {
                                    "type": "DateTime",
                                    "name": "Updated on",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": false,
                                    "options": {}
                                },
                                "customField1": {
                                    "type": "String",
                                    "name": "User String CF",
                                    "required": false,
                                    "hasDefault": false,
                                    "writable": true
                                },
                                "customField2": {
                                    "type": "CustomOption",
                                    "name": "User List cf",
                                    "required": false,
                                    "hasDefault": false,
                                    "writable": true,
                                    "location": "_links"
                                },
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/users/schema"
                                    }
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/View user schemaModel"
                        }
                    }
                },
                "summary": "View user schema",
                "operationId": "View user schema",
                "description": "The schema response use two exemplary custom fields that extend the schema response. Depending on your instance and custom field configuration, the response will look somewhat different.",
                "tags": [
                    "Users"
                ],
                "parameters": [],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/users/{id}/form": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {}
                    },
                    "400": {
                        "description": "Occurs when the client did not send a valid JSON object in the request body.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request body was not a single JSON object."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** manage_user global permission",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the request user can not be found.\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of\na membership. That's why a 404 is returned here, even if a 403 might be more appropriate.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The requested resource could not be found."
                            }
                        }
                    }
                },
                "summary": "User update form",
                "operationId": "User update form",
                "description": "",
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/versions/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/VersionModel"
                        }
                    },
                    "404": {
                        "description": "Returned if the version does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view work packages **or** manage versions (any project where the version is available)\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of\na version. That's why a 404 is returned here, even if a 403 might be more appropriate.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The requested resource could not be found."
                            }
                        }
                    }
                },
                "summary": "View version",
                "operationId": "View version",
                "description": "",
                "tags": [
                    "Versions"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "version id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/VersionModel"
                        }
                    },
                    "400": {
                        "description": "Occurs when the client did not send a valid JSON object in the request body.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request body was not a single JSON object."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** Manage versions in the version's project.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the version does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view work packages **or** manage versions (any project where the version is available)\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of\na version. That's why a 404 is returned here, even if a 403 might be more appropriate.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The requested resource could not be found."
                            }
                        }
                    },
                    "422": {
                        "description": "Returned if:\n\n* a constraint for a property was violated (`PropertyConstraintViolation`)",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Update Versions",
                "operationId": "Update Versions",
                "description": "Updates the given version by applying the attributes provided in the body. Please note that while there is a fixed set of attributes, custom fields can extend a version's attributes and are accepted by the endpoint.",
                "tags": [
                    "Versions"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Version id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "Returned if the version was successfully deleted",
                        "headers": {},
                        "examples": {}
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** manage versions",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the version does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view work packages **or** manage versions (any project where the version is available)\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of\na version. That's why a 404 is returned here, even if a 403 might be more appropriate.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The requested resource could not be found."
                            }
                        }
                    }
                },
                "summary": "Delete Version",
                "operationId": "Delete Version",
                "description": "Deletes the version. Work packages associated to the version will no longer be assigned to it.",
                "tags": [
                    "Versions"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Version id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/versions": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/versions"
                                    }
                                },
                                "total": 3,
                                "count": 3,
                                "_type": "Collection",
                                "_embedded": {
                                    "elements": [
                                        {
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/versions/11"
                                                },
                                                "definingProject": {
                                                    "href": "/api/v3/projects/12"
                                                },
                                                "availableInProjects": {
                                                    "href": "/api/v3/versions/11/projects"
                                                }
                                            },
                                            "_type": "Version",
                                            "id": 11,
                                            "name": "v3.0 Alpha",
                                            "description": {
                                                "format": "plain",
                                                "raw": "This version has a description",
                                                "html": "This version has a description"
                                            },
                                            "startDate": "2014-11-20",
                                            "endDate": null,
                                            "status": "Open"
                                        },
                                        {
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/versions/12"
                                                },
                                                "definingProject": {
                                                    "href": "/api/v3/projects/11"
                                                },
                                                "availableInProjects": {
                                                    "href": "/api/v3/versions/12/projects"
                                                }
                                            },
                                            "_type": "Version",
                                            "id": 12,
                                            "name": "v2.0",
                                            "description": {
                                                "format": "plain",
                                                "raw": "",
                                                "html": ""
                                            },
                                            "startDate": null,
                                            "endDate": null,
                                            "status": "Closed"
                                        },
                                        {
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/versions/10"
                                                },
                                                "definingProject": {
                                                    "href": "/api/v3/projects/13"
                                                },
                                                "availableInProjects": {
                                                    "href": "/api/v3/versions/13/projects"
                                                }
                                            },
                                            "_type": "Version",
                                            "id": 10,
                                            "name": "v1.0",
                                            "description": {
                                                "format": "plain",
                                                "raw": "",
                                                "html": ""
                                            },
                                            "startDate": null,
                                            "endDate": null,
                                            "status": "Open"
                                        }
                                    ]
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/VersionsModel"
                        }
                    }
                },
                "summary": "List versions",
                "operationId": "List versions",
                "description": "Returns a collection of versions. The client can choose to filter the versions similar to how work packages are filtered. In addition to the provided filters, the server will reduce the result set to only contain versions, for which the requesting client has sufficient permissions (*view_work_packages*).",
                "tags": [
                    "Versions"
                ],
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "JSON specifying filter conditions.\nAccepts the same format as returned by the [queries](#queries) endpoint.\nCurrently supported filters are:\n\n+ sharing: filters versions by how they are shared within the server (*none*, *descendants*, *hierarchy*, *tree*, *system*).",
                        "required": false,
                        "x-example": "[{ \"sharing\": { \"operator\": \"*\", \"values\": [\"system\"] }\" }]",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/VersionModel"
                        }
                    },
                    "400": {
                        "description": "Occurs when the client did not send a valid JSON object in the request body.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request body was not a single JSON object."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** Manage versions",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    },
                    "422": {
                        "description": "Returned if:\n\n* a constraint for a property was violated (`PropertyConstraintViolation`)",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Create versions",
                "operationId": "Create versions",
                "description": "Creates a new version applying the attributes provided in the body. Please note that while there is a fixed set of attributes, custom fields can extend a version's attributes and are accepted by the endpoint.\n\nYou can use the form and schema to be retrieve the valid attribute values and by that be guided towards successful creation.",
                "tags": [
                    "Versions"
                ],
                "parameters": [],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/versions/schemas": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Schema",
                                "_dependencies": [],
                                "id": {
                                    "type": "Integer",
                                    "name": "ID",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": false
                                },
                                "name": {
                                    "type": "String",
                                    "name": "Name",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": true,
                                    "minLength": 1,
                                    "maxLength": 60
                                },
                                "description": {
                                    "type": "Formattable",
                                    "name": "Description",
                                    "required": false,
                                    "hasDefault": false,
                                    "writable": true
                                },
                                "startDate": {
                                    "type": "Date",
                                    "name": "Start date",
                                    "required": false,
                                    "hasDefault": false,
                                    "writable": true
                                },
                                "endDate": {
                                    "type": "Date",
                                    "name": "Finish date",
                                    "required": false,
                                    "hasDefault": false,
                                    "writable": false
                                },
                                "status": {
                                    "type": "String",
                                    "name": "Status",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": true,
                                    "visibility": "default",
                                    "_links": {}
                                },
                                "sharing": {
                                    "type": "String",
                                    "name": "Sharing",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": true,
                                    "visibility": "default",
                                    "_links": {}
                                },
                                "createdAt": {
                                    "type": "DateTime",
                                    "name": "Created on",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": false
                                },
                                "updatedAt": {
                                    "type": "DateTime",
                                    "name": "Updated on",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": false
                                },
                                "definingProject": {
                                    "type": "Project",
                                    "name": "Project",
                                    "required": true,
                                    "hasDefault": false,
                                    "writable": true,
                                    "_links": {}
                                },
                                "customField14": {
                                    "type": "String",
                                    "name": "text CF",
                                    "required": false,
                                    "hasDefault": false,
                                    "writable": true,
                                    "visibility": "default"
                                },
                                "customField40": {
                                    "type": "CustomOption",
                                    "name": "List CF",
                                    "required": false,
                                    "hasDefault": false,
                                    "writable": true,
                                    "location": "_links",
                                    "visibility": "default",
                                    "_links": {}
                                },
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/versions/schema"
                                    }
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Version schemaModel"
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions to see the schema.\n\n**Required permission:** view work packages or manage versions on any project",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    }
                },
                "summary": "View version schema",
                "operationId": "View version schema",
                "description": "",
                "tags": [
                    "Versions"
                ],
                "parameters": [],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/versions/form": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {}
                    },
                    "400": {
                        "description": "Occurs when the client did not send a valid JSON object in the request body.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request body was not a single JSON object."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** manage versions in any project",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    }
                },
                "summary": "Version create form",
                "operationId": "Version create form",
                "description": "",
                "tags": [
                    "Versions"
                ],
                "parameters": [],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/versions/{id}/form": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {}
                    },
                    "400": {
                        "description": "Occurs when the client did not send a valid JSON object in the request body.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request body was not a single JSON object."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** manage versions in the version's project",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    }
                },
                "summary": "Version update form",
                "operationId": "Version update form",
                "description": "",
                "tags": [
                    "Versions"
                ],
                "parameters": [],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/projects/{project_id}/versions": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/projects/11/versions"
                                    }
                                },
                                "total": 3,
                                "count": 3,
                                "_type": "Collection",
                                "_embedded": {
                                    "elements": [
                                        {
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/versions/11"
                                                },
                                                "definingProject": {
                                                    "href": "/api/v3/projects/11"
                                                },
                                                "availableInProjects": {
                                                    "href": "/api/v3/versions/11/projects"
                                                }
                                            },
                                            "_type": "Version",
                                            "id": 11,
                                            "name": "v3.0 Alpha",
                                            "description": {
                                                "format": "plain",
                                                "raw": "This version has a description",
                                                "html": "This version has a description"
                                            },
                                            "startDate": "2014-11-20",
                                            "endDate": null,
                                            "status": "Open"
                                        },
                                        {
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/versions/12"
                                                },
                                                "definingProject": {
                                                    "href": "/api/v3/projects/11"
                                                },
                                                "availableInProjects": {
                                                    "href": "/api/v3/versions/12/projects"
                                                }
                                            },
                                            "_type": "Version",
                                            "id": 12,
                                            "name": "v2.0",
                                            "description": {
                                                "format": "plain",
                                                "raw": "",
                                                "html": ""
                                            },
                                            "startDate": null,
                                            "endDate": null,
                                            "status": "Closed"
                                        },
                                        {
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/versions/10"
                                                },
                                                "definingProject": {
                                                    "href": "/api/v3/projects/11"
                                                },
                                                "availableInProjects": {
                                                    "href": "/api/v3/versions/10/projects"
                                                }
                                            },
                                            "_type": "Version",
                                            "id": 10,
                                            "name": "v1.0",
                                            "description": {
                                                "format": "plain",
                                                "raw": "",
                                                "html": ""
                                            },
                                            "startDate": null,
                                            "endDate": null,
                                            "status": "Open"
                                        }
                                    ]
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Versions by ProjectModel"
                        }
                    },
                    "404": {
                        "description": "Returned if the project does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view work packages **or** manage versions (on given project)\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of a project.\nThat's why a 404 is returned here, even if a 403 might be more appropriate.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified project does not exist."
                            }
                        }
                    }
                },
                "summary": "List versions available in a project",
                "operationId": "List versions available in a project",
                "description": "This endpoint lists the versions that are *available* in a given project.\nNote that due to sharing this might be more than the versions *defined* by that project.",
                "tags": [
                    "Versions"
                ],
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "description": "ID of the project whose versions will be listed",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/versions/available_projects": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/Available projects for versionsModel"
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** manage versions",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    }
                },
                "summary": "Available projects for versions",
                "operationId": "Available projects for versions",
                "description": "Gets a list of projects in which a version can be created in. The list contains all projects in which the user issuing the request has the manage versions permissions.",
                "tags": [
                    "Versions"
                ],
                "parameters": [],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/wiki_pages/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/Wiki PageModel"
                        }
                    },
                    "404": {
                        "description": "Returned if the wiki page does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view wiki page in the page's project",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The requested resource could not be found."
                            }
                        }
                    }
                },
                "summary": "View Wiki Page",
                "operationId": "View Wiki Page",
                "description": "Retrieve an individual wiki page as identified by the id parameter",
                "tags": [
                    "Wiki Pages"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Wiki page identifier",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/work_packages/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "WorkPackage",
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/work_packages/1528",
                                        "title": "Develop API"
                                    },
                                    "schema": {
                                        "href": "/api/v3/work_packages/schemas/11-2"
                                    },
                                    "update": {
                                        "href": "/api/v3/work_packages/1528",
                                        "method": "patch",
                                        "title": "Update Develop API"
                                    },
                                    "delete": {
                                        "href": "/work_packages/bulk?ids=1528",
                                        "method": "delete",
                                        "title": "Delete Develop API"
                                    },
                                    "logTime": {
                                        "href": "/work_packages/1528/time_entries/new",
                                        "type": "text/html",
                                        "title": "Log time on Develop API"
                                    },
                                    "move": {
                                        "href": "/work_packages/1528/move/new",
                                        "type": "text/html",
                                        "title": "Move Develop API"
                                    },
                                    "attachments": {
                                        "href": "/api/v3/work_packages/1528/attachments"
                                    },
                                    "addAttachment": {
                                        "href": "/api/v3/work_packages/1528/attachments",
                                        "method": "post"
                                    },
                                    "author": {
                                        "href": "/api/v3/users/1",
                                        "title": "OpenProject Admin - admin"
                                    },
                                    "customActions": [
                                        {
                                            "href": "/api/v3/work_packages/1528/custom_actions/153/execute",
                                            "method": "post",
                                            "title": "Reset"
                                        },
                                        {
                                            "href": "/api/v3/work_packages/1528/custom_actions/94/execute",
                                            "method": "post",
                                            "title": "Forward to accounting"
                                        }
                                    ],
                                    "responsible": {
                                        "href": "/api/v3/users/23",
                                        "title": "Laron Leuschke - Alaina5788"
                                    },
                                    "relations": {
                                        "href": "/api/v3/work_packages/1528/relations",
                                        "title": "Show relations"
                                    },
                                    "revisions": {
                                        "href": "/api/v3/work_packages/1528/revisions"
                                    },
                                    "assignee": {
                                        "href": "/api/v3/users/11",
                                        "title": "Emmie Okuneva - Adele5450"
                                    },
                                    "priority": {
                                        "href": "/api/v3/priorities/2",
                                        "title": "Normal"
                                    },
                                    "project": {
                                        "href": "/api/v3/projects/1",
                                        "title": "A Test Project"
                                    },
                                    "status": {
                                        "href": "/api/v3/statuses/1",
                                        "title": "New"
                                    },
                                    "type": {
                                        "href": "/api/v3/types/1",
                                        "title": "A Type"
                                    },
                                    "version": {
                                        "href": "/api/v3/versions/1",
                                        "title": "Version 1"
                                    },
                                    "availableWatchers": {
                                        "href": "/api/v3/work_packages/1528/available_watchers"
                                    },
                                    "watch": {
                                        "href": "/api/v3/work_packages/1528/watchers",
                                        "method": "post",
                                        "payload": {
                                            "user": {
                                                "href": "/api/v3/users/1"
                                            }
                                        }
                                    },
                                    "addWatcher": {
                                        "href": "/api/v3/work_packages/1528/watchers",
                                        "method": "post",
                                        "payload": {
                                            "user": {
                                                "href": "/api/v3/users/{user_id}"
                                            }
                                        },
                                        "templated": true
                                    },
                                    "removeWatcher": {
                                        "href": "/api/v3/work_packages/1528/watchers/{user_id}",
                                        "method": "delete",
                                        "templated": true
                                    },
                                    "addRelation": {
                                        "href": "/api/v3/relations",
                                        "method": "post",
                                        "title": "Add relation"
                                    },
                                    "changeParent": {
                                        "href": "/api/v3/work_packages/694",
                                        "method": "patch",
                                        "title": "Change parent of Bug in OpenProject"
                                    },
                                    "addComment": {
                                        "href": "/api/v3/work_packages/1528/activities",
                                        "method": "post",
                                        "title": "Add comment"
                                    },
                                    "parent": {
                                        "href": "/api/v3/work_packages/1298",
                                        "title": "nisi eligendi officiis eos delectus quis voluptas dolores"
                                    },
                                    "category": {
                                        "href": "/api/v3/categories/1298",
                                        "title": "eligend isi"
                                    },
                                    "children": [
                                        {
                                            "href": "/api/v3/work_packages/1529",
                                            "title": "Write API documentation"
                                        }
                                    ],
                                    "ancestors": [
                                        {
                                            "href": "/api/v3/work_packages/1290",
                                            "title": "Root node of hierarchy"
                                        },
                                        {
                                            "href": "/api/v3/work_packages/1291",
                                            "title": "Intermediate node of hierarchy"
                                        },
                                        {
                                            "href": "/api/v3/work_packages/1298",
                                            "title": "nisi eligendi officiis eos delectus quis voluptas dolores"
                                        }
                                    ],
                                    "timeEntries": {
                                        "href": "/work_packages/1528/time_entries",
                                        "type": "text/html",
                                        "title": "Time entries"
                                    },
                                    "watchers": {
                                        "href": "/api/v3/work_packages/1528/watchers"
                                    },
                                    "customField3": {
                                        "href": "api/v3/users/14"
                                    }
                                },
                                "id": 1528,
                                "subject": "Develop API",
                                "description": {
                                    "format": "markdown",
                                    "raw": "Develop super cool OpenProject API.",
                                    "html": "<p>Develop super cool OpenProject API.</p>"
                                },
                                "scheduleManually": false,
                                "startDate": null,
                                "dueDate": null,
                                "derivedStartDate": null,
                                "derivedDueDate": null,
                                "estimatedTime": "PT2H",
                                "derivedEstimatedTime": "PT10H",
                                "percentageDone": 0,
                                "customField1": "Foo",
                                "customField2": 42,
                                "createdAt": "2014-08-29T12:40:53Z",
                                "updatedAt": "2014-08-29T12:44:41Z"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Work PackageModel"
                        }
                    },
                    "404": {
                        "description": "Returned if the work package does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified work package does not exist."
                            }
                        }
                    }
                },
                "summary": "View Work Package",
                "operationId": "View Work Package",
                "description": "",
                "tags": [
                    "Work Packages"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Work package id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "WorkPackage",
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/work_packages/1528",
                                        "title": "Develop API"
                                    },
                                    "schema": {
                                        "href": "/api/v3/work_packages/schemas/11-2"
                                    },
                                    "update": {
                                        "href": "/api/v3/work_packages/1528",
                                        "method": "patch",
                                        "title": "Update Develop API"
                                    },
                                    "delete": {
                                        "href": "/work_packages/bulk?ids=1528",
                                        "method": "delete",
                                        "title": "Delete Develop API"
                                    },
                                    "logTime": {
                                        "href": "/work_packages/1528/time_entries/new",
                                        "type": "text/html",
                                        "title": "Log time on Develop API"
                                    },
                                    "move": {
                                        "href": "/work_packages/1528/move/new",
                                        "type": "text/html",
                                        "title": "Move Develop API"
                                    },
                                    "attachments": {
                                        "href": "/api/v3/work_packages/1528/attachments"
                                    },
                                    "addAttachment": {
                                        "href": "/api/v3/work_packages/1528/attachments",
                                        "method": "post"
                                    },
                                    "author": {
                                        "href": "/api/v3/users/1",
                                        "title": "OpenProject Admin - admin"
                                    },
                                    "customActions": [
                                        {
                                            "href": "/api/v3/work_packages/1528/custom_actions/153/execute",
                                            "method": "post",
                                            "title": "Reset"
                                        },
                                        {
                                            "href": "/api/v3/work_packages/1528/custom_actions/94/execute",
                                            "method": "post",
                                            "title": "Forward to accounting"
                                        }
                                    ],
                                    "responsible": {
                                        "href": "/api/v3/users/23",
                                        "title": "Laron Leuschke - Alaina5788"
                                    },
                                    "relations": {
                                        "href": "/api/v3/work_packages/1528/relations",
                                        "title": "Show relations"
                                    },
                                    "revisions": {
                                        "href": "/api/v3/work_packages/1528/revisions"
                                    },
                                    "assignee": {
                                        "href": "/api/v3/users/11",
                                        "title": "Emmie Okuneva - Adele5450"
                                    },
                                    "priority": {
                                        "href": "/api/v3/priorities/2",
                                        "title": "Normal"
                                    },
                                    "project": {
                                        "href": "/api/v3/projects/1",
                                        "title": "A Test Project"
                                    },
                                    "status": {
                                        "href": "/api/v3/statuses/1",
                                        "title": "New"
                                    },
                                    "type": {
                                        "href": "/api/v3/types/1",
                                        "title": "A Type"
                                    },
                                    "version": {
                                        "href": "/api/v3/versions/1",
                                        "title": "Version 1"
                                    },
                                    "availableWatchers": {
                                        "href": "/api/v3/work_packages/1528/available_watchers"
                                    },
                                    "watch": {
                                        "href": "/api/v3/work_packages/1528/watchers",
                                        "method": "post",
                                        "payload": {
                                            "user": {
                                                "href": "/api/v3/users/1"
                                            }
                                        }
                                    },
                                    "addWatcher": {
                                        "href": "/api/v3/work_packages/1528/watchers",
                                        "method": "post",
                                        "payload": {
                                            "user": {
                                                "href": "/api/v3/users/{user_id}"
                                            }
                                        },
                                        "templated": true
                                    },
                                    "removeWatcher": {
                                        "href": "/api/v3/work_packages/1528/watchers/{user_id}",
                                        "method": "delete",
                                        "templated": true
                                    },
                                    "addRelation": {
                                        "href": "/api/v3/relations",
                                        "method": "post",
                                        "title": "Add relation"
                                    },
                                    "changeParent": {
                                        "href": "/api/v3/work_packages/694",
                                        "method": "patch",
                                        "title": "Change parent of Bug in OpenProject"
                                    },
                                    "addComment": {
                                        "href": "/api/v3/work_packages/1528/activities",
                                        "method": "post",
                                        "title": "Add comment"
                                    },
                                    "parent": {
                                        "href": "/api/v3/work_packages/1298",
                                        "title": "nisi eligendi officiis eos delectus quis voluptas dolores"
                                    },
                                    "category": {
                                        "href": "/api/v3/categories/1298",
                                        "title": "eligend isi"
                                    },
                                    "children": [
                                        {
                                            "href": "/api/v3/work_packages/1529",
                                            "title": "Write API documentation"
                                        }
                                    ],
                                    "ancestors": [
                                        {
                                            "href": "/api/v3/work_packages/1290",
                                            "title": "Root node of hierarchy"
                                        },
                                        {
                                            "href": "/api/v3/work_packages/1291",
                                            "title": "Intermediate node of hierarchy"
                                        },
                                        {
                                            "href": "/api/v3/work_packages/1298",
                                            "title": "nisi eligendi officiis eos delectus quis voluptas dolores"
                                        }
                                    ],
                                    "timeEntries": {
                                        "href": "/work_packages/1528/time_entries",
                                        "type": "text/html",
                                        "title": "Time entries"
                                    },
                                    "watchers": {
                                        "href": "/api/v3/work_packages/1528/watchers"
                                    },
                                    "customField3": {
                                        "href": "api/v3/users/14"
                                    }
                                },
                                "id": 1528,
                                "subject": "Develop API",
                                "description": {
                                    "format": "markdown",
                                    "raw": "Develop super cool OpenProject API.",
                                    "html": "<p>Develop super cool OpenProject API.</p>"
                                },
                                "scheduleManually": false,
                                "startDate": null,
                                "dueDate": null,
                                "derivedStartDate": null,
                                "derivedDueDate": null,
                                "estimatedTime": "PT2H",
                                "derivedEstimatedTime": "PT10H",
                                "percentageDone": 0,
                                "customField1": "Foo",
                                "customField2": 42,
                                "createdAt": "2014-08-29T12:40:53Z",
                                "updatedAt": "2014-08-29T12:44:41Z"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Work PackageModel"
                        }
                    },
                    "400": {
                        "description": "Occurs when the client did not send a valid JSON object in the request body.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request body was not a single JSON object."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** edit work package, assign version, manage subtasks or move work package",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to edit the content of the work package."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the work package does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified work package does not exist."
                            }
                        }
                    },
                    "409": {
                        "description": "Returned if the resource was changed since the client requested it. This is determined using the `lockVersion` property.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:UpdateConflict",
                                "message": "Your changes could not be saved, because the work package was changed since you've seen it the last time."
                            }
                        }
                    },
                    "422": {
                        "description": "Returned if:\n\n* the client tries to modify a read-only property (`PropertyIsReadOnly`)\n\n* a constraint for a property was violated (`PropertyConstraintViolation`)\n\n* the client provides a link to an invalid resource (`ResourceTypeMismatch`)",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:PropertyConstraintViolation",
                                "message": "The subject might not be blank.",
                                "_embedded": {
                                    "details": {
                                        "attribute": "Subject"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Edit Work Package",
                "operationId": "Edit Work Package",
                "description": "When calling this endpoint the client provides a single object, containing the properties and links that it wants to change, in the body.\nNote that it is only allowed to provide properties or links supporting the **write** operation.\n\nAdditionally to the fields the client wants to change, it is mandatory to provide the value of `lockVersion` which was received\nby the `GET` request this change originates from.\n\nThe value of `lockVersion` is used to implement [optimistic locking](http://en.wikipedia.org/wiki/Optimistic_concurrency_control).",
                "tags": [
                    "Work Packages"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Work package id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    },
                    {
                        "name": "notify",
                        "in": "query",
                        "description": "Indicates whether change notifications (e.g. via E-Mail) should be sent.\nNote that this controls notifications for all users interested in changes to the work package (e.g. watchers, author and assignee),\nnot just the current user.",
                        "required": false,
                        "x-example": "false",
                        "type": "boolean",
                        "default": "true"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "lockVersion": {
                                    "type": "number"
                                },
                                "subject": {
                                    "type": "string"
                                },
                                "_links": {
                                    "type": "object",
                                    "properties": {
                                        "parent": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "example": {
                                "lockVersion": 13,
                                "subject": "Lorem",
                                "_links": {
                                    "parent": {
                                        "href": "/api/v3/work_packages/42"
                                    }
                                }
                            }
                        }
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "Returned if the work package was deleted successfully.\n\nNote that the response body is empty as of now. In future versions of the API a body\n*might* be returned along with an appropriate HTTP status.",
                        "headers": {},
                        "examples": {}
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** delete work package",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to delete this work package."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the work package does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified work package does not exist."
                            }
                        }
                    }
                },
                "summary": "Delete Work Package",
                "operationId": "Delete Work Package",
                "description": "Deletes the work package, as well as:\n\n* all associated time entries\n\n* its hierarchy of child work packages",
                "tags": [
                    "Work Packages"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Work package id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/work_packages/schemas/{identifier}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {}
                    },
                    "404": {
                        "description": "Returned if the schema does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view work packages (on the project where this schema is used)\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of a project.\nThat's why a 404 is returned here, even if a 403 might be more appropriate.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified schema does not exist."
                            }
                        }
                    }
                },
                "summary": "View Work Package Schema",
                "operationId": "View Work Package Schema",
                "description": "",
                "tags": [
                    "Work Packages"
                ],
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "description": "Identifier of the schema",
                        "required": true,
                        "x-example": "12-13",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/work_packages/schemas/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/Work Package SchemasModel"
                        }
                    },
                    "400": {
                        "description": "Returned if the client sends invalid request.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidQuery",
                                "message": "Unknown filter."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** View work packages in any project.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to list schemas."
                            }
                        }
                    }
                },
                "summary": "List Work Package Schemas",
                "operationId": "List Work Package Schemas",
                "description": "List work package schemas.",
                "tags": [
                    "Work Packages"
                ],
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "JSON specifying filter conditions.\nAccepts the same format as returned by the [queries](#queries) endpoint. Currently supported filters are:\n\n+ id: The schema's id",
                        "required": true,
                        "x-example": "[{ \"id\": { \"operator\": \"=\", \"values\": [\"12-1\", \"14-2\"] } }]",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/work_packages/{id}/form": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {}
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** edit work package, assign version, manage subtasks or move work package\n\n*Note that you will only receive this error, if you are at least allowed to see the corresponding work package.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to edit the specified work package."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the work package does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified work package does not exist."
                            }
                        }
                    }
                },
                "summary": "Work Package Edit Form",
                "operationId": "Work Package Edit Form",
                "description": "",
                "tags": [
                    "Work Packages"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the work package being modified",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/work_packages": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/work_packages"
                                    }
                                },
                                "total": 2,
                                "count": 2,
                                "_type": "Collection",
                                "_embedded": {
                                    "elements": [
                                        {
                                            "_type": "WorkPackage",
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/work_packages/1"
                                                }
                                            },
                                            "id": 1,
                                            "subject": "Skipped other properties for brevity"
                                        },
                                        {
                                            "_type": "WorkPackage",
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/work_packages/2"
                                                }
                                            },
                                            "id": 2,
                                            "subject": "Skipped other properties for brevity"
                                        }
                                    ]
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Work PackagesModel"
                        }
                    },
                    "400": {
                        "description": "Returned if the client sends a query parameter, that the server knows, but does not understand.\nE.g. by providing a syntactically incorrect `filters` parameter.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidQuery",
                                "message": "Operator can't be blank."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** view work packages (globally or in any project)",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to see work packages."
                            }
                        }
                    }
                },
                "summary": "List Work Packages",
                "operationId": "List Work Packages",
                "description": "",
                "tags": [
                    "Work Packages"
                ],
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Page number inside the requested collection.",
                        "required": false,
                        "x-example": "25",
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of elements to display per page.",
                        "required": false,
                        "x-example": "25",
                        "type": "integer"
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "JSON specifying filter conditions.\nAccepts the same format as returned by the [queries](#queries) endpoint. If no filter is to be applied, the client should send an empty array (`[]`).",
                        "required": false,
                        "x-example": "[{ \"type_id\": { \"operator\": \"=\", \"values\": ['1', '2'] }}]",
                        "type": "string",
                        "default": "[{ \"status_id\": { \"operator\": \"o\", \"values\": null }}]"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "JSON specifying sort criteria.\nAccepts the same format as returned by the [queries](#queries) endpoint.",
                        "required": false,
                        "x-example": "[[\"status\", \"asc\"]]",
                        "type": "string",
                        "default": "[\"id\", \"asc\"]"
                    },
                    {
                        "name": "groupBy",
                        "in": "query",
                        "description": "The column to group by.",
                        "required": false,
                        "x-example": "status",
                        "type": "string"
                    },
                    {
                        "name": "showSums",
                        "in": "query",
                        "description": "Indicates whether properties should be summed up if they support it.",
                        "required": false,
                        "x-example": "true",
                        "type": "boolean",
                        "default": "false"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "WorkPackage",
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/work_packages/1528",
                                        "title": "Develop API"
                                    },
                                    "schema": {
                                        "href": "/api/v3/work_packages/schemas/11-2"
                                    },
                                    "update": {
                                        "href": "/api/v3/work_packages/1528",
                                        "method": "patch",
                                        "title": "Update Develop API"
                                    },
                                    "delete": {
                                        "href": "/work_packages/bulk?ids=1528",
                                        "method": "delete",
                                        "title": "Delete Develop API"
                                    },
                                    "logTime": {
                                        "href": "/work_packages/1528/time_entries/new",
                                        "type": "text/html",
                                        "title": "Log time on Develop API"
                                    },
                                    "move": {
                                        "href": "/work_packages/1528/move/new",
                                        "type": "text/html",
                                        "title": "Move Develop API"
                                    },
                                    "attachments": {
                                        "href": "/api/v3/work_packages/1528/attachments"
                                    },
                                    "addAttachment": {
                                        "href": "/api/v3/work_packages/1528/attachments",
                                        "method": "post"
                                    },
                                    "author": {
                                        "href": "/api/v3/users/1",
                                        "title": "OpenProject Admin - admin"
                                    },
                                    "customActions": [
                                        {
                                            "href": "/api/v3/work_packages/1528/custom_actions/153/execute",
                                            "method": "post",
                                            "title": "Reset"
                                        },
                                        {
                                            "href": "/api/v3/work_packages/1528/custom_actions/94/execute",
                                            "method": "post",
                                            "title": "Forward to accounting"
                                        }
                                    ],
                                    "responsible": {
                                        "href": "/api/v3/users/23",
                                        "title": "Laron Leuschke - Alaina5788"
                                    },
                                    "relations": {
                                        "href": "/api/v3/work_packages/1528/relations",
                                        "title": "Show relations"
                                    },
                                    "revisions": {
                                        "href": "/api/v3/work_packages/1528/revisions"
                                    },
                                    "assignee": {
                                        "href": "/api/v3/users/11",
                                        "title": "Emmie Okuneva - Adele5450"
                                    },
                                    "priority": {
                                        "href": "/api/v3/priorities/2",
                                        "title": "Normal"
                                    },
                                    "project": {
                                        "href": "/api/v3/projects/1",
                                        "title": "A Test Project"
                                    },
                                    "status": {
                                        "href": "/api/v3/statuses/1",
                                        "title": "New"
                                    },
                                    "type": {
                                        "href": "/api/v3/types/1",
                                        "title": "A Type"
                                    },
                                    "version": {
                                        "href": "/api/v3/versions/1",
                                        "title": "Version 1"
                                    },
                                    "availableWatchers": {
                                        "href": "/api/v3/work_packages/1528/available_watchers"
                                    },
                                    "watch": {
                                        "href": "/api/v3/work_packages/1528/watchers",
                                        "method": "post",
                                        "payload": {
                                            "user": {
                                                "href": "/api/v3/users/1"
                                            }
                                        }
                                    },
                                    "addWatcher": {
                                        "href": "/api/v3/work_packages/1528/watchers",
                                        "method": "post",
                                        "payload": {
                                            "user": {
                                                "href": "/api/v3/users/{user_id}"
                                            }
                                        },
                                        "templated": true
                                    },
                                    "removeWatcher": {
                                        "href": "/api/v3/work_packages/1528/watchers/{user_id}",
                                        "method": "delete",
                                        "templated": true
                                    },
                                    "addRelation": {
                                        "href": "/api/v3/relations",
                                        "method": "post",
                                        "title": "Add relation"
                                    },
                                    "changeParent": {
                                        "href": "/api/v3/work_packages/694",
                                        "method": "patch",
                                        "title": "Change parent of Bug in OpenProject"
                                    },
                                    "addComment": {
                                        "href": "/api/v3/work_packages/1528/activities",
                                        "method": "post",
                                        "title": "Add comment"
                                    },
                                    "parent": {
                                        "href": "/api/v3/work_packages/1298",
                                        "title": "nisi eligendi officiis eos delectus quis voluptas dolores"
                                    },
                                    "category": {
                                        "href": "/api/v3/categories/1298",
                                        "title": "eligend isi"
                                    },
                                    "children": [
                                        {
                                            "href": "/api/v3/work_packages/1529",
                                            "title": "Write API documentation"
                                        }
                                    ],
                                    "ancestors": [
                                        {
                                            "href": "/api/v3/work_packages/1290",
                                            "title": "Root node of hierarchy"
                                        },
                                        {
                                            "href": "/api/v3/work_packages/1291",
                                            "title": "Intermediate node of hierarchy"
                                        },
                                        {
                                            "href": "/api/v3/work_packages/1298",
                                            "title": "nisi eligendi officiis eos delectus quis voluptas dolores"
                                        }
                                    ],
                                    "timeEntries": {
                                        "href": "/work_packages/1528/time_entries",
                                        "type": "text/html",
                                        "title": "Time entries"
                                    },
                                    "watchers": {
                                        "href": "/api/v3/work_packages/1528/watchers"
                                    },
                                    "customField3": {
                                        "href": "api/v3/users/14"
                                    }
                                },
                                "id": 1528,
                                "subject": "Develop API",
                                "description": {
                                    "format": "markdown",
                                    "raw": "Develop super cool OpenProject API.",
                                    "html": "<p>Develop super cool OpenProject API.</p>"
                                },
                                "scheduleManually": false,
                                "startDate": null,
                                "dueDate": null,
                                "derivedStartDate": null,
                                "derivedDueDate": null,
                                "estimatedTime": "PT2H",
                                "derivedEstimatedTime": "PT10H",
                                "percentageDone": 0,
                                "customField1": "Foo",
                                "customField2": 42,
                                "createdAt": "2014-08-29T12:40:53Z",
                                "updatedAt": "2014-08-29T12:44:41Z"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Work PackageModel"
                        }
                    },
                    "400": {
                        "description": "Occurs when the client did not send a valid JSON object in the request body.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request body was not a single JSON object."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** add work packages\n\n*Note that you will only receive this error, if you are at least allowed to see the corresponding project.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to add work packages to this project."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the project does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permissions:** view project\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of a project.\nThat's why a 404 is returned here, even if a 403 might be more appropriate.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified project does not exist."
                            }
                        }
                    },
                    "422": {
                        "description": "Returned if:\n\n* the client tries to write a read-only property\n\n* a constraint for a property was violated\n\n* a property was provided in an unreadable format",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:PropertyConstraintViolation",
                                "message": "The subject might not be blank.",
                                "_embedded": {
                                    "details": {
                                        "attribute": "Subject"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Create Work Package",
                "operationId": "Create Work Package",
                "description": "When calling this endpoint the client provides a single object, containing at least the properties and links that are required, in the body.\nThe required fields of a WorkPackage can be found in its schema, which is embedded in the respective form.\nNote that it is only allowed to provide properties or links supporting the write operation.\n\nA project link must be set when creating work packages through this route.",
                "tags": [
                    "Work Packages"
                ],
                "parameters": [
                    {
                        "name": "notify",
                        "in": "query",
                        "description": "Indicates whether change notifications (e.g. via E-Mail) should be sent.\nNote that this controls notifications for all users interested in changes to the work package (e.g. watchers, author and assignee),\nnot just the current user.",
                        "required": false,
                        "x-example": "false",
                        "type": "boolean",
                        "default": "true"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "subject": {
                                    "type": "string"
                                },
                                "customField41": {
                                    "type": "number"
                                },
                                "startDate": {
                                    "type": "string"
                                },
                                "_links": {
                                    "type": "object",
                                    "properties": {
                                        "project": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "type": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "assignee": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "customField32": {
                                            "type": "object",
                                            "properties": {
                                                "href": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "example": {
                                "subject": "Lorem",
                                "customField41": 8,
                                "startDate": "2048-01-03",
                                "_links": {
                                    "project": {
                                        "href": "/api/v3/project/42"
                                    },
                                    "type": {
                                        "href": "/api/v3/type/123"
                                    },
                                    "assignee": {
                                        "href": "/api/v3/users/8"
                                    },
                                    "customField32": {
                                        "href": "/api/v3/users/3"
                                    }
                                }
                            }
                        }
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/work_packages/form": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Work Package Create Form",
                "operationId": "Work Package Create Form",
                "description": "",
                "tags": [
                    "Work Packages"
                ],
                "parameters": []
            }
        },
        "/api/v3/projects/{id}/work_packages": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/projects/14/work_packages"
                                    }
                                },
                                "total": 2,
                                "count": 2,
                                "_type": "Collection",
                                "_embedded": {
                                    "elements": [
                                        {
                                            "_type": "WorkPackage",
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/work_packages/1"
                                                }
                                            },
                                            "id": 1,
                                            "subject": "Skipped other properties for brevity"
                                        },
                                        {
                                            "_type": "WorkPackage",
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/work_packages/2"
                                                }
                                            },
                                            "id": 2,
                                            "subject": "Skipped other properties for brevity"
                                        }
                                    ]
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Work Packages by ProjectModel"
                        }
                    },
                    "400": {
                        "description": "Returned if the client sends a query parameter, that the server knows, but does not understand.\nE.g. by providing a syntactically incorrect `filters` parameter.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidQuery",
                                "message": "Operator can't be blank."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** view work packages\n\n*Note that you will only receive this error, if you are at least allowed to see the corresponding project.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to see the work packages of this project."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the project does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view project",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified project does not exist."
                            }
                        }
                    }
                },
                "summary": "List Work Packages",
                "operationId": "List Work Packages",
                "description": "",
                "tags": [
                    "Work Packages"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Project id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Page number inside the requested collection.",
                        "required": false,
                        "x-example": "25",
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Number of elements to display per page.",
                        "required": false,
                        "x-example": "25",
                        "type": "integer"
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "JSON specifying filter conditions.\nAccepts the same format as returned by the [queries](#queries) endpoint. If no filter is to be applied, the client should send an empty array (`[]`).",
                        "required": false,
                        "x-example": "[{ \"type_id\": { \"operator\": \"=\", \"values\": ['1', '2'] }}]",
                        "type": "string",
                        "default": "[{ \"status_id\": { \"operator\": \"o\", \"values\": null }}]"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "JSON specifying sort criteria.\nAccepts the same format as returned by the [queries](#queries) endpoint.",
                        "required": false,
                        "x-example": "[[\"status\", \"asc\"]]",
                        "type": "string",
                        "default": "[\"id\", \"asc\"]"
                    },
                    {
                        "name": "groupBy",
                        "in": "query",
                        "description": "The column to group by.",
                        "required": false,
                        "x-example": "status",
                        "type": "string"
                    },
                    {
                        "name": "showSums",
                        "in": "query",
                        "description": "Indicates whether properties should be summed up if they support it.",
                        "required": false,
                        "x-example": "true",
                        "type": "boolean",
                        "default": "false"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "WorkPackage",
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/work_packages/1528",
                                        "title": "Develop API"
                                    },
                                    "schema": {
                                        "href": "/api/v3/work_packages/schemas/11-2"
                                    },
                                    "update": {
                                        "href": "/api/v3/work_packages/1528",
                                        "method": "patch",
                                        "title": "Update Develop API"
                                    },
                                    "delete": {
                                        "href": "/work_packages/bulk?ids=1528",
                                        "method": "delete",
                                        "title": "Delete Develop API"
                                    },
                                    "logTime": {
                                        "href": "/work_packages/1528/time_entries/new",
                                        "type": "text/html",
                                        "title": "Log time on Develop API"
                                    },
                                    "move": {
                                        "href": "/work_packages/1528/move/new",
                                        "type": "text/html",
                                        "title": "Move Develop API"
                                    },
                                    "attachments": {
                                        "href": "/api/v3/work_packages/1528/attachments"
                                    },
                                    "addAttachment": {
                                        "href": "/api/v3/work_packages/1528/attachments",
                                        "method": "post"
                                    },
                                    "author": {
                                        "href": "/api/v3/users/1",
                                        "title": "OpenProject Admin - admin"
                                    },
                                    "customActions": [
                                        {
                                            "href": "/api/v3/work_packages/1528/custom_actions/153/execute",
                                            "method": "post",
                                            "title": "Reset"
                                        },
                                        {
                                            "href": "/api/v3/work_packages/1528/custom_actions/94/execute",
                                            "method": "post",
                                            "title": "Forward to accounting"
                                        }
                                    ],
                                    "responsible": {
                                        "href": "/api/v3/users/23",
                                        "title": "Laron Leuschke - Alaina5788"
                                    },
                                    "relations": {
                                        "href": "/api/v3/work_packages/1528/relations",
                                        "title": "Show relations"
                                    },
                                    "revisions": {
                                        "href": "/api/v3/work_packages/1528/revisions"
                                    },
                                    "assignee": {
                                        "href": "/api/v3/users/11",
                                        "title": "Emmie Okuneva - Adele5450"
                                    },
                                    "priority": {
                                        "href": "/api/v3/priorities/2",
                                        "title": "Normal"
                                    },
                                    "project": {
                                        "href": "/api/v3/projects/1",
                                        "title": "A Test Project"
                                    },
                                    "status": {
                                        "href": "/api/v3/statuses/1",
                                        "title": "New"
                                    },
                                    "type": {
                                        "href": "/api/v3/types/1",
                                        "title": "A Type"
                                    },
                                    "version": {
                                        "href": "/api/v3/versions/1",
                                        "title": "Version 1"
                                    },
                                    "availableWatchers": {
                                        "href": "/api/v3/work_packages/1528/available_watchers"
                                    },
                                    "watch": {
                                        "href": "/api/v3/work_packages/1528/watchers",
                                        "method": "post",
                                        "payload": {
                                            "user": {
                                                "href": "/api/v3/users/1"
                                            }
                                        }
                                    },
                                    "addWatcher": {
                                        "href": "/api/v3/work_packages/1528/watchers",
                                        "method": "post",
                                        "payload": {
                                            "user": {
                                                "href": "/api/v3/users/{user_id}"
                                            }
                                        },
                                        "templated": true
                                    },
                                    "removeWatcher": {
                                        "href": "/api/v3/work_packages/1528/watchers/{user_id}",
                                        "method": "delete",
                                        "templated": true
                                    },
                                    "addRelation": {
                                        "href": "/api/v3/relations",
                                        "method": "post",
                                        "title": "Add relation"
                                    },
                                    "changeParent": {
                                        "href": "/api/v3/work_packages/694",
                                        "method": "patch",
                                        "title": "Change parent of Bug in OpenProject"
                                    },
                                    "addComment": {
                                        "href": "/api/v3/work_packages/1528/activities",
                                        "method": "post",
                                        "title": "Add comment"
                                    },
                                    "parent": {
                                        "href": "/api/v3/work_packages/1298",
                                        "title": "nisi eligendi officiis eos delectus quis voluptas dolores"
                                    },
                                    "category": {
                                        "href": "/api/v3/categories/1298",
                                        "title": "eligend isi"
                                    },
                                    "children": [
                                        {
                                            "href": "/api/v3/work_packages/1529",
                                            "title": "Write API documentation"
                                        }
                                    ],
                                    "ancestors": [
                                        {
                                            "href": "/api/v3/work_packages/1290",
                                            "title": "Root node of hierarchy"
                                        },
                                        {
                                            "href": "/api/v3/work_packages/1291",
                                            "title": "Intermediate node of hierarchy"
                                        },
                                        {
                                            "href": "/api/v3/work_packages/1298",
                                            "title": "nisi eligendi officiis eos delectus quis voluptas dolores"
                                        }
                                    ],
                                    "timeEntries": {
                                        "href": "/work_packages/1528/time_entries",
                                        "type": "text/html",
                                        "title": "Time entries"
                                    },
                                    "watchers": {
                                        "href": "/api/v3/work_packages/1528/watchers"
                                    },
                                    "customField3": {
                                        "href": "api/v3/users/14"
                                    }
                                },
                                "id": 1528,
                                "subject": "Develop API",
                                "description": {
                                    "format": "markdown",
                                    "raw": "Develop super cool OpenProject API.",
                                    "html": "<p>Develop super cool OpenProject API.</p>"
                                },
                                "scheduleManually": false,
                                "startDate": null,
                                "dueDate": null,
                                "derivedStartDate": null,
                                "derivedDueDate": null,
                                "estimatedTime": "PT2H",
                                "derivedEstimatedTime": "PT10H",
                                "percentageDone": 0,
                                "customField1": "Foo",
                                "customField2": 42,
                                "createdAt": "2014-08-29T12:40:53Z",
                                "updatedAt": "2014-08-29T12:44:41Z"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Work PackageModel"
                        }
                    },
                    "400": {
                        "description": "Occurs when the client did not send a valid JSON object in the request body.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request body was not a single JSON object."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** add work packages\n\n*Note that you will only receive this error, if you are at least allowed to see the corresponding project.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to add work packages to this project."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the project does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permissions:** view project\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of a project.\nThat's why a 404 is returned here, even if a 403 might be more appropriate.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified project does not exist."
                            }
                        }
                    },
                    "422": {
                        "description": "Returned if:\n\n* the client tries to write a read-only property\n\n* a constraint for a property was violated\n\n* a property was provided in an unreadable format",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:PropertyConstraintViolation",
                                "message": "The subject might not be blank.",
                                "_embedded": {
                                    "details": {
                                        "attribute": "Subject"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Create Work Package",
                "operationId": "Create Work Package",
                "description": "When calling this endpoint the client provides a single object, containing at least the properties and links that are required, in the body.\nThe required fields of a WorkPackage can be found in its schema, which is embedded in the respective form.\nNote that it is only allowed to provide properties or links supporting the write operation.",
                "tags": [
                    "Work Packages"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Project id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    },
                    {
                        "name": "notify",
                        "in": "query",
                        "description": "Indicates whether change notifications (e.g. via E-Mail) should be sent.\nNote that this controls notifications for all users interested in changes to the work package (e.g. watchers, author and assignee),\nnot just the current user.",
                        "required": false,
                        "x-example": "false",
                        "type": "boolean",
                        "default": "true"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/projects/{id}/work_packages/form": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Work Package Create Form",
                "operationId": "Work Package Create Form",
                "description": "",
                "tags": [
                    "Work Packages"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the project in which the work package will be created",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ]
            }
        },
        "/api/v3/work_packages/{work_package_id}/relations": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {},
                        "examples": {}
                    },
                    "400": {
                        "description": "Occurs when the client did not send a valid JSON object in the request body.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request body was not a single JSON object."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** manage work package relations",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to create a relation."
                            }
                        }
                    },
                    "409": {
                        "description": "Returned if there already exists a relation between the given work packages of **any** type\nor if the relation is not allowed.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:UpdateConflict",
                                "message": "Couldn't update the resource because of conflicting modifications."
                            }
                        }
                    },
                    "422": {
                        "description": "Returned if:\n\n* the client tries to write a read-only property (`PropertyIsReadOnly`)\n\n* a constraint for a property was violated (`PropertyConstraintViolation`)\n\n* the client provides a link to an invalid resource (`ResourceTypeMismatch`)",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:PropertyConstraintViolation",
                                "message": "Delay must be a number greater than or equal to 0",
                                "_embedded": {
                                    "details": {
                                        "attribute": "delay"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Create Relation",
                "operationId": "Create Relation",
                "description": "When calling this endpoint the client provides a single object, containing at least the properties and links that are required, in the body.\nThe required fields of a Relation can be found in its schema, which is embedded in the respective form.\nNote that it is only allowed to provide properties or links supporting the write operation.",
                "tags": [
                    "Work Packages"
                ],
                "parameters": [
                    {
                        "name": "work_package_id",
                        "in": "path",
                        "description": "Work package id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            },
            "get": {
                "responses": {
                    "302": {
                        "description": "Found",
                        "headers": {
                            "Location": {
                                "type": "string"
                            }
                        },
                        "examples": {
                            "text/plain": "You are being redirected to /api/v3/relations?involved={work_package_id}\n"
                        }
                    }
                },
                "summary": "List relations",
                "operationId": "List relations",
                "description": "Lists all relations this work package is involved in.",
                "tags": [
                    "Work Packages"
                ],
                "parameters": [
                    {
                        "name": "work_package_id",
                        "in": "path",
                        "description": "Work package id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "text/plain"
                ]
            }
        },
        "/api/v3/work_packages/{id}/relations/form": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/relations/form"
                                    },
                                    "validate": {
                                        "href": "/api/v3/relations/form",
                                        "method": "POST"
                                    },
                                    "commit": {
                                        "href": "/api/v3/relations",
                                        "method": "PATCH"
                                    }
                                },
                                "_type": "Form",
                                "_embedded": {
                                    "payload": {
                                        "_links": {
                                            "from": {
                                                "href": "/api/v3/work_packages/4534"
                                            },
                                            "to": {
                                                "href": "/api/v3/work_packages/3857"
                                            }
                                        },
                                        "_type": "WorkPackage",
                                        "type": "follows",
                                        "delay": 3,
                                        "description": "let it rest for 3 days"
                                    },
                                    "schema": {
                                        "_type": "Schema",
                                        "id": {
                                            "name": "ID",
                                            "type": "Integer",
                                            "writable": false
                                        },
                                        "type": {
                                            "name": "Type",
                                            "type": "String",
                                            "writable": true,
                                            "allowedValues": [
                                                "relates",
                                                "duplicates",
                                                "duplicated",
                                                "blocks",
                                                "blocked",
                                                "precedes",
                                                "follows",
                                                "includes",
                                                "partof",
                                                "requires",
                                                "required"
                                            ]
                                        },
                                        "reverseType": {
                                            "name": "Reverse Type",
                                            "type": "String",
                                            "writable": false
                                        },
                                        "description": {
                                            "name": "Description",
                                            "type": "String",
                                            "writable": true
                                        },
                                        "from": {
                                            "_links": {
                                                "allowedValues": [
                                                    {
                                                        "href": "/api/v3/work_packages/{id}"
                                                    }
                                                ]
                                            },
                                            "name": "From work package",
                                            "type": "WorkPackage",
                                            "writable": true
                                        },
                                        "to": {
                                            "_links": {
                                                "allowedValues": {
                                                    "href": "/api/v3/work_packages/{id}/available_relation_candidates",
                                                    "title": "Available work packages to relate to"
                                                }
                                            },
                                            "name": "To work package",
                                            "type": "WorkPackage",
                                            "writable": true
                                        },
                                        "delay": {
                                            "name": "Delay",
                                            "type": "Integer",
                                            "writable": true
                                        }
                                    },
                                    "validationErrors": {
                                        "from": {
                                            "_type": "Error",
                                            "errorIdentifier": "urn:openproject-org:api:v3:errors:BadExampleError",
                                            "message": "For the purpose of this example we need a validation error. The remainder of the response pretends there were no errors."
                                        }
                                    }
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Work Package Relation FormModel"
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** manage work package relations\n\n*Note that you will only receive this error, if you are at least allowed to see the involved work packages.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to edit the specified relation."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the relation does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view (involved) work package(s), manage work package relations",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified relation does not exist."
                            }
                        }
                    }
                },
                "summary": "Relation create form",
                "operationId": "Relation create form",
                "description": "",
                "tags": [
                    "Work Packages"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the relation being modified",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/work_packages/{work_package_id}/watchers": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/WatchersModel"
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** view work package watchers\n\n*Note that you will only receive this error, if you are at least allowed to see the corresponding work package.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to see the watchers of this work package."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the work package does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package\n\n*Note that you will effectively not be able to see the watchers of a work package without being able to see the work package.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified work package does not exist."
                            }
                        }
                    }
                },
                "summary": "List watchers",
                "operationId": "List watchers",
                "description": "",
                "tags": [
                    "Work Packages"
                ],
                "parameters": [
                    {
                        "name": "work_package_id",
                        "in": "path",
                        "description": "Work package id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {}
                    },
                    "201": {
                        "description": "Created",
                        "headers": {},
                        "examples": {}
                    },
                    "400": {
                        "description": "Occurs when the client did not send a valid JSON object in the request body.\n\nFor example:\n\n* The request did not contain a single JSON object\n\n* The JSON object did not contain the key `user`\n\n* The value of `users` was not a link object",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request body was not a single JSON object."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permissions:**\n\n* view work package (for self)\n\n* add work package watchers (for other users)\n\n*Note that you will only receive this error, if you are at least allowed to see the corresponding work package.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to add watchers to this work package."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the work package does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package\n\n*Note that you will effectively not be able to change the watchers of a work package without being able to see the work package.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified work package does not exist."
                            }
                        }
                    },
                    "422": {
                        "description": "Returned if:\n\n* the client tries to specify a link to a resource that is not a user (`ResourceTypeMismatch`)\n\n* the user specified is not allowed to watch that work package (`PropertyConstraintViolation`)\n\n* the user specified does not exist (`PropertyConstraintViolation`)",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Add watcher",
                "operationId": "Add watcher",
                "description": "Adds a watcher to the specified work package.\n\nThe request is expected to contain a single JSON object, that contains a link object under the `user` key.\n\nThe response will be user added as watcher.\nIn case the user was already watching the work package an `HTTP 200` is returned, an\n`HTTP 201` if the user was added as a new watcher.",
                "tags": [
                    "Work Packages"
                ],
                "parameters": [
                    {
                        "name": "work_package_id",
                        "in": "path",
                        "description": "Work package id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "user": {
                                    "type": "object",
                                    "properties": {
                                        "href": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "example": {
                                "user": {
                                    "href": "/api/v3/users/1"
                                }
                            }
                        }
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/work_packages/{work_package_id}/watchers/{id}": {
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {},
                        "examples": {}
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** delete work package watchers\n\n*Note that you will only receive this error, if you are at least allowed to see the corresponding work package.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to remove watchers from this work package."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned in one of the following cases:\n\nEither the work package does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package\n\nOr the specified user does not exist at all.\n\n*Note that you will effectively not be able to change the watchers of a work package without being able to see the work package.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified work package does not exist."
                            }
                        }
                    }
                },
                "summary": "Remove watcher",
                "operationId": "Remove watcher",
                "description": "Removes the specified user from the list of watchers for the given work package.\n\nIf the request succeeds, the specified user is not watching the work package anymore.\n\n*Note: This might also be the case, if the specified user did not watch the work package prior to the request.*",
                "tags": [
                    "Work Packages"
                ],
                "parameters": [
                    {
                        "name": "work_package_id",
                        "in": "path",
                        "description": "Work package id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/work_packages/{id}/available_relation_candidates": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/projects/14/work_packages"
                                    }
                                },
                                "total": 2,
                                "count": 2,
                                "_type": "Collection",
                                "_embedded": {
                                    "elements": [
                                        {
                                            "_type": "WorkPackage",
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/work_packages/1"
                                                }
                                            },
                                            "id": 1,
                                            "subject": "Skipped other properties for brevity"
                                        },
                                        {
                                            "_type": "WorkPackage",
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/work_packages/2"
                                                }
                                            },
                                            "id": 2,
                                            "subject": "Skipped other properties for brevity"
                                        }
                                    ]
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Available relation candidatesModel"
                        }
                    }
                },
                "summary": "Available relation candidates",
                "operationId": "Available relation candidates",
                "description": "",
                "tags": [
                    "Work Packages"
                ],
                "parameters": [
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Maximum number of candidates to list (default 10)",
                        "required": false,
                        "x-example": "25",
                        "type": "integer"
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "JSON specifying filter conditions.\nAccepts the same format as returned by the [queries](#queries) endpoint.",
                        "required": false,
                        "x-example": "[{ \"status_id\": { \"operator\": \"o\", \"values\": null } }]",
                        "type": "string"
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Shortcut for filtering by ID or subject",
                        "required": false,
                        "x-example": "\"rollout\"",
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of relation to find candidates for (default \"relates\")",
                        "required": false,
                        "x-example": "\"follows\"",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/work_packages/{id}/available_watchers": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/Available WatchersModel"
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** add work package watchers\n\n*Note that you will only receive this error, if you are at least allowed to see the corresponding work package.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the work package does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified work package does not exist."
                            }
                        }
                    }
                },
                "summary": "Available watchers",
                "operationId": "Available watchers",
                "description": "Gets a list of users that are able to be watchers of the specified work package.",
                "tags": [
                    "Work Packages"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "work package id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/work_packages/{id}/available_projects": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/Available ProjectsModel"
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** edit work package\n\n*Note that you will only receive this error, if you are at least allowed to see the corresponding work package.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not authorized to access this resource."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the work package does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified work package does not exist."
                            }
                        }
                    }
                },
                "summary": "Available projects",
                "operationId": "Available projects",
                "description": "Gets a list of projects that are available as projects to which the work package can be moved.",
                "tags": [
                    "Work Packages"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "work package id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/work_packages/{id}/revisions": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/RevisionsModel"
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** view work packages for the project the work package is contained in.\n\n*Note that you will only receive this error, if you are at least allowed to see the corresponding work package.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to see linked revisions for this work package."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the work package does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified work project does not exist."
                            }
                        }
                    }
                },
                "summary": "Revisions",
                "operationId": "Revisions",
                "description": "Gets a list of revisions that are linked to this work package, e.g., because it is referenced in the commit message of the revision.\nOnly linked revisions from repositories are shown if the user has the view changesets permission in the defining project.",
                "tags": [
                    "Work Packages"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "work package id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/work_packages/{id}/activities": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_links": {
                                    "self": {
                                        "href": "/api/v3/work_packages/1/revisions"
                                    }
                                },
                                "total": 2,
                                "count": 2,
                                "_type": "Collection",
                                "_embedded": {
                                    "elements": [
                                        {
                                            "_type": "Activity",
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/activity/1"
                                                },
                                                "workPackage": {
                                                    "href": "/api/v3/work_packages/1"
                                                },
                                                "user": {
                                                    "href": "/api/v3/users/1"
                                                }
                                            },
                                            "id": 1,
                                            "details": [],
                                            "comment": {
                                                "format": "markdown",
                                                "raw": "Lorem ipsum dolor sit amet.",
                                                "html": "<p>Lorem ipsum dolor sit amet.</p>"
                                            },
                                            "createdAt": "2014-05-21T08:51:20Z",
                                            "version": 1
                                        },
                                        {
                                            "_type": "Activity",
                                            "_links": {
                                                "self": {
                                                    "href": "/api/v3/activity/2"
                                                },
                                                "workPackage": {
                                                    "href": "/api/v3/work_packages/1"
                                                },
                                                "user": {
                                                    "href": "/api/v3/users/1"
                                                }
                                            },
                                            "id": 2,
                                            "details": [],
                                            "comment": {
                                                "format": "markdown",
                                                "raw": "Lorem ipsum dolor sit amet.",
                                                "html": "<p>Lorem ipsum dolor sit amet.</p>"
                                            },
                                            "createdAt": "2014-05-21T08:51:22Z",
                                            "version": 2
                                        }
                                    ]
                                }
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Work Package activitiesModel"
                        }
                    },
                    "404": {
                        "description": "Returned if the work package does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified work package does not exist."
                            }
                        }
                    }
                },
                "summary": "List work package activities",
                "operationId": "List work package activities",
                "description": "",
                "tags": [
                    "Work Packages"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Work package id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {},
                        "examples": {}
                    },
                    "400": {
                        "description": "Occurs when the client did not send a valid JSON object in the request body.",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:InvalidRequestBody",
                                "message": "The request body was not a single JSON object."
                            }
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** create journals\n\n*Note that you will only receive this error, if you are at least allowed to see the corresponding work package.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to create a comment here."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the work package does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified work package does not exist."
                            }
                        }
                    }
                },
                "summary": "Comment work package",
                "operationId": "Comment work package",
                "description": "Creates an activity for the selected work package and, on success, returns the\nupdated activity.",
                "tags": [
                    "Work Packages"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Work package id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    },
                    {
                        "name": "notify",
                        "in": "query",
                        "description": "Indicates whether change notifications (e.g. via E-Mail) should be sent.\nNote that this controls notifications for all users interested in changes to the work package (e.g. watchers, author and assignee),\nnot just the current user.",
                        "required": false,
                        "x-example": "false",
                        "type": "boolean",
                        "default": "true"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "comment": {
                                    "type": "object",
                                    "properties": {
                                        "raw": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "example": {
                                "comment": {
                                    "raw": "I think this is awesome!"
                                }
                            }
                        }
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/projects/{project_id}/available_assignees": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/Available AssigneesModel"
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** view work packages\n\n*Note that you will only receive this error, if you are at least allowed to see the corresponding project.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to see the assignable users for this project."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the project does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view project",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified project does not exist."
                            }
                        }
                    }
                },
                "summary": "Available assignees",
                "operationId": "Available assignees",
                "description": "Gets a list of users that can be assigned to work packages in the given project.",
                "tags": [
                    "Work Packages"
                ],
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "description": "Project id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        },
        "/api/v3/projects/{project_id}/available_responsibles": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/Available ResponsiblesModel"
                        }
                    },
                    "403": {
                        "description": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** view work packages\n\n*Note that you will only receive this error, if you are at least allowed to see the corresponding project.*",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:MissingPermission",
                                "message": "You are not allowed to see the users available as responsible for this project."
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if the project does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view project",
                        "headers": {},
                        "examples": {
                            "application/hal+json": {
                                "_type": "Error",
                                "errorIdentifier": "urn:openproject-org:api:v3:errors:NotFound",
                                "message": "The specified project does not exist."
                            }
                        }
                    }
                },
                "summary": "Available responsibles",
                "operationId": "Available responsibles",
                "description": "Gets a list of users that can be assigned as the responsible of a work package in the given project.",
                "tags": [
                    "Work Packages"
                ],
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "description": "Project id",
                        "required": true,
                        "x-example": "1",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/hal+json"
                ]
            }
        }
    },
    "definitions": {
        "Offset based pagination": {},
        "Cursor based pagination": {},
        "Aggregations": {},
        "Example Form": {},
        "Example FormModel": {},
        "View action": {},
        "View actionModel": {},
        "List actions": {},
        "List actionsModel": {},
        "View capabilities": {},
        "View capabilitiesModel": {},
        "List capabilities": {},
        "List capabilitiesModel": {},
        "View global context": {},
        "View global contextModel": {},
        "Activity": {},
        "ActivityModel": {},
        "Attachments": {},
        "Attachment": {},
        "AttachmentModel": {},
        "Attachments by post": {},
        "Attachments by postModel": {},
        "Attachments by wiki page": {},
        "Attachments by wiki pageModel": {},
        "Attachments by work package": {},
        "Attachments by work packageModel": {},
        "Budget": {},
        "BudgetModel": {},
        "Budgets by Project": {},
        "Budgets by ProjectModel": {},
        "Categories by Project": {},
        "Categories by ProjectModel": {},
        "Category": {},
        "CategoryModel": {},
        "Configuration": {},
        "ConfigurationModel": {},
        "Custom Action": {},
        "Custom ActionModel": {},
        "Execute custom action": {},
        "Custom Object": {},
        "Custom ObjectModel": {},
        "Document": {},
        "DocumentModel": {},
        "Documents": {},
        "DocumentsModel": {},
        "Grid": {},
        "GridModel": {},
        "Grids": {},
        "GridsModel": {},
        "Grid Create Form": {},
        "Grid Update Form": {},
        "View group": {},
        "View groupModel": {},
        "Create group": {},
        "Update group": {},
        "Delete group": {},
        "List groups": {},
        "List groupsModel": {},
        "Help texts": {},
        "Help textsModel": {},
        "Help text": {},
        "Help textModel": {},
        "View membership": {},
        "View membershipModel": {},
        "Create membership": {},
        "Update membership": {},
        "Delete membership": {},
        "List memberships": {},
        "List membershipsModel": {},
        "View membership schema": {},
        "View membership schemaModel": {},
        "Membership create form": {},
        "Membership update form": {},
        "Available projects for memberships": {},
        "Available projects for membershipsModel": {},
        "News": {},
        "NewsModel": {},
        "List of News": {},
        "List of NewsModel": {},
        "Post": {},
        "PostModel": {},
        "Principals": {},
        "PrincipalsModel": {},
        "Priorities": {},
        "PrioritiesModel": {},
        "Priority": {},
        "PriorityModel": {},
        "View project": {},
        "View projectModel": {},
        "Create project": {},
        "Update project": {},
        "Delete project": {},
        "List projects": {},
        "List projectsModel": {},
        "Projects schema": {},
        "Projects schemaModel": {},
        "Project create form": {},
        "Project update form": {},
        "Project copy form": {},
        "Create project copy": {},
        "List available parent project candidates": {},
        "List available parent project candidatesModel": {},
        "List projects by version": {},
        "List projects by versionModel": {},
        "View project status": {},
        "View project statusModel": {},
        "Query": {},
        "QueryModel": {},
        "Default Query": {},
        "Default QueryModel": {},
        "Default Query for Project": {},
        "Default Query for ProjectModel": {},
        "Star Query": {},
        "Star QueryModel": {},
        "Unstar Query": {},
        "Unstar QueryModel": {},
        "Queries": {},
        "QueriesModel": {},
        "Query Create Form": {},
        "Schema For Global Queries": {},
        "Schema For Global QueriesModel": {},
        "Schema For Project Queries": {},
        "Schema For Project QueriesModel": {},
        "Query Available Projects": {},
        "Query Available ProjectsModel": {},
        "Query Column": {},
        "Query ColumnModel": {},
        "Query Filter": {},
        "Query FilterModel": {},
        "Query Operator": {},
        "Query OperatorModel": {},
        "Query Sort By": {},
        "Query Sort ByModel": {},
        "Query Filter Instance Schema": {},
        "Query Filter Instance SchemaModel": {},
        "Query Filter Instance Schemas": {},
        "Query Filter Instance SchemasModel": {},
        "Query Filter Instance Schemas For Project": {},
        "Query Filter Instance Schemas For ProjectModel": {},
        "Relation": {},
        "RelationModel": {},
        "Relation schema": {},
        "Relation schemaModel": {},
        "Relation schema for type": {},
        "Relations": {},
        "RelationsModel": {},
        "Relation edit form": {},
        "Relation edit formModel": {},
        "Markdown": {},
        "MarkdownModel": {},
        "Plain Text": {},
        "Plain TextModel": {},
        "Revision": {},
        "RevisionModel": {},
        "Role": {},
        "RoleModel": {},
        "Roles": {},
        "RolesModel": {},
        "Root": {},
        "RootModel": {},
        "Example Schema": {},
        "Example SchemaModel": {},
        "Statuses": {},
        "StatusesModel": {},
        "Status": {},
        "StatusModel": {},
        "View time entry": {},
        "View time entryModel": {},
        "Create time entry": {},
        "Update time entry": {},
        "Delete time entry": {},
        "List time entries": {},
        "List time entriesModel": {},
        "View time entry schema": {},
        "View time entry schemaModel": {},
        "Time entry create form": {},
        "Time entry update form": {},
        "Available projects for time entries": {},
        "Available projects for time entriesModel": {},
        "View time entries activity": {},
        "View time entries activityModel": {},
        "Types": {},
        "TypesModel": {},
        "Types by Project": {},
        "Types by ProjectModel": {},
        "Type": {},
        "TypeModel": {},
        "UserPreferences": {},
        "UserPreferencesModel": {},
        "View user": {},
        "View userModel": {},
        "Create User": {},
        "Update User": {},
        "Delete User": {},
        "Lock user": {},
        "Unlock user": {},
        "Users": {},
        "UsersModel": {},
        "View user schema": {},
        "View user schemaModel": {},
        "User create form": {},
        "User update form": {},
        "Version": {},
        "VersionModel": {},
        "Versions": {},
        "VersionsModel": {},
        "Version schema": {},
        "Version schemaModel": {},
        "Version create form": {},
        "Version update form": {},
        "Versions by Project": {},
        "Versions by ProjectModel": {},
        "Available projects for versions": {},
        "Available projects for versionsModel": {},
        "Wiki Page": {},
        "Wiki PageModel": {},
        "Work Package": {},
        "Work PackageModel": {},
        "Work Package Schema": {},
        "Work Package Schemas": {},
        "Work Package SchemasModel": {},
        "Work Package Edit Form": {},
        "Work Packages": {},
        "Work PackagesModel": {},
        "Work Package Create Form": {},
        "Work Packages by Project": {},
        "Work Packages by ProjectModel": {},
        "Work Package Relation Form": {},
        "Work Package Relation FormModel": {},
        "Watchers": {},
        "WatchersModel": {},
        "Remove Watcher": {},
        "Available relation candidates": {},
        "Available relation candidatesModel": {},
        "Available Watchers": {},
        "Available WatchersModel": {},
        "Available Projects": {},
        "Available ProjectsModel": {},
        "Revisions": {},
        "RevisionsModel": {},
        "Work Package activities": {},
        "Work Package activitiesModel": {},
        "Available Assignees": {},
        "Available AssigneesModel": {},
        "Available Responsibles": {},
        "Available ResponsiblesModel": {}
    },
    "securityDefinitions": {},
    "tags": [
        {
            "name": "Basic Objects",
            "description": "# Links\n\nLinks to other resources in the API are represented uniformly by so called link objects.\n\n## Local Properties\n\n| Property  | Description                                                              | Type    | Required | Nullable | Default     |\n|:---------:| ------------------------------------------------------------------------ | ------- |:--------:|:--------:| ----------- |\n| href      | URL to the referenced resource (might be relative)                       | String  |    ✓     |    ✓     |             |\n| title     | Representative label for the resource                                    | String  |          |          |             |\n| templated | If true the `href` contains parts that need to be replaced by the client | Boolean |          |          | false       |\n| method    | The HTTP verb to use when requesting the resource                        | String  |          |          | GET         |\n| payload   | The payload to send in the request to achieve the desired result         | String  |          |          | unspecified |\n| identifier| An optional unique identifier to the link object                         | String  |          |          | unspecified |\n\nAll link objects *must* contain the `href` property, though it might be `null`. Thus the following is a valid\nlink object:\n\n{\n        \"href\": null\n    }\n\nwhereas `{ }` is not a valid link object. The meaning of `\"href\": null` is that **no** resource is referenced.\nFor example a work package without an assignee will still have an assignee link, but its `href` will be `null`.\n\nIf a `title` is present, the client can display the title to the user when referring to the resource.\n\nTemplated links are links that contain client replaceable parts. Replaceable parts are enclosed in braces. For example\nthe link `api/v3/example/{id}` is not complete in itself, but the client needs to replace the string `{id}` itself.\nAs of now the API does not indicate the valid replacement values.\n\nThe `method` indicates which HTTP verb the client *must* use when following the link for the intended purpose.\n\nIf a `payload` is specified, it needs to be sent as the body of the request to achieve the desired result (e.g. perform the\naction represented by the link). If no `payload` is specified, there is either no payload to send or a valid payload is not specified\nby the link object. A payload might also be templated slightly. If the `templated` property is true, a payload might contain replaceable parts\nin its strings (e.g. `{ \"href\": \"/api/v3/examples/{example_id}\" }`).\n\nNote: When writing links (e.g. during a `PATCH` operation) only changes to `href` are accepted.\nChanges to all other properties will be **silently ignored**.\n\nFor resources invisible to the client (e.g. because of missing permissions), a link will contain\nthe uri `urn:openproject-org:api:v3:undisclosed` instead of a url. This indicates the existence of a value\nwithout revealing the actual value. An example for this is the parent project. A project resource which itself might be\nvisible to the client can have a reference to a parent project invisible to the same client. Revealing the existence of\na parent over hiding has the benefit of allowing the client to make an informed decision of whether to keep the existing reference\nor updating it. Sending ‘{ \"href\": \"urn:openproject-org:api:v3:undisclosed\" }` for a resource will have the effect of keeping the\noriginal value. This is especially beneficial if the client creates and updates resources based on the payload object provided\nas part of a form as is recommended when interacting with the API.\n\n# Errors\n\nIn case of an error, the API will respond with an appropriate HTTP status code.\nFor responses with an HTTP status of `4xx` and `5xx` the body will always contain a single error object.\nError objects shall give the client additional details about the cause of an erroneous response.\n\n## General errors\n\n* Error objects have their `_type` set to `Error`\n\n* The `errorIdentifier` serves as a unique (and machine readable) identifier for a specific error cause\n    * There *may* be multiple possible error identifiers per HTTP status code\n    * There *may* be multiple possible HTTP status codes per error identifier\n    * The \"List of Error Identifiers\" defines the possible mappings between HTTP status and error identifier\n\n* The `message` contains a human readable concise message describing the error\n    * It *optionally* includes specific information, for example which permission would have been needed to perform an action\n    * It is localized depending on the users preferences\n    * It *must not* include HTML or other kind of markup\n    * Error messages form complete sentences including punctuation\n\n### Example\n\n{\n        \"_type\": \"Error\",\n        \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InternalServerError\",\n        \"message\": \"An internal server error occurred. This is not your fault.\"\n    }\n\n## Embedded error information\n\nErrors might optionally contain embedded objects that contain further information.\n\n### Error details\n\nUnder the embedded key `details` there might be an object describing the error more verbosely. For example if the\nerror affects a specific field, this field could be defined there.\n\n#### Example\n\n{\n        \"_type\": \"Error\",\n        \"errorIdentifier\": \"urn:openproject-org:api:v3:examples:ExampleError\",\n        \"message\": \"This is an example error.\",\n        \"_embedded\": {\n            \"details\": {\n                \"_type\": \"ExampleErrorDetailInformation\",\n                \"erroneousField\": \"subject\"\n            }\n        }\n    }\n\n### Multiple error objects\n\nTo ease implementation of basic clients it is guaranteed that the response body always only contains a single error object.\nHowever it is allowed that an error object *embeds* other error objects under the key `errors`, thereby aggregating them.\n\nThe `errorIdentifier` of such an object is always `urn:openproject-org:api:v3:errors:MultipleErrors`. The message can either describe one of the\nembedded errors or simply state that multiple errors occurred.\n\n#### Example\n\n{\n        \"_type\": \"Error\",\n        \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MultipleErrors\",\n        \"message\": \"Multiple fields violated their constraints.\",\n        \"_embedded\": {\n            \"errors\": [\n                {\n                    \"_type\": \"Error\",\n                    \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:PropertyConstraintViolation\",\n                    \"...\": \"...\"\n                },\n                {\n                    \"_type\": \"Error\",\n                    \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:PropertyConstraintViolation\",\n                    \"...\": \"...\"\n                }\n            ]\n        }\n    }\n\n## List of Error Identifiers\n\n* `urn:openproject-org:api:v3:errors:InvalidQuery` (**HTTP 400**) - The query contained a value that did not match the servers expectation\n\n* `urn:openproject-org:api:v3:errors:InvalidRequestBody` (**HTTP 400**) - The format of the request body did not match the servers expectation\n\n* `urn:openproject-org:api:v3:errors:InvalidRenderContext` (**HTTP 400**) - The client specified a rendering context that does not exist\n\n* `urn:openproject-org:api:v3:errors:InvalidUserStatusTransition` (**HTTP 400**) - The client used an invalid transition in the attempt to change the status of a user account.\n\n* `urn:openproject-org:api:v3:errors:Unauthenticated` (**HTTP 401**) - The client has to authenticate to access the requested resource.\n\n* `urn:openproject-org:api:v3:errors:MissingPermission` (**HTTP 403**) - The client does not have the needed permissions to perform the requested action\n\n* `urn:openproject-org:api:v3:errors:NotFound` (**HTTP 404**) - Default for HTTP 404 when no further information is available\n\n* `urn:openproject-org:api:v3:errors:UpdateConflict` (**HTTP 409**) - The resource changed between GET-ing it and performing an update on it\n\n* `urn:openproject-org:api:v3:errors:TypeNotSupported` (**HTTP 415**) - The request contained data in an unsupported media type (Content-Type)\n\n* `urn:openproject-org:api:v3:errors:PropertyIsReadOnly` (**HTTP 422**) - The client tried to set or change a property that is not writable\n\n* `urn:openproject-org:api:v3:errors:PropertyConstraintViolation` (**HTTP 422**) - The client tried to set a property to an invalid value\n\n* `urn:openproject-org:api:v3:errors:PropertyValueNotAvailableAnymore` (**HTTP 422**) - An unchanged property needs to be changed, because other changes to the resource make it unavailable\n\n* `urn:openproject-org:api:v3:errors:ResourceTypeMismatch` (**HTTP 422**) - A link to a resource of a specific type was expected, but the link to another type of resource was provided\n\n* `urn:openproject-org:api:v3:errors:PropertyFormatError` (**HTTP 422**) - A property value was provided in a format that the server does not understand or accept\n\n* `urn:openproject-org:api:v3:errors:InternalServerError` (**HTTP 500**) - Default for HTTP 500 when no further information is available\n\n* `urn:openproject-org:api:v3:errors:MultipleErrors` - Multiple errors occurred. See the embedded `errors` array for more details.\n\n# Formattable Text\n\nOpenProject supports text formatting in Markdown. Properties that contain formattable text have a special representation in this API. In this specification their\ntype is indicated as `Formattable`. Their representation contains the following properties:\n\n| Property | Description                                        | Type   | Example                            | Supported operations |\n|:--------:| -------------------------------------------------- | ------ | ---------------------------------- | -------------------- |\n| format   | Indicates the formatting language of the raw text  | String | markdown                           | READ                 |\n| raw      | The raw text, as entered by the user               | String | `I **am** formatted!`              | READ / WRITE         |\n| html     | The text converted to HTML according to the format | String | `I <strong>am</strong> formatted!` | READ                 |\n\n`format` can as of today have one of the following values:\n\n* `plain` - only basic formatting, e.g. inserting paragraphs and line breaks into HTML\n\n* `markdown` - formatting using Markdown\n\n* `custom` - There is no apparent formatting rule that transforms the raw version to HTML (only used for read only properties)\n\nNote that `raw` is the only property supporting the **write** operation. A property of type *Formattable* that\nis marked as **read and write**, will only accept changes to the `raw` property. Changes to `format` and `html` will be **silently ignored**.\nIt is thus sufficient to solely provide the `raw` property for changes.\n\nIf the *Formattable* is marked as **read only**, the `raw` attribute also becomes **read only**.\n\n#### Example\n\n{\n        \"format\": \"markdown\",\n        \"raw\": \"I **am** formatted!\",\n        \"html\": \"I <strong>am</strong> formatted!\"\n    }\n\n# Dates, Times and Durations\n\nRepresentation of time related values in this API is done according to [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601).\nIn this specification the following terms will be used as type specifiers (e.g. in tables):\n\n* `Date` - refers to an ISO 8601 date, e.g. \"2014-05-21\"\n\n* `DateTime` - refers to an ISO 8601 combined date and time, e.g. \"2014-05-21T13:37:00Z\"\n\n* `Duration` - refers to an ISO 8601 duration, e.g. \"P1DT18H\"\n\n# Colors\n\nColors are represented in RGB using hexadecimal notation as specified in [CSS Color Module Level 3](http://www.w3.org/TR/css3-color/).\nThat is a `#` followed by either three or six hexadecimal digits.\n\n#### Examples\n\nred:   #ff0000 or #f00\n    green: #00ff00 or #0f0\n    black: #000000 or #000\n    white: #ffffff or #fff\n\n# Digests\n\nDigests (or Hashes) are one way functions that map data of arbitrary size to data of a fixed size.\nIn OpenProject they are for example used to calculate checksums for (attachment) files.\nThe checksum calculated depends on the hashed data and the algorithm used as hash function.\n\nTherefore all digests are represented in the following form:\n\n| Property  | Description                                        | Type   | Example                            |\n|:---------:| -------------------------------------------------- | ------ | ---------------------------------- |\n| algorithm | The algorithm used to compute the digest           | String | md5                                |\n| hash      | The calculated digest in hexadecimal notation      | String | 64c26a8403cd796ea4cf913cda2ee4a9   |\n\n#### Example\n\n{\n        \"algorithm\": \"md5\",\n        \"hash\": \"64c26a8403cd796ea4cf913cda2ee4a9\"\n    }"
        },
        {
            "name": "Collections",
            "description": "Whenever a client calls a resource that can return more than one element, it will receive a collection of elements.\nHowever as collections can become quite large, the API will **not** simply return a JSON array, but a special collection\nobject that will contain the actual elements in its embedded property `elements`.\n\nCollections *may* be paginated, this means that a single response from the server will not contain all elements of the collection,\nbut only a subset. In this case the client can issue further requests to retrieve the remaining elements.\nThere are two ways to access the result pages of a paginated collection:\n\n* offset based pagination\n\n* cursor based pagination\n\nThe available ways of pagination depend on the collection queried. Some collections feature no pagination at all, meaning they\nwill always return all elements. Others might only offer one of the two pagination methods or both of them.\nAn explanation of [offset](#collections-offset-based-pagination) and [cursor](#collections-cursor-based-pagination) based\npagination can be found below the links table.\n\nA collection also carries meta information like the total count of elements in the collection or - in case of a paginated collection -\nthe amount of elements returned in this response and action links to retrieve the remaining elements.\n\n## Local Properties\n\n| Property | Description                                                     | Type    | Availability                |\n|:--------:| --------------------------------------------------------------- | ------- | --------------------------- |\n| total    | The total amount of elements available in the collection        | Integer | always                      |\n| pageSize | Amount of elements that a response will hold                    | Integer | when paginated              |\n| count    | Actual amount of elements in this response                      | Integer | always                      |\n| offset   | The page number that is requested from paginated collection     | Integer | when offset based available |\n| groups   | Summarized information about aggregation groups                 | Object  | when grouping               |\n| totalSums| Aggregations of supported values for elements of the collection | Object  | when showing sums           |\n\n## Links\n\n| Link             | Description                                                              | Availability                |\n|:----------------:| ------------------------------------------------------------------------ | --------------------------- |\n| self             | Link to the current page in the collection                               | always                      |\n| changeSize       | Templated link to change the page size, might change relative position   | when paginated              |\n| jumpTo           | Templated link to jump to a specified offset                             | when offset based available |\n| nextByOffset     | Link to retrieve the following page of elements (offset based)           | when offset based available |\n| previousByOffset | Link to retrieve the preceding page of elements (offset based)           | when offset based available |\n| nextByCursor     | Link to retrieve the elements following the current page (cursor based)  | when cursor based available |\n| previousByCursor | Link to retrieve the elements preceding the current page (cursor based)  | when cursor based available |"
        },
        {
            "name": "Filters",
            "description": "Filter objects can be added to a number of endpoints in the OpenProject APIv3. With them, you can create powerful queries to endpoints to return the data that you want.\n\nThey all share the following basic properties:\n\n- They consist of three items: A property to filter or a specific filter name, one or more values, and a filter operator that defines what query to produce with the given values\n\n- You can combine any number of distinct filters can be added to the endpoint definitions in this API documentation\n\n- A combination of filter objects are treated as an AND filter. OR filters are not yet possible in a single query, but this feature is tracked in https://community.openproject.com/wp/26837\n\n## Filter syntax\n\nThe filter syntax is a JSON object that can be passed as a GET parameter to the endpoints as an URL-encoded JSON string looks like the following:\n\n```\n[\n  { \"<filter name>\": { \"operator\": \"<operator>\", \"values\": [<value>, ...] },\n  ...\n]\n```\n\n**Example**\n\nFiltering the work packages API endpoint for a work package that matches the subject or ID \"12\" and has a status with the ID=5.\n\n```\n[\n  { \"subjectOrId\": { \"operator\": \"**\", values: [\"12\"] } },\n  { \"status\": { \"operator\": \"=\", values: [\"5\"] } }\n]\n```\n\nWith the above JSON stringified and URL-encoded, this can be added to the `/api/v3/work_packages` endpoint using the `filter` parameter to form the URL:\n\n```\nhttps://community.openproject.com/api/v3/work_packages?filters=%5B%7B%22subjectOrId%22:%7B%22operator%22:%22**%22,%22values%22:%5B%2212%22%5D%7D%7D,%7B%22status%22:%7B%22operator%22:%22=%22,%22values%22:%5B%225%22%5D%7D%7D%5D\n```\n\n## Compression\n\nAs the above can become quite long, especially if a lot of filter values are included, the API offers to wrap all query props into a zlib compressed and base64 encoded property (`eprops`).\nThe property will then not only include the filter but the complete query props set (e.g. `pageSize`, `offset` and `columns`. So `eprops` is then a JSON object that is compressed and encoded.\n\n**Example**\n\nInstead of the request\n\n```\nhttps://community.openproject.com/api/v3/work_packages?filters=[%7B%22subjectOrId%22:%7B%22operator%22:%22**%22,%22values%22:[%2212%22]%7D%7D,%7B%22status%22:%7B%22operator%22:%22=%22,%22values%22:[%225%22]%7D%7D]&pageSize=10&sortBy=[[%22id%22,%20%22asc%22]]\n```\n\nWhich in a non URL encoded style would be\n\n```\nhttps://community.openproject.com/api/v3/work_packages?filters=[{\"subjectOrId\":{\"operator\":\"**\",\"values\":[\"12\"]}},{\"status\":{\"operator\":\"=\",\"values\":[\"5\"]}}]&pageSize=10&sortBy=[[\"id\", \"asc\"]]\n```\n\nAll of the props can be put inside a json object\n\n```\n{\n  \"filters\": \"[{\\\"subjectOrId\\\":{\\\"operator\\\":\\\"**\\\",\\\"values\\\":[\\\"12\\\"]}},{\\\"status\\\":{\\\"operator\\\":\\\"=\\\",\\\"values\\\":[\\\"5\\\"]}}]\",\n  \"sortBy\": \"[[\\\"id\\\",\\\"asc\\\"]]\",\n  \"pageSize\": 10\n}\n```\n\nPlease note, that all objects that have to be json (e.g `filters`) will be double encoded.\n\nThat json object can then be compressed and encoded and the result sent over as the combined `eprops` parameter:\n\n```\nhttps://community.openproject.com/api/v3/work_packages?eprops=eJxtjTELwjAUhP%2FLjSWDFVwCLt2cHBz7OsT2VSKFlLwXQUv%2Bu0lXHe%2B7%2B7gN%0As1%2BUo8Ci3wiS7k8e9RovE8EWEFaOTkMsidA0BEN4uSWxFNIT2iNhyNlUV50m%0A%2BaOdf6zTLg0wkBC1e9f3gv20L52Mpa%2Ft6h588x%2BGbQ%2F5C12YN%2BM%3D%0A\n```\n\n## Available filters\n\nThe availability of filters depend on the endpoint you're querying and will be listed in each endpoint definition. For work packages, you can also [start using filters in the work packages module](https://community.openproject.com/projects/openproject/work_packages) to build your query and then simply copy the URL from your browser to get the resulting filter values and their operators.\n\n## Available operators\n\nThe following table is a list of all available operators. Not all endpoints and parameters support all values, but this list serves as a lookup table for identifying and using the operators. When building a filter object, you use the **symbol** listed below.\n\n| Symbol | Description of filtered properties                           | Values array contains      |\n| ------ | ------------------------------------------------------------ | -------------------------- |\n| `=`    | are equal to one of the given value(s)                       | At least one typed value   |\n| `!`    | are not equal one of the given value(s)                      | At least one typed value   |\n| `>=`   | are greater or equal than the given value                    | One numerical value        |\n| `<=`   | are lesser or equal than the given value                     | One numerical value        |\n| `t-`   | are the given number of days in the past                     | 1 integer (days)           |\n| `t+`   | are the given number of days in the future                   | 1 integer (days)           |\n| `<t+`  | are *less than* the given number of days in the future       | 1 integer (days)           |\n| `>t+`  | are *more than* the given number of days in the future       | 1 integer (days)           |\n| `>t-`  | are *less than* the given number of days in the past         | 1 integer (days)           |\n| `<t-`  | are *more than* the given number of days in the past         | 1 integer (days)           |\n| `*`    | are not NULL                                                 | *nothing, values is empty* |\n| `!*`   | are NULL                                                     | *nothing, values is empty* |\n| `**`   | searches the given string in all string-based attributes     | One string value           |\n| `=d`   | are on the given date                                        | 1 ISO8601 date/datetime    |\n| `<>d`  | are between the two given dates.                             | 2 ISO8601 date/datetimes   |\n| `w`    | are in this week                                             | *nothing, values is empty* |\n| `t`    | are today                                                    | *nothing, values is empty* |\n| `~`    | are containing the given words (SQL LIKE) in that order      | At least one string value  |\n| `!~`   | are *not* containing the given words (SQL LIKE) in that order | At least one string value  |\n\n​\n\n**Special operators for work packages**\n\nThere are some additional operators only in use for work packages:\n\n| Symbol | Description of filtered properties         | Values array contains      |\n| ------ | ------------------------------------------ | -------------------------- |\n| `o`    | the status of the work package is *open*   | *nothing, values is empty* |\n| `c`    | the status of the work package is *closed* | *nothing, values is empty* |\n| `ow`   | the work packages have a manual sort order | *nothing, values is empty* |\n\nThere are also relation filters for work packages that have the symbols `blocks/blocked` `children/parent` `follows/precedes` `duplicates/duplicated` `partof/includes` `relates` `requires/required` depending on the direction of the relation and take as value the work package ID that is the target node of the relation."
        },
        {
            "name": "Forms",
            "description": "This API provides forms as a concept to aid in editing or creating resources. The goal of forms is to:\n\n* make writable properties of a resource discoverable\n\n* show to which values a property can be set\n\n* validate changes to a resource and indicate validation errors\n\nThese benefits aside, a client can freely choose to immediately edit a resource without prior validation by a form.\nIn the case of an invalid request the edit will fail and return appropriate errors nevertheless.\n\nA form is associated to a single resource and aids in performing changes on that resource.\nWhen posting to a form endpoint with an empty request body or an empty JSON object,\nyou will receive an initial form for the associated resource.\nSubsequent calls to the form should contain a single JSON object as described by the form.\n\n## Actions\n\n| Link                | Description                                                           | Condition                        |\n|:-------------------:| --------------------------------------------------------------------- | -------------------------------- |\n| validate            | Validate changes, show errors and allowed values for changed resource |                                  |\n| commit              | Actually perform changes to the resource                              | form content is valid            |\n| previewMarkup       | Post markup (e.g. markdown) here to receive an HTML-rendered response |                                  |\n\n## Linked Properties\n\n| Link                | Description                                      | Type          | Nullable | Supported operations |\n|:-------------------:| ------------------------------------------------ | ------------- | -------- | -------------------- |\n| self                | This form                                        | Form          |          | READ                 |\n\n## Embedded Properties:\n\nApart from the linked properties, forms contain always three other embedded properties:\n\n* `payload`\n\n* `schema`\n\n* `validationErrors`\n\nTheir purpose is explained below.\n\n### Payload\n\nThe payload contains an edited version of the resource that will be modified when committing the form.\nThis representation contains all writable properties of the resource and reflects all changes that the latest call to **validate** included,\nthereby acting as a preview for the changes.\n\nIn case the client tries to set the value to something invalid, the invalid change is also reflected here. However a validation error (see below)\nindicates that a commit of this payload would fail.\n\nIt might happen that setting one property affects the allowed values for another property. Thus by changing a property A\nthe current value of another property B might become invalid. If the client did not yet touch the value of B, the payload will\ncontain a default value for that property. Nevertheless the client will also receive an appropriate validation error for value B.\n\nThe content of this element *can* be used as a template for the request body of a call to **validate** or **commit**.\n\nA call to **validate** and **commit** does not need to include all properties that were defined in the `payload` section.\nIt is only necessary to include the properties that you want to change, as well as the `lockVersion` if one is present.\nHowever you *may* include all the properties sent in the `payload` section.\n\n### Schema\n\nThe schema embedded in a form is a normal [schema describing the underlying resource](#schema).\nHowever, the embedded schema can change with each revalidation of the form.\nFor example it might be possible, that changing the type of a work package affects its available properties,\nas well as possible values for certain properties.\nAs this makes the embedded schema very dynamic, it is not included as a static link.\n\n### Validation Errors\n\nLike a [schema](#schema) the validation errors build a dictionary where the key is a property name.\nEach value is an error object that indicates the error that occurred validating the corresponding property.\nThere are only key value pairs for properties that failed validation, the element is empty if all validations succeeded.\n\nHowever note that even in the case of validation errors, the response you receive from the form endpoint will be an HTTP 200.\nThat is because the main purpose of a form is helping the client to sort out validation errors.\n\n### Meta object\n\nForm resources may have an additional `_meta` object that contains parameters to be sent together with the resource,\nbut that do not belong to the resource itself. For example, parameters on if and how to send notifications for the action\nperformed with the API request can be sent.\n\nEach individual endpoint will describe their meta properties, if available."
        },
        {
            "name": "Actions & Capabilities",
            "description": "An action is a change one can trigger within the OpenProject instance.\nThis could be creating a work package, exporting work packages or updating a user.\nAn action can also be something where the user is able to be involved so where the user is in the passive role\ne.g. when being assigned a work package.\n\nA capability combines an action with a context and a principal. It thus communicates, which principal can carry out\n(or be passively involved) which action within a certain context. E.g. a user might have the capability of creating work packages\nwithin a project.\n\nIn other words, an action is independent of a principal and context while a capability is\na relation between an action, the context and the principal.\n\nThe actions are most of the time derived from permissions which can be configured via the administrative UI where an administrator\nselects from a set of permissions to be granted per role. But there are other cases, e.g. in order to become assignee or responsible of a work package, a user has\nto have a role which allows having work packages assigned which is not a permission.\n\nEven though user might have a capability, it might still not be possible to carry out the action\nbecause some other requirement is not met.\nE.g. A user might have the capability to update work packages, but if a particular work package is\nin a readonly state, that work package cannot be updated.\n\n*Only a small set of actions that actually already exist in the system are currently exposed via\nthe api. They will be added over time.*\n\n## Action\n\nAn action describes what can be carried out within the application. Until an action becomes assigned,\nwhich turns it into a capability, it remains in the state of \"could be\".\n\n### Linked Properties\n\n|  Link               | Description                              | Type             | Constraints                                                    | Supported operations |\n|:-------------------:|----------------------------------------- | -------------    | -------------------------------------------------------------- | -------------------- |\n| self                | The action                               | Action           | not null                                                       | READ                 |\n\n### Local Properties\n\n| Property    | Description                                                                             | Type        | Constraints    | Supported operations |\n| :---------: | ---------------------------------------------                                           | ----------- | -----------    | -------------------- |\n| id          | Identifier for the action                                                               | String      | Not null       | READ                 |\n| name        | A human readable name for the action *Not yet implemented*                              | String      | Not null       | READ                 |\n| description | Describes what can be done by principals having that action   *Not yet implemented*     | String      | Not null       | READ                 |\n| modules     | Clusters the actions into groups into which they belong logically *Not yet implemented* | []String    | Not null       | READ                 |\n\n## Capabilities\n\nActions can be assigned to a principal by assigning roles to that principal. E.g. a user might receive the 'work_packages/show'\naction by having a role called reader assigned within a project.\n\nWhenever a principal is assigned an action within a context, the principal has additional capabilities.\n\nExactly which actions can be gained by having a role assigned depends on the configuration of that role.\nThe configuration is adaptable by admins within the administration of the OpenProject instance.\n\n### Linked Properties\n\n|  Link               | Description                                                                                           | Type             | Constraints     | Supported operations |\n|-------------------- |-----------------------------------------                                                              | -------------    | --------------- | -------------------- |\n| self                | The capability                                                                                        |                  |                 |                      |\n| action              | The action the principal is granted                                                                   | Action           | not null        | READ                 |\n| context             | The context the principal has this the action in. This is typically a project or the global context.  | Project or null  |                 | READ                 |\n| principal           | The principal being allowed the action.                                                               | Action           | not null        | READ                 |\n\n### Local Properties\n\n| Property    | Description                                   | Type        | Constraints        | Supported operations |\n| :---------: | --------------------------------------------- | ----------- | -----------        | -------------------- |\n| id          | Identifier for the action                     | String      | Not null           | READ                 |\n| name        | A human readable name for the action          | String      | Not null           | READ                 |"
        },
        {
            "name": "Activities",
            "description": "## Local Properties\n\n| Property    | Description      | Type                 | Constraints | Supported operations |\n| :---------: | -------------    | ----                 | ----------- | -------------------- |\n| id          | Activity id      | Integer              | x > 0       | READ                 |\n| version     | Activity version | Integer              | x > 0       | READ                 |\n| comment     |                  | Formattable          |             | READ / WRITE         |\n| details     |                  | Array of Formattable |             | READ                 |\n| createdAt   | Time of creation | DateTime             |             | READ                 |\n\nActivity can be either _type Activity or _type Activity::Comment."
        },
        {
            "name": "Attachments",
            "description": "Attachments are files that were uploaded to OpenProject. Each attachment belongs to a single\ncontainer (e.g. a work package or a board message).\n\n## Actions\n\n| Link                | Description                                                          | Condition                                                                                          |\n|:-------------------:|----------------------------------------------------------------------| --------------------------------------------                                                       |\n| delete              | Deletes this attachment                                              | **Permission**: edit on attachment container or being the author for attachments without container |\n\n## Linked Properties\n\n|  Link            | Description                                         | Type          | Constraints | Supported operations |\n|:----------------:| --------------------------------------------------- | ------------- | ----------- | -------------------- |\n| self             | This attachment                                     | Attachment    | not null    | READ                 |\n| container        | The object (e.g. WorkPackage) housing the attachment| Anything      | not null    | READ                 |\n| author           | The user who uploaded the attachment                | User          | not null    | READ                 |\n| downloadLocation | Direct download link to the attachment              | -             | not null    | READ                 |\n\n## Local Properties\n\n| Property     | Description                                     | Type        | Constraints | Supported operations |\n|:------------:| ----------------------------------------------- | ----------- | ----------- | -------------------- |\n| id           | Attachment's id                                 | Integer     | x > 0       | READ                 |\n| title        | The name of the file                            | String      | not null    | READ                 |\n| fileName     | The name of the uploaded file                   | String      | not null    | READ                 |\n| fileSize     | The size of the uploaded file in Bytes          | Integer     | x >= 0      | READ                 |\n| description  | A user provided description of the file         | Formattable | not null    | READ                 |\n| contentType  | The files MIME-Type as determined by the server | String      | not null    | READ                 |\n| digest       | A checksum for the files content                | Digest      | not null    | READ                 |\n| createdAt    | Time of creation                                | DateTime    | not null    | READ                 |"
        },
        {
            "name": "Budgets",
            "description": "*Note: Budgets are currently only implemented as a stub. Further properties of budgets might be added at a future date, however they will require the view budget permission to be displayed.*\n\n## Linked Properties:\n\n|  Link     | Description                                 | Type          | Constraints           | Supported operations |\n|:---------:|-------------------------------------------- | ------------- | --------------------- | -------------------- |\n| self      | This budget                                 | Budget        | not null              | READ                 |\n\n## Properties\n\n| Property    | Description                                 | Type        | Constraints | Supported operations | Condition                   |\n| :---------: | ------------------------------------------- | ----------- | ----------- | -------------------- | --------------------------- |\n| id          | Budget id                                   | Integer     | x > 0       | READ                 |                             |\n| subject     | Budget name                                 | String      | not empty   | READ                 |                             |"
        },
        {
            "name": "Categories",
            "description": "## Linked Properties\n\n|  Link           | Description                                         | Type          | Constraints | Supported operations |\n|:---------------:| --------------------------------------------------- | ------------- | ----------- | -------------------- |\n| self            | This category                                       | Category      | not null    | READ                 |\n| project         | The project of this category                        | Project       | not null    | READ                 |\n| defaultAssignee | Default assignee for work packages of this category | User          |             | READ                 |\n\n## Local Properties\n\n| Property   | Description   | Type    | Constraints | Supported operations |\n| :--------: | ------------- | ------- | ----------- | -------------------- |\n| id         | Category id   | Integer | x > 0       | READ                 |\n| name       | Category name | String  |             | READ                 |"
        },
        {
            "name": "Configuration",
            "description": "The configuration endpoint allows to read certain configuration parameters of the OpenProject instance.\nNote that there is no 1:1 relationship between this endpoint and the settings you can find in your settings.yml.\n\nFor now this endpoint will only allow access to settings deemed useful for a client to know in general.\n\nAs clients might rely on the combination of both, the system settings as well as the current user's preferences, the resource\nembeds the current user's preferences so client can fetch both with one request.\n\n| Link                | Description                                      | Type            | Nullable | Supported operations |\n|:-------------------:| ------------------------------------------------ | -------------   | -------- | -------------------- |\n| self                | The configuration                                | Configuration   |          | READ                 |\n| userPreferences     | The preferences of the current user              | UserPreferences |          | READ                 |\n\n## Local Properties\n\n| Property                  | Description                                        | Type       | Condition                         | Supported operations |\n| :-----------------------: | -------------------------------------------------- | ---------- | --------------------------------- | -------------------- |\n| maximumAttachmentFileSize | The maximum allowed size of an attachment in Bytes | Integer    |                                   | READ                 |\n| perPageOptions            | Page size steps to be offered in paginated list UI | Integer[]  |                                   | READ                 |"
        },
        {
            "name": "Custom actions",
            "description": "Custom actions are a preconfigured set of changes that are applied to a work package.\n\nCurrently, this resource is a stub. The conditions and changes defined for the custom action are not yet present in the resource.\n\n## Actions\n\n| Link                | Description                                                          | Condition                                                                                                                        |\n|:-------------------:|----------------------------------------------------------------------| ---------------------------------------                                                                                          |\n| executeImmediately  | Apply the action to a work package                                   |\n\n## Linked Properties\n\n| Property         | Description                                               | Type                  | Constraints                      | Supported operations |\n| :--------------: | ------------------------------------------------------    | -----------           | -------------------------------- | -------------------- |\n| self             | This custom action                                        | CustomAction          | not null                         | READ                 |\n\n## Local Properties\n\n| Property         | Description                                              | Type                  | Constraints  | Supported operations |\n| :--------------: | ------------------------------------------------------   | -----------           | ------------ | -------------------- |\n| id               | Custom action id                                         | Integer               | x > 0        | READ                 |\n| name             | The user selected name of the custom action              | String                |              | READ                 |\n| description      | A text describing the custom action                      | String                |              | READ                 |"
        },
        {
            "name": "Custom Objects",
            "description": "## Linked Properties\n\n|  Link         | Description               | Type          | Constraints | Supported operations |\n|:-------------:|-------------------------- | ------------- | ----------- | -------------------- |\n| self          | This custom object        | CustomObject  | not null    | READ                 |\n\n## Local Properties\n\n| Property         | Description                                    | Type     | Constraints | Supported operations |\n|:----------------:| ---------------------------------------------- | -------- | ----------- | -------------------- |\n| id               | The identifier                                 | Integer  |             | READ                 |\n| value            | The value defined for this custom object       | String   |             | READ                 |\n\nCustom objects are options of list custom fields."
        },
        {
            "name": "Documents",
            "description": "A document is a file containing a list of attachments.\n\n*Please note, that the endpoint is only a stub for now.*\n\n## Actions\n\nNone yet\n\n## Linked Properties\n\n| Link          | Description                               | Type           | Constraints           | Supported operations | Condition                                 |\n| :-----------: | -------------------------------------     | -------------  | --------------------- | -------------------- | ----------------------------------------- |\n| self          | This document                             | Document       | not null              | READ                 |                                           |\n| project       | The project the document is in            | Project        | not null              | READ / WRITE         |                                           |\n| attachments   | The attachments belonging to the document | []Attachment   | not null              | READ / WRITE         |                                           |\n\n## Local Properties\n\n| Property     | Description                                               | Type     | Constraints                                          | Supported operations | Condition                                                   |\n| :----------: | --------------------------------------------------------- | -------- | ---------------------------------------------------- | -------------------- | ----------------------------------------------------------- |\n| id           | Document's id                                             | Integer  | x > 0                                                | READ                 |                                                             |\n| title        | The title chosen for the collection of documents          | String   | max 60 characters                                    | READ                 |                                                             |\n| description  | A text describing the documents                           | String   |                                                      | READ                 |                                                             |\n| createdAt    | The time the document was created at                      | DateTime |                                                      | READ                 |                                                             |"
        },
        {
            "name": "Grids",
            "description": "A grid is a layout for a page or a part of the page of the OpenProject application. It defines the structure (number of rows and number of columns) as well as the contents of the page.\n\nThe contents is defined by `GridWidget`s. While a `GridWidget` is it's own type, it is not a resource in it's own right as it is an intrinsic part of a `Grid`.\n\nDepending on what page a grid is defined for, different widgets may be eligible to be placed on the grid. The page might also define the permissions needed for accessing, creating or modifying the grid.\n\nCurrently, the following pages employ grids:\n\n+ /my/page: The my page every user has. Only a user can access or modify their \"my page\".\n\n*The delete action is not yet supported*\n\n## Actions\n\n| Link                | Description                                                          | Condition                                                                                           |\n|:-------------------:| -------------------------------------------------------------------- | ----------------------------------------------------------------                                    |\n| updateImmediately   | Directly perform edits on this grid                                  | **Permission**: depends on the page the grid is defined for                                         |\n| update              | Validate edits on the grid via a form resource before committing     | **Permission**: depends on the page the grid is defined for                                         |\n\n## Linked Properties\n\n| Link          | Description                                                       | Type                | Constraints           | Supported operations | Condition                                     |\n| :-----------: | --------------------------------------------------------------    | -------------       | --------------------- | -------------------- | -----------------------------------------     |\n| self          | This grid                                                         | Grid                | not null              | READ                 |                                               |\n| page          | The url of the page the grid is defined for                       | url                 | not null              | READ / WRITE         | The page cannot be changed after the creation |\n\n## Local Properties\n\n| Property     | Description                                               | Type          | Constraints                                          | Supported operations | Condition                   |\n| :----------: | --------------------------------------------------------- | --------      | ---------------------------------------------------- | -------------------- | --------------              |\n| id           | Grid's id                                                 | Integer       | x > 0                                                | READ                 |                             |\n| rowCount     | The number of rows the grid has                           | Integer       | x > 0                                                | READ/WRITE           |                             |\n| columnCount  | The number of columns the grid has                        | Integer       | x > 0                                                | READ/WRITE           |                             |\n| widgets      | The set of `GridWidget`s selected for the grid            | []GridWidget  |                                                      | READ/WRITE           | The widgets cannot overlap  |\n| createdAt    | The time the grid was created                             | DateTime      |                                                      | READ                 |                             |\n| updatedAt    | The time the grid was last updated                        | DateTime      |                                                      | READ                 |                             |\n\n## GridWidget Properties\n\n| Property     | Description                                                                        | Type     | Constraints                                          | Supported operations | Condition      |\n| :----------: | ---------------------------------------------------------                          | -------- | ---------------------------------------------------- | -------------------- | -------------- |\n| identifier   | The kind of widget                                                                 | String   | not null                                             | READ/WRITE           |                |\n| startRow     | The row the widget starts at (1 based)                                             | Integer  | x > 0, x < rowCount of the grid, x < endRow          | READ/WRITE           |                |\n| endRow       | The row the widget ends. The widget's area does not include the row itself.        | Integer  | x > 0, x <= rowCount of the grid, x > startRow       | READ/WRITE           |                |\n| startColumn  | The column the widget starts at (1 based)                                          | Integer  | x > 0, x < columnCount of the grid, x < endColumn    | READ/WRITE           |                |\n| endColumn    | The column the widget ends. The widget's area does not include the column itself.  | Integer  | x > 0, x <= columnCount of the grid, x > startColumn | READ/WRITE           |                |\n| options      | An options hash of values customizable by the widget                               | JSON     |                                                      | READ/WRITE           |                |"
        },
        {
            "name": "Groups",
            "description": "Groups are collections of users. They support assigning/unassigning multiple users to/from a project in one operation.\n\nThis resource does not yet have the form and schema endpoints. But as all properties are static, clients should still be able\nto work with this resource.\n\n## Actions\n\n## Actions\n\n| Link                | Description                                                          | Condition                                                        |\n|:-------------------:| -------------------------------------------------------------------- | ---------------------------------------------------------------- |\n| delete              | Deletes the group.                                                   | **Permission**: Administrator                                    |\n| updateImmediately   | Updates the group's attributes.                                      | **Permission**: Administrator                                    |\n\n## Linked Properties\n\n|  Link              | Description                                                                                                                                                           | Type              | Constraints           | Supported operations | Condition                                                                |\n|:-----------:       |--------------------------------------------------------------                                                                                                         | -------------     | --------------------- | -------------------- | -----------------------------------------                                |\n| self               | This group                                                                                                                                                            | Group             | not null              | READ                 |                                                                          |\n| memberships        | Link to collection of all the group's memberships. The list will only include the memberships in projects in which the requesting user has the necessary permissions. | MemberCollection  |                       | READ                 | **Permission**: view members or manage members in any project            |\n| members            | The list all all the users that are members of the group                                                                                                              | UserCollection    |                       | READ/WRITE           | **Permission**: manage members in any project to read & admin to write   |\n\n## Local Properties\n\n| Property     | Description                                                | Type     | Constraints                                          | Supported operations | Condition                                                      |\n| :----------: | ---------------------------------------------------------  | -------- | ---------------------------------------------------- | -------------------- | -----------------------------------------------------------    |\n| id           | Group's id                                                 | Integer  | x > 0                                                | READ                 |                                                                |\n| name         | Group's full name, formatting depends on instance settings | String   |                                                      | READ/WRITE           | Admin to write                                                 |\n| createdAt    | Time of creation                                           | DateTime |                                                      | READ                 | Only visible by admins                                         |\n| updatedAt    | Time of the most recent change to the user                 | DateTime |                                                      | READ                 | Only visible by admins                                         |"
        },
        {
            "name": "Help texts",
            "description": "## Linked Properties\n\n|  Link         | Description               | Type          | Constraints | Supported operations |\n|:-------------:|-------------------------- | ------------- | ----------- | -------------------- |\n| self          | This help text            | HelpText      | not null    | READ                 |\n| editText      | Edit the help text entry  | text/htm      | Admin       | READ                 |\n\n## Local Properties\n\n| Property           | Description                 | Type                 | Constraints | Supported operations |\n| :---------:        | --------------------------- | -------------------- | ----------- | -------------------- |\n| id                 | Help text id                | Integer              | x > 0       | READ                 |\n| attribute          | Attribute name              | String               |             | READ                 |\n| attributeCaption   | Attribute caption           | String               |             | READ                 |\n| helpText           | Help text content           | Formattable          |             | READ                 |"
        },
        {
            "name": "Memberships",
            "description": "Users and groups can become members of a project. Such a membership will also have one or more roles assigned to it. By that, memberships control the permissions a user has within a project.\n\nThere are also memberships that do not govern the permissions within a certain project but rather govern global permissions. Among the permissions that can be granted like this are the permissions to \"Create project\" and \"Manage users\". Those memberships do not have a project associated.\n\nWhen creating and updating memberships, a custom message can be sent to users of new and updated memberships. This message can be provided within the `_meta` group.\n\n## Linked Properties\n\n|  Link               | Description                                                   | Type             | Constraints                                                    | Supported operations |\n|:-------------------:|-----------------------------------------                      | -------------    | -------------------------------------------------------------- | -------------------- |\n| self                | This membership                                               | Membership       | not null                                                       | READ                 |\n| project             | The project for which the membership is granted               | Project          |                                                                | READ                 |\n| roles               | The list of roles the user or group is granted in the project | RoleCollection   | not null                                                       | READ                 |\n| principal           | The user or group that was granted membership                 | User or Group    | not null                                                       | READ                 |\n\n## Local Properties\n\n| Property    | Description                                   | Type        | Constraints                                        | Supported operations |\n| :---------: | --------------------------------------------- | ----------- | -----------                                        | -------------------- |\n| id          | Membership id                                 | Integer     | x > 0                                              | READ                 |\n| createdAt   | Time of creation                              | DateTime    | not null                                           | READ                 |\n| updatedAt   | Time of latest update                         | DateTime    | not null                                           | READ                 |\n\n## Meta parameters\n\n| Meta property              | Description                                                                          | Type         | Constraints | Supported operations |Condition |\n| :------------------------: | ---------------------------------------------------                                  | ----         | ----------- | -------------------- |----------|\n| notificationMessage        | The message included in the email(s) send to the users of new or updated memberships | Formattable  |             | READ/WRITE           |          |"
        },
        {
            "name": "News",
            "description": "News are articles written by users in order to inform other users of important information.\n\n## Actions\n\nNone yet\n\n## Linked Properties\n\n| Link          | Description                          | Type           | Constraints           | Supported operations | Condition                                 |\n| :-----------: | -------------------------------------| -------------  | --------------------- | -------------------- | ----------------------------------------- |\n| self          | This news                            | News           | not null              | READ                 |                                           |\n| project       | The project the news is situated in  | Project        | not null              | READ / WRITE         |                                           |\n| author        | The user having created the news     | User           | not null              | READ                 |                                           |\n\n## Local Properties\n\n| Property     | Description                                               | Type     | Constraints                                          | Supported operations | Condition                                                   |\n| :----------: | --------------------------------------------------------- | -------- | ---------------------------------------------------- | -------------------- | ----------------------------------------------------------- |\n| id           | News' id                                                  | Integer  | x > 0                                                | READ                 |                                                             |\n| title        | The headline of the news                                  | String   | max 60 characters                                    | READ                 |                                                             |\n| summary      | A short summary                                           | String   | max 255 characters                                   | READ                 |                                                             |\n| description  | The main body of the news with all the details            | String   |                                                      | READ                 |                                                             |\n| createdAt    | The time the news was created at                          | DateTime |                                                      | READ                 |                                                             |"
        },
        {
            "name": "Posts",
            "description": "Represents a post in a board. Posts are also referred to as messages in the application.\n\n*This resource is currently a stub*\n\n## Actions\n\n| Link                | Description                    | Condition                                                                                                                        |\n|:-------------------:|--------------------------------| ---------------------------------------                                                                                          |\n| addAttachment       | Attach a file to the post      | **Permission**: edit messages           |\n\n## Linked Properties\n\n| Property         | Description                                            | Type        | Constraints    | Supported operations |\n| :--------------: | ------------------------------------------------------ | ----------- | -------------- | -------------------- |\n| self             | This post                                              | Post        | not null       | READ                 |\n| attachments      | The files attached to this post                        | Collection  |                | READ                 |\n| project          | The project the post belongs to                        | Project     | not null       | READ                 |\n\n## Local Properties\n\n| Property         | Description                                 | Type                  | Constraints                          | Supported operations |\n| :--------------: | ------------------------------------------- | -----------           | ------------------------------------ | -------------------- |\n| id               | Identifier of this post                     | Integer               | x > 0                                | READ                 |\n| subject          | The post's subject                          | String                | not null                             | READ                 |"
        },
        {
            "name": "Principals",
            "description": "Principals are the superclass of users, groups and placeholder users. This end point returns all principals\nwithin a joined collection but can be filtered to e.g. only return groups or users.\n\n## Linked Properties\n\nSee [user](#users) and [group](#groups)\n\n## Local Properties\n\nSee [user](#users) and [group](#groups) and placeholder users (TDB)"
        },
        {
            "name": "Priorities",
            "description": "## Linked Properties\n\n|  Link     | Description                                 | Type          | Constraints           | Supported operations |\n|:---------:|-------------------------------------------- | ------------- | --------------------- | -------------------- |\n| self      | This priority                               | Priority      | not null              | READ                 |\n\n## Local Properties\n\n| Property    | Description                                 | Type       | Constraints | Supported operations |\n| :---------: | ------------------------------------------- | ---------- | ----------- | -------------------- |\n| id          | Priority id                                 | Integer    | x > 0       | READ                 |\n| name        | Priority name                               | String     | not empty   | READ                 |\n| position    | Sort index of the priority                  | Integer    | x > 0       | READ                 |\n| isDefault   | Indicates whether this is the default value | Boolean    |             | READ                 |\n| isActive    | Indicates whether the priority is available | Boolean    |             | READ                 |"
        },
        {
            "name": "Projects",
            "description": "Projects are containers structuring the information (e.g. work packages, wikis) into smaller groups. They can be used in a classic project management approach but also when structuring work by departments.\n\nAs containers, they also control behaviour of the elements within them. One of the most important aspects of this is that projects limit permissions by having members with a certain permission set (roles) assigned to them.\n\n## Actions\n\n| Link                         | Description                                                          | Condition                         |\n|:--------------------------:  |----------------------------------------------------------------------| --------------------------------- |\n| update                       | Form endpoint that aids in updating this project                     | **Permission**: edit project      |\n| updateImmediately            | Directly update this project                                         | **Permission**: edit project      |\n| delete                       | Delete this project                                                  | **Permission**: admin             |\n| createWorkPackage            | Form endpoint that aids in preparing and creating a work package     | **Permission**: add work packages |\n| createWorkPackageImmediately | Directly creates a work package in the project                       | **Permission**: add work packages |\n\n## Linked Properties\n\n| Link         | Description                                                                                           | Type          | Constraints | Supported operations |Condition                                              |\n| :----------: | -------------                                                                                         | ----          | ----------- | -------------------- |-----------------------------------------              |\n| self         | This project                                                                                          | Project       | not null    | READ                 |                                                       |\n| categories   | Categories available in this project                                                                  | Collection    | not null    | READ                 |                                                       |\n| types        | Types available in this project                                                                       | Collection    | not null    | READ                 | **Permission**: view work packages or manage types    |\n| versions     | Versions available in this project                                                                    | Collection    | not null    | READ                 | **Permission**: view work packages or manage versions |\n| memberships  | Memberships in the  project                                                                           | Collection    | not null    | READ                 | **Permission**: view members                          |\n| workPackages | Work Packages of this project                                                                         | Collection    | not null    | READ                 |                                                       |\n| parent       | Parent project of the project                                                                         | Project       |             | READ/WRITE           | **Permission** edit project                           |\n| status       | Denotes the status of the project, so whether the project is on track, at risk or is having trouble.  | ProjectStatus |             | READ/WRITE           | **Permission** edit project                           |\n\nDepending on custom fields defined for projects, additional links might exist.\n\nNote, that the parent link may contain the \"undisclosed uri\" `urn:openproject-org:api:v3:undisclosed` in case a\nparent project is defined but the client lacks permission to see it. See the\n[general introduction into links' properties](/api/basic-objects/#header-local-properties-1) for more information.\n\n## Local Properties\n\n| Property               | Description                                                                                           | Type              | Constraints                          | Supported operations |\n| :---------------------:| -------------                                                                                         | ----              | -----------                          | -------------------- |\n| id                     | Projects' id                                                                                          | Integer           | x > 0                                | READ/WRITE           |\n| identifier             |                                                                                                       | String            |                                      | READ/WRITE           |\n| name                   |                                                                                                       | String            |                                      | READ/WRITE           |\n| active                 | Indicates whether the project is currently active or already archived                                 | Boolean           |                                      | READ/WRITE           |\n| statusExplanation      | A text detailing and explaining why the project has the reported status                               | Formattable       |                                      | READ/WRITE           |\n| public                 | Indicates whether the project is accessible for everybody                                             | Boolean           |                                      | READ/WRITE           |\n| description            |                                                                                                       | Formattable       |                                      | READ/WRITE           |\n| createdAt              | Time of creation                                                                                      | DateTime          |                                      | READ                 |\n| updatedAt              | Time of the most recent change to the project                                                         | DateTime          |                                      | READ                 |\n\nDepending on custom fields defined for projects, additional properties might exist."
        },
        {
            "name": "Queries",
            "description": "A query defines how work packages can be filtered and displayed. Clients can define a query once, store it, and use it later on to load the same set of filters.\n\n## Actions\n\n| Link                | Description                                                          | Condition                                                                                                                        |\n|:-------------------:|----------------------------------------------------------------------| ---------------------------------------                                                                                          |\n| star                | Elevates the query to the status of 'starred'                        | **Permission**: save queries for own queries, manage public queries for public queries; Only present if query is not yet starred |\n| unstar              | Removes the 'starred' status                                         | **Permission**: save queries for own queries, manage public queries for public queries; Only present if query is starred         |\n| update              | Use the Form based process to verify the query before persisting     | **Permission**: view work packages                                                                                               |\n| updateImmediately   | Persist the query without using a Form based process for guidance    | **Permission**: save queries for own queries, manage public queries for public queries;                                          |\n\n## Linked Properties\n\n| Property               | Description                                                                                                                       | Type                  | Constraints                                 | Supported operations |\n| :--------------------: | ------------------------------------------------------                                                                            | --------------------- | ------------------------------------------- | -------------------- |\n| self                   | This query                                                                                                                        | Query                 | not null                                    | READ                 |\n| user                   | The user that owns this query                                                                                                     | User                  | not null                                    | READ                 |\n| project                | The project on which this query operates                                                                                          | Project               |                                             | READ                 |\n| columns                | Ordered list of QueryColumns. The columns, when mapped to WorkPackage properties determine which WorkPackage properties to display | []QueryColumn        |                                             | READ                 |\n| highlightedAttributes  | **Only with valid Enterprise Token available:** List of QueryColumns that should get highlighted when `highlightingMode` is set to `inline`.                                      | []QueryColumn         |                                             | READ                 |\n| sortBy                 | Ordered list of QuerySortBys. Indicates the WorkPackage property the results will be ordered by as well as the direction          | []QuerySortBy         |                                             | READ                 |\n| groupBy                | The WorkPackage property results of this query are grouped by                                                                     | String                |                                             | READ                 |\n| results                | The list of work packages returned by applying the filters, sorting and grouping defined in the query                             | WorkPackageCollection |                                             | READ                 |\n| schema                 | This query's schema                                                                                                               | Schema                |                                             | READ                 |\n\nPlease note, that all the properties listed above will also be embedded when individual queries are returned but will not be embedded when a list of queries is returned. Whether the properties are embedded or not may be subject to change in the future.\n\n## Local Properties\n\n| Property         | Description                                                                                               | Type                  | Constraints                          | Supported operations |\n| :--------------: | ------------------------------------------------------                                                    | -----------           | ------------------------------------ | -------------------- |\n| id               | Query id                                                                                                  | Integer               | x > 0                                | READ                 |\n| name             | Query name                                                                                                | String                |                                      | READ                 |\n| filters          | A set of QueryFilters which will be applied to the work packages to determine the resulting work packages | []QueryFilterInstance |                                      | READ                 |\n| sums             | Should sums (of supported properties) be shown?                                                           | Boolean               |                                      | READ                 |\n| timelineVisible  | Should the timeline mode be shown?                                                                        | Boolean               |                                      | READ                 |\n| timelineLabels   | Which labels are shown in the timeline, empty when default                                                | QueryTimelineLabels   |                                      | READ                 |\n| timelineZoomLevel| Which zoom level should the timeline be rendered in?                                                      | String                | days, weeks, months, quarters, years | READ                 |\n| highlightingMode | Which highlighting mode should the table have?                                                            | String                | none, inline, status, priority, type | READ                 |\n| showHierarchies  | Should the hierarchy mode be enabled?                                                                     | Boolean               |                                      | READ                 |\n| hidden           | Should the query be hidden from the query list?                                                           | Boolean               |                                      | READ                 |\n| public           | Can users besides the owner see the query?                                                                | Boolean               |                                      | READ                 |\n| starred          | Should the query be highlighted to the user?                                                              | Boolean               |                                      | READ                 |\n| createdAt        | Time of creation                                                                                          | DateTime              | not null                             | READ                 |\n| updatedAt        | Time of the most recent change to the query                                                               |           DateTime    | not null                             | READ                 |\n\nA query that is not assigned to a project (`\"project\": null`) is called a global query. Global queries filter work packages regardless of the project they are assigned to. As such, a different set of filters exists for those queries.\n\n## Query Filter Instance\n\nA QueryFilterInstance defines a filtering applied to the list of work packages. As such it contains:\n\n* the filter type (`QueryFilter`) used\n\n* the operator (`QueryOperator`) used\n\n* the list of values\n\nThe list of values can either consist of a list of links or of a list of strings. If the values are primitive (e.g. Integer, Boolean, Date) they will be displayed as strings and the QueryFilterInstance will have a `values` property.\n\n```\n  {\n    \"_type\": \"DueDateQueryFilter\",\n    \"name\": \"Finish date\",\n    \"values\": [\n      \"1\"\n    ],\n    \"_links\": {\n      \"filter\": {\n        \"href\": \"/api/v3/queries/filters/dueDate\",\n        \"title\": \"Finish date\"\n      },\n      \"operator\": {\n        \"href\": \"/api/v3/queries/operators/<t+\",\n        \"title\": \"in less than\"\n      }\n      \"schema\": {\n        \"href\": \"/api/v3/queries/filter_instance_schemas/dueDate\"\n      }\n    }\n  }\n```\n\nIf the values are nonprimitive (e.g. User, Project), they will be listed as objects and the QueryFilterInstance will have a `values` link.\n\n```\n  {\n    \"_type\": \"AssigneeQueryFilter\",\n    \"name\": \"Assignee\",\n    \"_links\": {\n      \"filter\": {\n        \"href\": \"/api/v3/queries/filters/assignee\",\n        \"title\": \"Assignee\"\n      },\n      \"operator\": {\n        \"href\": \"/api/v3/queries/operators/=\",\n        \"title\": \"is\"\n      },\n      \"schema\": {\n        \"href\": \"/api/v3/queries/filter_instance_schemas/assignee\"\n      },\n      \"values\": [\n        {\n          \"href\": \"/api/v3/users/1\",\n          \"title\": \"OpenProject Admin\"\n        }\n      ]\n    }\n  }\n\n```"
        },
        {
            "name": "Query Columns",
            "description": "A QueryColumn can be referenced by a Query to denote the work package properties the client should display for the work packages returned as query results. The columns maps to the WorkPackage by the id property. QueryColumns exist in three types: QueryColumn::Property, QueryColumn::RelationToType and QueryColumn::RelationOfType.\n\n## Actions\n\n| Link                | Description                                                          | Condition                              |\n|:-------------------:|----------------------------------------------------------------------| ---------------------------------------|\n\nAs of now, no actions are defined.\n\n## Linked Properties\n\n| Property         | Description                                            | Type                                                                              | Constraints                                    | Supported operations |\n| :--------------: | ------------------------------------------------------ | -----------                                                                       | --------------------------------               | -------------------- |\n| self             | This query column                                      | QueryColumn::Property, QueryColumn::RelationToType or QueryColumn::RelationOfType | not null                                       | READ                 |\n|  type            | The type relations point to                            | Type                                                                              | not null, exists only on QueryColumn::Relation | READ                 |\n\n## Local Properties\n\n| Property         | Description                                            | Type        | Constraints                      | Supported operations |\n| :--------------: | ------------------------------------------------------ | ----------- | -------------------------------- | -------------------- |\n| id               | Query column id                                        | String      | not null                         | READ                 |\n| name             | Query column name                                      | String      | not null                         | READ                 |"
        },
        {
            "name": "Query Filters",
            "description": "A QueryFilter can be referenced by a filter instance defined for a Query to denote the filtering applied to the query's work package results. This resource is not an instance of an applicable filter but rather the type an applicable filter can have.\n\n## Actions\n\n| Link                | Description                                                          | Condition                              |\n|:-------------------:|----------------------------------------------------------------------| ---------------------------------------|\n\nAs of now, no actions are defined.\n\n## Linked Properties\n\n| Property         | Description                                            | Type        | Constraints                      | Supported operations |\n| :--------------: | ------------------------------------------------------ | ----------- | -------------------------------- | -------------------- |\n| self             | This query filter                                      | QueryFilter | not null                         | READ                 |\n\n## Local Properties\n\n| Property         | Description                                            | Type        | Constraints                      | Supported operations |\n| :--------------: | ------------------------------------------------------ | ----------- | -------------------------------- | -------------------- |\n| id               | QueryFilter id                                         | String      | not null                         | READ                 |"
        },
        {
            "name": "Query Operators",
            "description": "A QueryOperator can be referenced by a QueryFilter to denote the operator to be applied to the filter relation.\n\n## Actions\n\n| Link                | Description                                                          | Condition                              |\n|:-------------------:|----------------------------------------------------------------------| ---------------------------------------|\n\nAs of now, no actions are defined.\n\n## Linked Properties\n\n| Property         | Description                                            | Type          | Constraints                      | Supported operations |\n| :--------------: | ------------------------------------------------------ | -----------   | -------------------------------- | -------------------- |\n| self             | This query operator                                    | QueryOperator | not null                         | READ                 |\n\n## Local Properties\n\n| Property         | Description                                            | Type        | Constraints                      | Supported operations |\n| :--------------: | ------------------------------------------------------ | ----------- | -------------------------------- | -------------------- |\n| id               | Query operator id                                      | String      | not null                         | READ                 |\n| name             | Query operator name                                    | String      | not null                         | READ                 |"
        },
        {
            "name": "Query Sort Bys",
            "description": "A QuerySortBy can be referenced by a Query to denote the sorting applied to the query's work package results. It consists of the columns to sort by as well as the direction (ascending/descending)\n\n## Actions\n\n| Link                | Description                                                          | Condition                              |\n|:-------------------:|----------------------------------------------------------------------| ---------------------------------------|\n\nAs of now, no actions are defined.\n\n## Linked Properties\n\n| Property         | Description                                                                                                                                                                                                               | Type        | Constraints                      | Supported operations |\n| :--------------: | ------------------------------------------------------                                                                                                                                                                    | ----------- | -------------------------------- | -------------------- |\n| self             | This query sort by                                                                                                                                                                                                        | QuerySortBy | not null                         | READ                 |\n| column           | The QueryColumn to sort on.                                                                                                                                                                                               | QueryColumn | not null                         | READ                 |\n| direction        | The direction the QueryColumn is to be sorted in. This property is identified by a URI (`urn:openproject-org:api:v3:queries:directions:asc` or `urn:openproject-org:api:v3:queries:directions:desc`) instead of by a URL. |             | not null                         | READ                 |\n\n## Local Properties\n\n| Property         | Description                                            | Type        | Constraints                      | Supported operations |\n| :--------------: | ------------------------------------------------------ | ----------- | -------------------------------- | -------------------- |\n| id               | QuerySortBy id                                         | String      | not null                         | READ                 |\n| name             | QuerySortBy name                                       | String      | not null                         | READ                 |"
        },
        {
            "name": "Query Filter Instance Schema",
            "description": "A QueryFilterInstanceSchema is a Schema specifically for describing QueryFilterInstances. Because the behaviour of FilterInstances, with regards to the `values` property, differs from one another depending on the chosen Filter, the QueryFilterInstanceSchema explicitly lists the dependencies in its `_dependencies` property. As the property causing the difference is the selected Filter, that property is linked. Apart from that, a QueryFilterInstanceSchema has the same structure a Schema does.\n\n## Linked Properties\n\n| Link                  | Description                                         | Type                      | Constraints | Supported operations |\n| :-------------------: | ----------------------------------------            | -------------             | --------    | -------------------- |\n| self                  | This QueryFilterInstanceSchema (same as for schema) | QueryFilterInstanceSchema | not null    | READ                 |\n| filter                | The filter for which this schema is specific        | Filter                    | not null    | READ                 |\n\n## Local Properties\n\n| Property         | Description                                            | Type         | Constraints                      | Supported operations |\n| :--------------: | ------------------------------------------------------ | ------------ | -------------------------------- | -------------------- |\n| name             | Describes the name attribute                           | Field schema | not null                         | READ                 |\n| filter           | QuerySortBy name                                       | Field schema | not null                         | READ                 |"
        },
        {
            "name": "Relations",
            "description": "Work packages may be related to each other in different ways.\n\n```\n+--------------+                            +--------------+\n|              | 1                        1 |              |\n| Work package +-------------+--------------+ Work package |\n|              | from        |           to |              |\n+--------------+             |              +--------------+\n                      +------+-------+\n                      |   Relation   |\n                      +--------------+\n                      | type         |\n                      | reverseType  |\n                      | description  |\n                      | delay        |\n                      +--------------+\n```\n\n## Actions\n\n| Link                | Description                                                          | Condition                                     |\n|:-------------------:| -------------------------------------------------------------------- | --------------------------------------------- |\n| update              | Updates the relation between two work packages via a form            | **Permission**: manage work package relations |\n| updateImmediately   | Updates the relation between two work packages                       | **Permission**: manage work package relations |\n| delete              | Destroys the relation between the two work packages                  | **Permission**: manage work package relations |\n\n## Linked Properties\n\n| Link          | Description                           | Type          | Constraints | Supported operations | Condition                                     |\n|:-------------:|-------------------------------------- | ------------- | ----------- | -------------------- | --------------------------------------------- |\n| self          | This relation                         | Relation      | not null    | READ                 | **Permission**: view work packages            |\n| schema        | The schema of this relation           | Schema        | not null    | READ                 |                                               |\n| from          | The emanating work package            | WorkPackage   | not null    | READ                 | **Permission**: view work packages            |\n| to            | The work package the relation ends in | WorkPackage   | not null    | READ                 | **Permission**: view work packages            |\n\n## Local Properties\n\n| Property         | Description                                                   | Type    | Constraints                                                                                                   | Supported operations |\n| :---------------:| ------------------------------------------------------------- | ------- | ------------------------------------------------------------------------------------------------------------- | -------------------- |\n| id               | Relation ID                                                   | Integer | x > 0                                                                                                         | READ                 |\n| name             | The internationalized name of this kind of relation           | String  |                                                                                                               | READ\n| type             | Which kind of relation (blocks, precedes, etc.)               | String  | in: relates, duplicates, duplicated, blocks, blocked, precedes, follows, includes, partof, requires, required | READ / WRITE         |\n| reverseType      | The kind of relation from the other WP's perspective          | String  | in: relates, duplicates, duplicated, blocks, blocked, precedes, follows, includes, partof, requires, required | READ                 |\n| description      | Short text further describing the relation                    | String  |                                                                                                               | READ / WRITE         |\n| delay*           | The delay in days between closing of `from` and start of `to` | Integer | x >= 0                                                                                                        | READ / WRITE         |\n\n\\* Only applicable for some relation types such as \"follows\". You can check using the relation by schema\nendpoint at `/api/v3/relations/schema/{type}`."
        },
        {
            "name": "Previewing",
            "description": "Throughout OpenProject user input for many properties can be formatted using *Markdown*.\nUsing the appropriate rendering endpoint it is possible to render custom formatted inputs into HTML and thus\nreceive a preview of the rendered text.\n\nThe request to a rendering endpoint must always have a MIME-Type of `text/plain`.\nThe request body is the actual string that shall be rendered as HTML string."
        },
        {
            "name": "Revisions",
            "description": "Revisions are sets of updates to files in the context of repositories linked in OpenProject.\n\n## Linked Properties\n\n|  Link            | Description                                                                                       | Type          | Constraints | Supported operations |\n|:----------------:| --------------------------------------------------------------------------------------------------| ------------- | ----------- | -------------------- |\n| self             | This revision                                                                                     | Revision      | not null    | READ                 |\n| project          | The project to which the revision belongs                                                         | Project       | not null    | READ                 |\n| author           | The user that added this revision, if the authorName was mapped to a user in OpenProject          | User          |             | READ                 |\n| showRevision     | A URL to the repository view (outside APIv3) showing this revision                                | -             | not null    | READ                 |\n\n## Local Properties\n\n| Property                | Description                                                                                                                                                 | Type        | Constraints | Supported operations |\n|:-----------------------:| ------------------------------------------------------------------------------------------------------------------------------------------------------------| ----------- | ----------- | -------------------- |\n| id                      | Revision's id, assigned by OpenProject                                                                                                                      | Integer     | x > 0       | READ                 |\n| identifier              | The raw SCM identifier of the revision (e.g. full SHA hash)                                                                                                 | String      | not null    | READ                 |\n| formattedIdentifier     | The SCM identifier of the revision, formatted (e.g. shortened unambiguous SHA hash). May be identical to identifier in many cases                           | String      | not null    | READ                 |\n| authorName              | The name of the author that committed this revision. Note that this name is retrieved from the repository and does not identify a user in OpenProject.      | String      | not null    | READ                 |\n| message                 | The commit message of the revision                                                                                                                          | Formattable | not null    | READ                 |\n| createdAt               | The time this revision was committed to the repository                                                                                                      | DateTime    | not null    | READ                 |"
        },
        {
            "name": "Roles",
            "description": "When principals (groups or users) are assigned to a project, they are receive roles in that project. Roles regulate access to specific resources by having permissions configured for them.\n\nCurrently, this is only a stub.\n\n## Linked Properties\n\n| Link                  | Description                               | Type          | Constraints                    | Supported operations |\n| :-------------------: | ----------------------------------------- | ------------- | -------------------------------| -------------------- |\n| self                  | This role                                 | Role          | not null                       | READ                 |\n\n## Local Properties\n\n| Property    | Description                                   | Type        | Constraints | Supported operations |\n| :---------: | --------------------------------------------- | ----------- | ----------- | -------------------- |\n| id          | Role id                                       | Integer     | x > 0       | READ                 |\n| name        | Role name                                     | String      | not null    | READ                 |"
        },
        {
            "name": "Root",
            "description": "The root resource contains links to available resources in the API. By following these links\na client should be able to discover further resources in the API.\n\n*Note: Currently there is no list action for projects available.*\n*A client will therefore have to know links to projects and can't (yet) discover them.*\n\n| Link                  | Description                                      | Type            | Nullable | Supported operations | Condition                                        |\n| :-------------------: | ------------------------------------------------ | --------------- | -------- | -------------------- | ---------                                        |\n| configuration         | The configuration of this OpenProject instance   | Configuration   |          | READ                 |                                                  |\n| user                  | The user currently logged-in                     | User            |          | READ                 | logged in                                        |\n| userPreferences       | The preferences of the logged-in user            | UserPreference  |          | READ                 | logged in                                        |\n| priorities            | List of available priorities                     | Collection      |          | READ                 | **Permission** View work packages in any project |\n| statuses              | List of available work package statuses          | Collection      |          | READ                 | **Permission** View work packages in any project |\n| types                 | List of available work package types             | Collection      |          | READ                 | **Permission** View work packages in any project |\n| workPackages          | List of all work packages                        | Collection      |          | READ                 | **Permission** View work packages in any project |\n| users                 | List of all users                                | Collection      |          | READ                 | **Permission** Administrator                     |\n\n## Local Properties\n\n| Property                  | Description                                          | Type       | Condition                                | Supported operations |\n| :-----------------------: | ---------------------------------------------------- | ---------- | ---------------------------------        | -------------------- |\n| instanceName              | The name of the OpenProject instance                 | String     |                                          | READ                 |\n| coreVersion               | The OpenProject core version number for the instance | String     | **Permission** requires admin privileges | READ                 |"
        },
        {
            "name": "Schemas",
            "description": "The schema provides more detailed information about the properties of a resource.\nThe schema is represented by a dictionary containing names of resource properties as keys\nand objects describing the corresponding property as values.\nThese objects are called **field schema** and form the core of the schema representation,\neach of them can contain its own `_links` and `_embedded` section.\n\n## Linked Properties\n\n| Link                | Description                              | Type          | Nullable | Supported operations |\n|:-------------------:| ---------------------------------------- | ------------- | -------- | -------------------- |\n| self                | This schema                              | Schema        |          | READ                 |\n\n## Local Properties\n\n| Property            | Description                                                                        | Type             |\n| :-----------------: | ---------------------------------------------------------------------------------- | ---------------- |\n| _dependencies       | A list of dependencies between one property's value and another property           | SchemaDependency |\n\nThe `_dependencies` property contains the list of dependencies that exist between the value selected for one of the properties of the described resource and the resource's structure. Depending on the value, additional properties might exist or properties might have other values allowed to be assigned. See [SchemaDependency](#schema-dependencies) for more information.\n\n# Field schema\n\n## Linked Properties\n\n| Property             | Description                                                    | Conditions                                           |\n| :--------------:     | -------------------------------------------------------------- | ---------------------------------------------        |\n| allowedValues        | List of resources that are assignable by the current user.     | Will not exist if `allowedValuesSchemas` is present. |\n| allowedValuesSchemas | Link to schemas further describing the property.               | Will not exist if `allowedValues` is present.        |\n\nThe `allowedValues` can either contain a list of canonical links or just a single link to a collection resource.\nThis is an optimization to allow efficient handling of both small resource lists (that can be enumerated inline) and large\nresource lists (requiring one or more separate requests).\n\nThe `allowedValuesSchemas` will on rare occasions (e.g. for a [Query](#query)) replace `allowedValues`. This is done when there is no fixed set of allowed values. Instead, the allowed values will have to follow a schema, or one of a list of schemas, in its own right.\n\nOnly one of the links (`allowedValues`, `allowedValuesSchemas`) will exist for any given property.\n\n## Local Properties\n\n| Property          | Description                                                                        | Type         | Default |\n|:-----------------:| ---------------------------------------------------------------------------------- | ------------ | ------- |\n| name              | Human readable name of the property as it could be displayed in a UI               | String       |         |\n| type              | The data type of the properties values                                             | MetaType     |         |\n| minLength         | The value of the property must at least contain the specified amount of characters | Integer      | 0       |\n| maxLength         | The value of the property must at most contain the specified amount of characters  | Integer      | ∞       |\n| regularExpression | The value of the property must match the given regular expression (if not null)    | String       | null    |\n| required          | If true this property is not nullable                                              | Boolean      | true    |\n| writable          | If false it is not allowed to **change** the properties value                      | Boolean      | true    |\n| location          | If present, contains a reference to the location of the property in the JSON       | String       |         |\n| description       | If present, contains a formattable, human readable description                     | Formattable  |         |\n\nAll of the above properties that do not have a default value *must* be present in the schema.\nFor properties that have a default value, the client can assume the default value, if the property is missing.\n\nNote that regular expressions used in the API follow the rules of [Ruby Regular Expressions](http://www.ruby-doc.org/core-2.2.6/Regexp.html).\n\n### Location property\n\nThe location property gives a hint as to where to find the property if it is not contained in the set of local attributes.\nFor example, for linked properties, the location attribute of the schema will contain `_links`. The property will then be found in the resource\nunder the path `_links.propertyName`.\n\nFor the default attributes to be added on the top level of the resource, the location attribute will not be set.\n\n# Schema Dependencies\n\nA SchemaDependency describes the dependencies between a value chosen for a resource's property and the resource's structure. By that, additional properties or changes in a property are described. A SchemaDependency will never describe a property to disappear, only to appear. As such it always provides additional information. For a property that is depending on another propertie's value, this can result in not being listed in the resource's schema itself at all. This will be the case if the existence of the a property as a whole will be dependent. If only one of the aspects (e.g. *writable*) of the property changes with the selected value, the property itself will already be listed in the schema, but it will lack the dependent aspect.\n\nGiven that SchemaDependencies will only add information, and the content type of JSON, a client should be able to join the two objects, the schema and the dependency, into one object easily.\n\nSchemaDependencies are always embedded inside a Schema's `_dependencies` attribute. As such, they are not independently existing resources. Consequently, they do not have a `self` reference.\n\n## Linked Properties\n\n| Link                | Description                              | Type          | Nullable | Supported operations |\n|:-------------------:| ---------------------------------------- | ------------- | -------- | -------------------- |\n\nA SchemaDependency does not have any links.\n\n## Local Properties\n\n| Property            | Description                                                                        | Type             |\n| :-----------------: | ---------------------------------------------------------------------------------- | ---------------- |\n| on                  | The name of the property on which the dependency exists                            | string           |\n| dependencies        | The additions to a schema grouped by the value of the depending property           | object           |\n\nThe following excerpt exemplifies the objects that can be found as a value of the `dependencies` property:\n\n```\n{\n  \"_type\": \"SchemaDependency\",\n  \"on\": \"someProperty\",\n  \"dependencies\": {\n    \"1\": {\n      \"loremIpsum\": {\n        \"type\": \"User\",\n        \"name\": \"Lorem ipsum\",\n        \"required\": true,\n        \"hasDefault\": false,\n        \"writable\": true,\n        \"location\": \"_links\",\n        \"description\": {\n            \"format\": \"markdown\",\n            \"raw\": \"A description for field Lorem ipsum. This may contain [links](https://example.com).\",\n            \"html\": \"<p>A description for field Lorem ipsum. This may contain <a href=\\\"https://exampel.com\\\">links</a>.</p>\"\n        };\n        \"_links\": {\n          \"allowedValues\": {\n            \"href\": \"/api/v3/some/path/to/users\"\n          }\n        }\n      }\n    },\n    \"2\": {\n      \"loremIpsum\": {\n        \"type\": \"User\",\n        \"name\": \"Lorem ipsum\",\n        \"required\": true,\n        \"hasDefault\": false,\n        \"writable\": true,\n        \"location\": \"_links\",\n        \"_links\": {\n          \"allowedValues\": {\n            \"href\": \"/api/v3/a/totally/different/path/to/other/users\"\n          }\n        }\n      }\n    },\n    \"3\": {\n      \"loremIpsum\": {\n        \"type\": \"User\",\n        \"name\": \"Lorem ipsum\",\n        \"required\": true,\n        \"hasDefault\": false,\n        \"writable\": false,\n        \"location\": \"_links\",\n      }\n    },\n    \"4\": {}\n  }\n}\n```\n\nGiven the example above, the client has to add the property `loremIpsum` to the schema if the depending property is `1`, `2` or `3`.\nIf it is `4` the property does not exist.\nThe property will not be writable if the value is `3`.\nThe values allowed to be set differ between having `1` or `2` selected for the depending property.\n\nBecause of the limitation of JSON objects, all keys will be strings, even when the depending value is actually something different (e.g. Integer, Date).\nThis is also true for resources in which case the url of the resource is used as the key."
        },
        {
            "name": "Statuses",
            "description": "## Linked Properties\n\n|  Link         | Description               | Type          | Constraints | Supported operations |\n|:-------------:|-------------------------- | ------------- | ----------- | -------------------- |\n| self          | This status               | Status        | not null    | READ                 |\n\n## Local Properties\n\n| Property         | Description                                                   | Type    | Constraints   | Supported operations |\n| :--------:       | -------------                                                 | ------- | -----------   | -------------------- |\n| id               | Status id                                                     | Integer | x > 0         | READ                 |\n| name             | Status name                                                   | String  |               | READ                 |\n| position         | Sort index of the status                                      | Integer |               | READ                 |\n| isDefault        |                                                               | Boolean |               | READ                 |\n| isClosed         | are tickets of this status considered closed?                 | Boolean |               | READ                 |\n| isReadonly       | are tickets of this status read only?                         | Boolean |               | READ                 |\n| defaultDoneRatio | The percentageDone being applied when changing to this status | Integer | 0 <= x <= 100 | READ                 |"
        },
        {
            "name": "Time Entries",
            "description": "## Actions\n\n| Link                | Description                                                                | Condition                                                                                           |\n|:-------------------:| -------------------------------------------------------------------------- | ----------------------------------------------------------------                                    |\n| updateImmediately   | Directly perform edits on this time entry                                  | **Permission**: 'edit time entries' or 'edit own time entries' if the time entry belongs to the user |\n| update              | Form endpoint that aids in preparing and performing edits on a TimeEntry   | **Permission**: 'edit time entries' or 'edit own time entries' if the time entry belongs to the user |\n| delete              | Delete this time entry                                                     | **Permission**: 'edit time entries' or 'edit own time entries' if the time entry belongs to the user |\n\n## Linked Properties\n\n| Link          | Description                                                                                                                             | Type                | Constraints           | Supported operations | Condition                                 |\n| :-----------: | --------------------------------------------------------------                                                                          | -------------       | --------------------- | -------------------- | ----------------------------------------- |\n| self          | This time entry                                                                                                                         | TimeEntry           | not null              | READ                 |                                           |\n| project       | The project the time entry is bundled in. The project might be different from the work package's project once the workPackage is moved. | Project             | not null              | READ / WRITE         |                                           |\n| workPackage   | The work package the time entry is created on                                                                                           | WorkPackage         |                       | READ / WRITE         |                                           |\n| user          | The user the time entry tracks expenditures for                                                                                         | User                | not null              | READ                 |                                           |\n| activity      | The time entry activity the time entry is categorized as                                                                                | TimeEntriesActivity | not null              | READ / WRITE         |                                           |\n\nDepending on custom fields defined for time entries, additional links might exist.\n\nTime entries are either linked to a work package or to a project. If they are linked to a project, the work package reference is empty. If they are linked to a work package, the project reference is filled up automatically to point to the work package's project.\n\n## Local Properties\n\n| Property     | Description                                               | Type     | Constraints                                          | Supported operations | Condition                                                   |\n| :----------: | --------------------------------------------------------- | -------- | ---------------------------------------------------- | -------------------- | ----------------------------------------------------------- |\n| id           | Time entries' id                                          | Integer  | x > 0                                                | READ                 |                                                             |\n| comment      | A text provided by the user detailing the time entry      | String   | max 255 characters                                   | READ / WRITE         |                                                             |\n| spentOn      | The date the expenditure is booked for                    | Date     |                                                      | READ / WRITE         |                                                             |\n| hours        | The time quantifying the expenditure                      | Time     |                                                      | READ / WRITE         |                                                             |\n| createdAt    | The time the time entry was created                       | DateTime |                                                      | READ                 |                                                             |\n| updatedAt    | The time the time entry was last updated                  | DateTime |                                                      | READ                 |                                                             |\n\nDepending on custom fields defined for time entries, additional properties might exist."
        },
        {
            "name": "Time Entry Activities",
            "description": "Time entries are classified by an activity which is one item of a set of user defined activities (e.g. Design, Specification, Development).\n\n## Actions\n\nNone\n\n## Linked Properties\n\n| Link          | Description                                                    | Type                | Constraints           | Supported operations | Condition                                 |\n| :-----------: | -------------------------------------------------------------- | -------------       | --------------------- | -------------------- | ----------------------------------------- |\n| self          | This time entry activity                                       | TimeEntriesActivity | not null              | READ                 |                                           |\n| projects      | List of projects the time entry is active in                   | []Project           | not null              | READ / WRITE         |                                           |\n\n## Local Properties\n\n| Property     | Description                                                  | Type     | Constraints                                          | Supported operations | Condition                                                   |\n| :----------: | ---------------------------------------------------------    | -------- | ---------------------------------------------------- | -------------------- | ----------------------------------------------------------- |\n| id           | Time entries' id                                             | Integer  | x > 0                                                | READ                 |                                                             |\n| name         | The human readable name chosen for this activity             | String   | max 30 characters                                    | READ                 |                                                             |\n| position     | The rank the activity has in a list of activities            | Date     |                                                      | READ                 |                                                             |\n| default      | Flag to signal whether this activity is the default activity | Boolean  |                                                      | READ                 |                                                             |"
        },
        {
            "name": "Types",
            "description": "## Linked Properties\n\n|  Link         | Description               | Type          | Constraints | Supported operations |\n|:-------------:|-------------------------- | ------------- | ----------- | -------------------- |\n| self          | This type                 | Type          | not null    | READ                 |\n\n## Local Properties\n\n| Property         | Description                                    | Type     | Constraints | Supported operations |\n|:----------------:| ---------------------------------------------- | -------- | ----------- | -------------------- |\n| id               | Type id                                        | Integer  | x > 0       | READ                 |\n| name             | Type name                                      | String   |             | READ                 |\n| color            | The color used to represent this type          | Color    |             | READ                 |\n| position         | Sort index of the type                         | Integer  |             | READ                 |\n| isDefault        |                                                | Boolean  |             | READ                 |\n| isMilestone      | Do tickets of this type represent a milestone? | Boolean  |             | READ                 |\n| createdAt        | Time of creation                               | DateTime |             | READ                 |\n| updatedAt        | Time of the most recent change to the user     | DateTime |             | READ                 |"
        },
        {
            "name": "UserPreferences",
            "description": "## Linked Properties\n\n|  Link     | Description                                              | Type           | Constraints           | Supported operations |\n|:---------:|----------------------------------------------------------| -------------- | --------------------- | -------------------- |\n| self      | This UserPreferences                                     | UserPreferences| not null              | READ                 |\n| user      | The user that this preference belongs to                 | User           | not null              | READ                 |\n\n## Local Properties\n\n| Property               | Description                                                | Type       | Constraints | Supported operations |\n|:----------------------:| -----------------------------------------------------------| ---------- | ----------- | -------------------- |\n| hideMail               | Hide mail address from other users                         | Boolean    |             | READ / WRITE         |\n| timeZone               | Current selected time zone                                 | String     |             | READ / WRITE         |\n| commentSortDescending  | Sort comments in descending order                          | Boolean    |             | READ / WRITE         |\n| warnOnLeavingUnsaved   | Issue warning when leaving a page with unsaved text        | Boolean    |             | READ / WRITE         |\n| accessibilityMode      | Enable accessibility mode                                  | Boolean    |             | READ / WRITE         |"
        },
        {
            "name": "Users",
            "description": "## Actions\n\n| Link                | Description                                                          | Condition                                                        |\n|:-------------------:| -------------------------------------------------------------------- | ---------------------------------------------------------------- |\n| lock                | Restrict the user from logging in and performing any actions         | not locked; **Permission**: Administrator                        |\n| show                | Link to the OpenProject user page (HTML)                             |                                                                  |\n| unlock              | Allow a locked user to login and act again                           | locked; **Permission**: Administrator                            |\n| updateImmediately   | Updates the user's attributes.                                       | **Permission**: Administrator, manage_user global permission       |\n| delete              | Permanently remove a user from the instance                          | **Permission**: Administrator, self-delete                       |\n\n## Linked Properties\n\n|  Link       | Description                                                                                                                                                          | Type              | Constraints           | Supported operations | Condition                                                     |\n|:-----------:|--------------------------------------------------------------                                                                                                        | -------------     | --------------------- | -------------------- | -----------------------------------------                     |\n| self        | This user                                                                                                                                                            | User              | not null              | READ                 |                                                               |\n| auth_source | Link to the user's auth source (endpoint not yet implemented)                                                                                                        | AuthSource        |                       | READ / WRITE         | **Permission**: Administrator                                 |\n| members     | Link to collection of all the user's memberships. The list will only include the memberships in projects in which the requesting user has the necessary permissions. | MemberCollection  |                       | READ                 | **Permission**: view members or manage members in any project |\n\nDepending on custom fields defined for users, additional links might exist.\n\n## Local Properties\n\n| Property     | Description                                               | Type     | Constraints                                          | Supported operations | Condition                                                                             |\n| :----------: | --------------------------------------------------------- | -------- | ---------------------------------------------------- | -------------------- | -----------------------------------------------------------                           |\n| id           | User's id                                                 | Integer  | x > 0                                                | READ                 |                                                                                       |\n| login        | User's login name                                         | String   | unique, 256 max length                               | READ / WRITE         | **Permission**: Administrator, manage_user global permission                            |\n| firstName    | User's first name                                         | String   | 30 max length                                        | READ / WRITE         | **Permission**: Administrator, manage_user global permission                            |\n| lastName     | User's last name                                          | String   | 30 max length                                        | READ / WRITE         | **Permission**: Administrator, manage_user global permission                            |\n| name         | User's full name, formatting depends on instance settings | String   |                                                      | READ                 |                                                                                       |\n| email        | User's email address                                      | String   | unique, 60 max length                                | READ / WRITE         | E-Mail address not hidden, **Permission**: Administrator, manage_user global permission |\n| admin        | Flag indicating whether or not the user is an admin       | Boolean  | in: [true, false]                                    | READ / WRITE         | **Permission**: Administrator                                                         |\n| avatar       | URL to user's avatar                                      | Url      |                                                      | READ                 |                                                                                       |\n| status       | The current activation status of the user (see below)     | String   | in: [\"active\", \"registered\", \"locked\", \"invited\"]    | READ                 |                                                                                       |\n| language     | User's language                                           | String   | ISO 639-1                                            | READ / WRITE         | **Permission**: Administrator, manage_user global permission                            |\n| password     | User's password for the default password authentication   | String   |                                                      | WRITE                | **Permission**: Administrator                                                         |\n| identity_url | User's identity_url for OmniAuth authentication           | String   |                                                      | READ / WRITE         | **Permission**: Administrator                                                         |\n| createdAt    | Time of creation                                          | DateTime |                                                      | READ                 |                                                                                       |\n| updatedAt    | Time of the most recent change to the user                | DateTime |                                                      | READ                 |                                                                                       |\n\nDepending on custom fields defined for users, additional properties might exist.\n\nThe `status` of a user can be one of:\n\n* `active` - the user can log in with the account right away\n\n* `invited` - the user is invited and is pending registration\n\nIf the user's `status` is set to `active` during creation a means of authentication\nhas to be provided which is one of the following:\n\n* `password` - The password with which the user logs in.\n\n* `auth_source` - Link to an LDAP auth source.\n\n* `identity_url` - The identity URL of an OmniAuth authentication provider.\n\nIf all of these are missing the creation will fail with an \"missing password\" error.\n\nThe `language` is limited to those activated in the system.\n\nDue to data privacy, the user's properties are limited to reveal as little about the user as possible.\nThus `login`, `firstName`, `lastName`, `language`, `createdAt` and `updatedAt` are hidden for all\nusers except for admins or the user themselves.\n\nPlease note that custom fields are not yet supported by the api although the backend supports them."
        },
        {
            "name": "Versions",
            "description": "Work Packages can be assigned to a version. As such, versions serve to group Work Packages into logical units where each group comprises all the work packages that needs to be finished in order for the version to be finished.\n\n## Actions\n\n| Link                | Description                                                              | Condition                              |\n|:-------------------:|--------------------------------------------------------------------------| ---------------------------------------|\n| update              | Form endpoint that aids in preparing and performing edits on the version | **Permission**: manage versions        |\n| updateImmediately   | Directly perform edits on the version                                    | **Permission**: manage versions        |\n\n## Linked Properties\n\n|  Link               | Description                              | Type          | Constraints                                                    | Supported operations |\n|:-------------------:|----------------------------------------- | ------------- | -------------------------------------------------------------- | -------------------- |\n| self                | This version                             | Version       | not null                                                       | READ                 |\n| definingProject     | The project to which the version belongs | Project       | only present if the project is visible for the current user    | READ                 |\n| availableInProjects | Projects where this version can be used  | Projects      | not null                                                       | READ                 |\n\nDepending on custom fields defined for versions, additional linked properties might exist.\n\n## Local Properties\n\n| Property    | Description                                   | Type        | Constraints                                        | Supported operations |\n| :---------: | --------------------------------------------- | ----------- | -----------                                        | -------------------- |\n| id          | Version id                                    | Integer     | x > 0                                              | READ                 |\n| name        | Version name                                  | String      | not null, may not exceed 60 characters             | READ / WRITE         |\n| description |                                               | Formattable |                                                    | READ / WRITE         |\n| startDate   |                                               | Date        |                                                    | READ / WRITE         |\n| endDate     |                                               | Date        |                                                    | READ / WRITE         |\n| status      | The current status of the version             | String      | not null, only 'open', 'finished', 'closed'        | READ / WRITE         |\n| sharing     | The current status of the version             | String      | not null, limited to fixed set as defined by form  | READ / WRITE         |\n| createdAt   | Time of creation                              | DateTime    | not null                                           | READ                 |\n| updatedAt   | Time of the most recent change to the version | DateTime    | not null                                           | READ                 |\n\nDepending on custom fields defined for versions, additional properties might exist."
        },
        {
            "name": "Wiki Pages",
            "description": "Represents an individual page in a project's wiki.\n\n*This resource is currently a stub*\n\n## Actions\n\n| Link                | Description                                                          | Condition                                                                                                                        |\n|:-------------------:|----------------------------------------------------------------------| ---------------------------------------                                                                                          |\n| addAttachment       | Attach a file to the wiki page                                       | **Permission**: edit wiki page      |\n\n## Linked Properties\n\n| Property         | Description                                            | Type        | Constraints    | Supported operations |\n| :--------------: | ------------------------------------------------------ | ----------- | -------------- | -------------------- |\n| self             | This wiki page                                         | WikiPage    | not null       | READ                 |\n| attachments      | The files attached to this wiki page                   | Collection  |                | READ                 |\n| project          | The project the wiki page belongs to                   | Project     | not null       | READ                 |\n\n## Local Properties\n\n| Property         | Description                                 | Type                  | Constraints                          | Supported operations |\n| :--------------: | ------------------------------------------- | -----------           | ------------------------------------ | -------------------- |\n| id               | Identifier of this wiki page                | Integer               | x > 0                                | READ                 |\n| title            | The wiki page's title                       | String                | not null                             | READ                 |"
        },
        {
            "name": "Work Packages",
            "description": "## Actions\n\n| Link                | Description                                                              | Condition                              |\n|:-------------------:|--------------------------------------------------------------------------| ---------------------------------------|\n| addAttachment       | Attach a file to the WP                                                  | **Permission**: edit work package      |\n| addComment          | Post comment to WP                                                       | **Permission**: add work package notes |\n| addRelation         | Adds a relation to this work package.                                    | **Permission**: manage wp relations    |\n| addWatcher          | Add any user to WP watchers                                              | **Permission**: add watcher            |\n| customActions       | Collection of predefined changes that can be applied to the work package |                                        |\n| previewMarkup       | Post markup (in markdown) here to receive an HTML-rendered response      |                                        |\n| removeWatcher       | Remove any user from WP watchers                                         | **Permission**: delete watcher         |\n| unwatch             | Remove current user from WP watchers                                     | logged in; watching                    |\n| update              | Form endpoint that aids in preparing and performing edits on a WP        | **Permission**: edit work package      |\n| updateImmediately   | Directly perform edits on a work package                                 | **Permission**: edit work package      |\n| watch               | Add current user to WP watchers                                          | logged in; not watching                |\n\n## Linked Properties\n\n| Link               | Description                                                                                                                                           | Type         | Constraints                               | Supported operations  | Condition                                 |\n| :----------------: | ----------------------------------------------------------------------------------------------------------------------------------------------------- | ------------ | ------------                              | --------------------- | ----------------------------------------- |\n| self               | This work package                                                                                                                                     | WorkPackage  | not null                                  | READ                  |                                           |\n| schema             | The schema of this work package                                                                                                                       | Schema       | not null                                  | READ                  |                                           |\n| ancestors          | Array of all visible ancestors of the work package, with the root node being the first element                                                        | Collection   | not null                                  | READ                  | **Permission** view work packages         |\n| attachments        | The files attached to this work package                                                                                                               | Collection   | not null                                  | READ / WRITE          |                                           |\n| author             | The person that created the work package                                                                                                              | User         | not null                                  | READ                  |                                           |\n| assignee           | The person that is intended to work on the work package                                                                                               | User         |                                           | READ / WRITE          |                                           |\n| availableWatchers  | All users that can be added to the work package as watchers.                                                                                          | User         |                                           | READ                  | **Permission** add work package watchers  |\n| budget             | The budget this work package is associated to                                                                                                         | Budget       |                                           | READ / WRITE          | **Permission** view cost objects          |\n| category           | The category of the work package                                                                                                                      | Category     |                                           | READ / WRITE          |                                           |\n| children           | Array of all visible children of the work package                                                                                                     | Collection   | not null                                  | READ                  | **Permission** view work packages         |\n| parent             | Parent work package                                                                                                                                   | WorkPackage  | Needs to be visible (to the current user) | READ / WRITE          |                                           |\n| priority           | The priority of the work package                                                                                                                      | Priority     | not null                                  | READ / WRITE          |                                           |\n| project            | The project to which the work package belongs                                                                                                         | Project      | not null                                  | READ / WRITE          |                                           |\n| responsible        | The person that is responsible for the overall outcome                                                                                                | User         |                                           | READ / WRITE          |                                           |\n| relations          | Relations this work package is involved in                                                                                                            | Relation     |                                           | READ                  | **Permission** view work packages         |\n| revisions          | Revisions that are referencing the work package                                                                                                       | Revision     |                                           | READ                  | **Permission** view changesets            |\n| status             | The current status of the work package                                                                                                                | Status       | not null                                  | READ / WRITE          |                                           |\n| timeEntries        | All time entries logged on the work package. Please note that this is a link to an HTML resource for now and as such, the link is subject to change.  | N/A          |                                           | READ                  | **Permission** view time entries          |\n| type               | The type of the work package                                                                                                                          | Type         | not null                                  | READ / WRITE          |                                           |\n| version            | The version associated to the work package                                                                                                            | Version      |                                           | READ / WRITE          |                                           |\n| watchers           | All users that are currently watching this work package                                                                                               | Collection   |                                           | READ                  | **Permission** view work package watchers |\n\n## Local Properties\n\n| Property                | Description                                                                                                                                                                 | Type        | Constraints                                                                                                                                                  | Supported operations | Condition                        |\n| :--------------:        | ------------------------------------------------------                                                                                                                      | ----------- | ------------------------------------------------------------------------------------------------------                                                       | -------------------- | -------------------------------- |\n| id                      | Work package id                                                                                                                                                             | Integer     | x > 0                                                                                                                                                        | READ                 |                                  |\n| lockVersion             | The version of the item as used for optimistic locking                                                                                                                      | Integer     |                                                                                                                                                              | READ                 |                                  |\n| subject                 | Work package subject                                                                                                                                                        | String      | not null; 1 <= length <= 255                                                                                                                                 | READ / WRITE         |                                  |\n| type                    | Name of the work package's type                                                                                                                                             | String      | not null                                                                                                                                                     | READ                 |                                  |\n| description             | The work package description                                                                                                                                                | Formattable |                                                                                                                                                              | READ / WRITE         |                                  |\n| scheduleManually        | If false (default) schedule automatically.                                                                                                                                  | Boolean     |                                                                                                                                                              | READ / WRITE         |                                  |\n| startDate               | Scheduled beginning of a work package                                                                                                                                       | Date        | Cannot be set for parent work packages; must be equal or greater than the earliest possible start date; Exists only on work packages of a non milestone type | READ / WRITE         |                                  |\n| dueDate                 | Scheduled end of a work package                                                                                                                                             | Date        | Cannot be set for parent work packages; must be greater than or equal to the start date; Exists only on work packages of a non milestone type                | READ / WRITE         |                                  |\n| date                    | Date on which a milestone is achieved                                                                                                                                       | Date        | Exists only on work packages of a milestone type                                                                                                             | READ / WRITE         |                                  |\n| derivedStartDate        | Similar to start date but is not set by a client but rather deduced by the work packages's descendants. If manual scheduleManually is active, the two dates can deviate.    | Date        |                                                                                                                                                              | READ                 |                                  |\n| derivedDueDate          | Similar to due date but is not set by a client but rather deduced by the work packages's descendants. If manual scheduleManually is active, the two dates can deviate.      | Date        |                                                                                                                                                              | READ                 |                                  |\n| estimatedTime           | Time a work package likely needs to be completed excluding its descendants                                                                                                  | Duration    |                                                                                                                                                              | READ / WRITE         |                                  |\n| derivedEstimatedTime    | Time a work package likely needs to be completed including its descendants                                                                                                  | Duration    |                                                                                                                                                              | READ                 |                                  |\n| spentTime               | The time booked for this work package by users working on it                                                                                                                | Duration    |                                                                                                                                                              | READ                 | **Permission** view time entries |\n| percentageDone          | Amount of total completion for a work package                                                                                                                               | Integer     | 0 <= x <= 100; Cannot be set for parent work packages                                                                                                        | READ / WRITE         |                                  |\n| createdAt               | Time of creation                                                                                                                                                            | DateTime    |                                                                                                                                                              | READ                 |                                  |\n| updatedAt               | Time of the most recent change to the work package                                                                                                                          | DateTime    |                                                                                                                                                              | READ                 |                                  |\n\nNote that the properties listed here only cover the built-in properties of the OpenProject Core.\nUsing plug-ins and custom fields a work package might contain various additional properties.\nA client can consult the schema information to which the work package links. The schema will contain information about\nall properties of the linking work package, including properties added by plug-ins and custom fields.\n\nCustom fields are identified by a key in the form of `customFieldN`, where `N` is an integer. Depending on their type,\nthey can occur as properties or as linked properties. A client has to consult the schema to resolve\nthe human readable name of custom fields.\n\nProperties that cannot be set directly on parent work packages are inferred from their children instead:\n\n* `startDate` is the earliest start date from its children if manual scheduling is activated.\n\n* `dueDate` is the latest finish date from its children if manual scheduling is activated.\n\n* `estimatedTime` is the sum of estimated times from its children\n\n* `percentageDone` is the weighted average of the sum of its children percentages done. The weight is given by the average of its children estimatedHours. However, if the percentage done is given by a work package's status, then only the status matters and no value is inferred.\n\n`startDate` can also not be earlier than a finish date of any predecessor.\n\nWhile attachments are returned as a link which's content is to be fetched separately, clients can choose to\nreplace the work package's attachments by providing an array of already uploaded [Attachment resources](#attachments) on [create](#work-packages-work-packages-post)\nand [update](#work-packages-work-package-patch). The attachments the work package has had prior to the request will be removed."
        }
    ]
}